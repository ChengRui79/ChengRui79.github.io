<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>the reaction to The Art of Software Testing</title>
    <link href="/2023/04/02/The%20Art%20of%20Software%20Testing/"/>
    <url>/2023/04/02/The%20Art%20of%20Software%20Testing/</url>
    
    <content type="html"><![CDATA[<p>​<p class="note note-primary">本书我最喜欢的一句话：“测试是为发现错误而执行程序的过程”</p></p><p>某种意义上来说，The Art of Software Testing也正是起源于这句话。</p><h2 id="软件测试的心理学与经济学"><a href="#软件测试的心理学与经济学" class="headerlink" title="软件测试的心理学与经济学"></a>软件测试的心理学与经济学</h2><h3 id="心理学：软件测试是什么？意义何在？"><a href="#心理学：软件测试是什么？意义何在？" class="headerlink" title="心理学：软件测试是什么？意义何在？"></a>心理学：软件测试是什么？意义何在？</h3><p>是什么：“测试是为发现错误而执行程序的过程”</p><p>意义：为软件&#x2F;程序增加价值、可靠性、质量</p><p>​人类行为总是具有高度目标性，确立一个目标有着重要的心理学影响。也就是说理想的状态是我们的初始目的被定为证明程序中存在的错误。从这一角度来看，它向我们暗示了测试往往是一个“施虐”的过程。</p><h3 id="经济学：企图发现程序中所存在的所有的错误的想法是不切实际的"><a href="#经济学：企图发现程序中所存在的所有的错误的想法是不切实际的" class="headerlink" title="经济学：企图发现程序中所存在的所有的错误的想法是不切实际的"></a>经济学：企图发现程序中所存在的所有的错误的想法是不切实际的</h3><p>​为了应对其经济学的挑战，测试之前应该建立某种策略。黑盒测试与白盒测试是两种最普遍的策略</p><h4 id="黑盒测试"><a href="#黑盒测试" class="headerlink" title="黑盒测试"></a>黑盒测试</h4><h4 id="白盒测试"><a href="#白盒测试" class="headerlink" title="白盒测试"></a>白盒测试</h4>]]></content>
    
    
    <categories>
      
      <category>reaction</category>
      
      <category>Software Testing</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Software Testing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android_project</title>
    <link href="/2023/04/02/Android-project/"/>
    <url>/2023/04/02/Android-project/</url>
    
    <content type="html"><![CDATA[<h1 id="移动互联网开发技术-期末大作业"><a href="#移动互联网开发技术-期末大作业" class="headerlink" title="移动互联网开发技术 期末大作业"></a>移动互联网开发技术 期末大作业</h1><h1 id="一、任务与要求"><a href="#一、任务与要求" class="headerlink" title="一、任务与要求"></a>一、任务与要求</h1><ol><li><p>任务描述：开发一个班费日常使用记录的APP，记账员记录班费的收支情况，每笔支出需要包含日期、金额、购买的实物照片、购物小票（如果有）、实物的验收人。班级成员可以查看和查询班费的开支情况，可以在1周内（讨论期）对当笔开支提出质疑，班委成员回复质疑，所有质疑和应答全员可见。班级成员半数以上确认且所有质疑经发起人确认可以close的记录，可以标记为已确认状态，之后任何人无权再修改。超过讨论期未close的质疑自动close。</p></li><li><p>鼓励扩展的功能：记录归档、多班级支持。</p></li><li><p>前后端分离，鼓励使用区块链、跨端开发、云平台等新技术。</p></li><li><p>每人独立开发，提交大作业报告1份，5分钟的录屏讲解视频1份，源代码压缩包。</p></li><li><p>时间节点：12月28日上传论文和视频的服务器自动关闭。</p></li></ol><h1 id="二、评分和验收标准"><a href="#二、评分和验收标准" class="headerlink" title="二、评分和验收标准"></a>二、评分和验收标准</h1><p>1.评分标准</p><p><strong>课程考察环节、分值、评价细则与课程目标的对应关系</strong></p><table><thead><tr><th>考察环节</th><th>评价标准</th><th>权重分值&#x2F;100</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>优秀(90-100)</td><td>良好(80-89)</td><td>中等 (70-79)</td><td>及格 (60-69)</td><td>不及格 (&lt;60)</td><td></td><td></td></tr><tr><td>方案  架构</td><td>UI逻辑合理。  数据存储方案合理。  前端和后端的架构和逻辑合理。  后端有访问控制和角色控制和相关逻辑。</td><td>UI逻辑合理。  数据存储方案合理。  前端和后端的架构和逻辑合理。  后端缺少访问控制和角色划分。但业务逻辑或控制逻辑有明显不合理的地方。</td><td>UI逻辑合理。  数据存储方案合理。  后端提供了简单的访问接口，但缺少访问控制。</td><td>UI逻辑合理。  数据存储方案合理。  后端提供了部分访问接口。</td><td>UI逻辑一般。  数据没有远端控制。</td><td>20</td></tr><tr><td>使用工具</td><td>能够在实机和虚拟机上操作演示。  有版本控制。  使用开发工具和技术链配合较好。</td><td>仅能在虚拟机上演示。  有版本控制。  使用了集成开发工具，但各工具配合紧密度一般。</td><td>能在虚拟机上演示。  有版本控制。  使用了单一工具。</td><td>能在虚拟机上演示。  无版本控制。  使用了单一工具。</td><td>无法在虚拟机上演示。</td><td>20</td></tr><tr><td>方法创新</td><td>系统设计有独到见解或设计有较大创新，对课题有较深刻的分析和研究。</td><td>系统设计有所创新，对课题有较正确的分析和研究。</td><td>系统设计正确，论证严密，但见解不多。</td><td>系统设计基本正确，论证基本清楚，但缺乏见解。</td><td>系统设计不对，内容空泛，结构混乱。</td><td>20</td></tr><tr><td>文档质量</td><td>内容准确、完整，文字流畅，排版优美，设计方案内容详实充分。结合核心源代码说明方案的实现。</td><td>内容比较准确、完整，文字比较流畅，排版比较优美，设计方案内容准确。  有源代码说明但对核心代码的把握有偏差。</td><td>内容完整，无大的语法错误，有设计方案内容。  有源代码的copy但缺少说明。</td><td>内容残缺不全，但基本能看懂，有一定的设计方案内容。  源代码缺少说明。</td><td>逻辑混乱，无设计方案内容。  无法对代码给出说明。</td><td>20</td></tr><tr><td>软件质量</td><td>系统有一定的工作量，系统界面优美，软件功能完整，源程序代码规范、清晰、整洁，有较高的质量，无明显bug</td><td>系统界面友好，源程序代码规范，软件质量较好，bug较少</td><td>系统界面一般，源程序代码规范，软件质量一般,bug较多</td><td>系统界面一般，软件质量一般，bug较多，功能基本实现</td><td>软件设计能力差界面一般，软件质量较差，bug较多，功能没有实现</td><td>20</td></tr></tbody></table><h1 id="三、报告内容"><a href="#三、报告内容" class="headerlink" title="三、报告内容"></a>三、报告内容</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h2><h3 id="1-1任务分解"><a href="#1-1任务分解" class="headerlink" title="1.1任务分解"></a>1.1任务分解</h3><p>系统分为三个功能角色：记账员、班委成员、班级成员，其主要职能如下：</p><p>1.记账员主要对日常的开支进行记录</p><p>2.班委成员主要对班级成员提出的质疑进行回复说明</p><p>3.班级成员主要对记账员记录的开支进行质疑，以及对班委成员的回复进行通过</p><h3 id="1-2开发工具和工具的配合"><a href="#1-2开发工具和工具的配合" class="headerlink" title="1.2开发工具和工具的配合"></a>1.2开发工具和工具的配合</h3><p>  使用的主要开发工具有IntelliJ IDEA2021（后端spring boot项目开发），Android Studio（前端app开发），Mysql（数据库），Navicat for Mysql，夜神模拟器，华为nova7手机（真机安装运行），腾讯云轻量服务器（后端云部署）</p><h2 id="2-总体设计"><a href="#2-总体设计" class="headerlink" title="2 总体设计"></a>2 总体设计</h2><h3 id="2-1设计模式"><a href="#2-1设计模式" class="headerlink" title="2.1设计模式"></a>2.1设计模式</h3><p>​    后端spring boot项目采用MVC设计模式如下图：</p><p><img src="/img/Android-project/clip_image002.gif" alt="img"></p><p>图1 spring boot项目结构图</p><h3 id="2-2Android核心组件"><a href="#2-2Android核心组件" class="headerlink" title="2.2Android核心组件"></a>2.2Android核心组件</h3><p>​    Recylerview、Glide（图片加载）、activity、fragment、Okthhp（实现客户端与服务器端通信）</p><h2 id="3-详细设计"><a href="#3-详细设计" class="headerlink" title="3 详细设计"></a>3 详细设计</h2><h3 id="3-1spring-boot属性配置"><a href="#3-1spring-boot属性配置" class="headerlink" title="3.1spring boot属性配置"></a>3.1spring boot属性配置</h3><p>配置应用端口88，配置腾讯云服务器远端数据库及其密码，以及图片上传云端位置</p><p><strong>server.port</strong>&#x3D;**88<br>** <strong>spring.thymeleaf.cache</strong>&#x3D;<strong>false<br> spring.datasource.name</strong>&#x3D;**spell-group-datasource<br>** <strong>spring.datasource.driverClassName</strong>&#x3D;**com.mysql.cj.jdbc.Driver<br>** <strong>spring.datasource.url</strong>&#x3D;**jdbc:mysql:&#x2F;&#x2F;49.233.46.138:3306&#x2F;jilu?useUnicode&#x3D;true&amp;serverTimezone&#x3D;Asia&#x2F;Shanghai&amp;characterEncoding&#x3D;utf8&amp;autoReconnect&#x3D;true&amp;useSSL&#x3D;false&amp;allowMultiQueries&#x3D;true<br>** <strong>spring.datasource.username</strong>&#x3D;**jilu<br>** <strong>spring.datasource.password</strong>&#x3D;<strong>12345678</strong></p><p>  <strong>file.upload.path</strong>&#x3D;<strong>&#x2F;home&#x2F;Android&#x2F;upload</strong></p><h3 id="3-2Android-Studio定义的部分API地址"><a href="#3-2Android-Studio定义的部分API地址" class="headerlink" title="3.2Android Studio定义的部分API地址"></a>3.2Android Studio定义的部分API地址</h3><p>  下列举了腾讯云服务器url，图片存储url，注册，登录，图片上传，班费列表等API地址</p><p>public static String <em>mainHost</em> &#x3D; “<a href="http://49.233.46.138:88/">http://49.233.46.138:88</a>“;<br> public static String <em>mainImgHost</em> &#x3D; “<a href="http://49.233.46.138:88/public/getImg?path=">http://49.233.46.138:88/public/getImg?path=</a>“;<br> &#x2F;&#x2F;注册<br> public static String <em>regiestUrl</em> &#x3D; “&#x2F;app&#x2F;comments&#x2F;registered”;<br> &#x2F;&#x2F;登录<br> public static String <em>loginUrl</em> &#x3D; “&#x2F;app&#x2F;comments&#x2F;login”;<br> &#x2F;&#x2F;图片上传<br> public static String <em>photoUploadUrl</em> &#x3D; “&#x2F;public&#x2F;photoUpload”;</p><p>&#x2F;&#x2F;班费列表</p><p>​    public static String listAllbanfeiInfoUrl &#x3D; “&#x2F;banfeiInfo&#x2F;list”;</p><h3 id="3-3云服务器配置"><a href="#3-3云服务器配置" class="headerlink" title="3.3云服务器配置"></a>3.3云服务器配置</h3><p>​    1.开放端口88</p><p><img src="/img/Android-project/clip_image004.gif" alt="img"></p><p>图2 端口开放</p><p>  2.配置服务器相关（jdk,tomcat,数据库等相关环境安装）</p><p>  3.springboot打jar包上传并启动服务器端（有两种启动方式命令1. java -jar server.jar随终端启动2. nohup java -jar server.jar后台一直运行，为节约系统资源这里采用方式1）</p><p><img src="/img/Android-project/clip_image006.gif" alt="img"></p><p>图3 云服务器终端启动服务器端</p><h3 id="3-4相关功能设计（部分）"><a href="#3-4相关功能设计（部分）" class="headerlink" title="3.4相关功能设计（部分）"></a>3.4相关功能设计（部分）</h3><p>  1.登录</p><p>  后端（controller层）</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs dart"> <span class="hljs-meta">@ApiOperation</span>(value = <span class="hljs-string">&quot;登录&quot;</span>, httpMethod = <span class="hljs-string">&quot;POST&quot;</span>, notes = <span class="hljs-string">&quot;加载数据&quot;</span>, response = ResponseData.<span class="hljs-keyword">class</span>)<br><span class="hljs-meta">@ApiImplicitParams</span>(&#123;<br>        <span class="hljs-meta">@ApiImplicitParam</span>(name = <span class="hljs-string">&quot;UserAccount&quot;</span>, value = <span class="hljs-string">&quot;账号&quot;</span>, <span class="hljs-keyword">required</span> = <span class="hljs-keyword">false</span>, paramType = <span class="hljs-string">&quot;query&quot;</span>, dataType = <span class="hljs-string">&quot;string&quot;</span>),<br>        <span class="hljs-meta">@ApiImplicitParam</span>(name = <span class="hljs-string">&quot;UserPwd&quot;</span>, value = <span class="hljs-string">&quot;密码&quot;</span>, <span class="hljs-keyword">required</span> = <span class="hljs-keyword">false</span>, paramType = <span class="hljs-string">&quot;query&quot;</span>, dataType = <span class="hljs-string">&quot;string&quot;</span>)<br>&#125;)<br><span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">&quot;login&quot;</span>)<br>public ResponseData listAll(<span class="hljs-meta">@ApiIgnore</span> <span class="hljs-built_in">String</span> demoUserAccount, <span class="hljs-meta">@ApiIgnore</span> <span class="hljs-built_in">String</span> demoUserPwd) &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        UserInfo user = userInfoMapper.getUserByAccount(demoUserAccount);<br>        <span class="hljs-keyword">if</span> (demoUserPwd.equals(user.getPassword())) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ResponseData().data(user).success();<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ResponseData().fail(<span class="hljs-number">10003</span>, <span class="hljs-string">&quot;用户名或密码错误&quot;</span>);<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>        e.printStackTrace();<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ResponseData().fail(<span class="hljs-number">10002</span>, <span class="hljs-string">&quot;用户不存在&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>​    前端</p><p>OkGo.<String><em>get</em>(Myapi.<em>mainHost</em>+Myapi.<em>loginUrl</em>)登录请求的接口</p><p>.params(<strong>“UserAccount”</strong>,uname)<br> .params(<strong>“UserPwd”</strong>,pwd)<br> 参数：账号和密码</p><p>ToastUtils.showToast(LoginActivity.this,”登陆成功!”);</p><p>Intent intent3 &#x3D; new Intent(LoginActivity.this,MainActivity.class);</p><p>startActivity(intent3)</p><p>当后端的@RequestParam中的值要和前端的params中的参数命名对应上，登录成功之后跳转到主页</p><p>2.注册</p><p>后端（controller层）</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs dart"> <span class="hljs-meta">@ApiOperation</span>(value = <span class="hljs-string">&quot;register&quot;</span>, httpMethod = <span class="hljs-string">&quot;POST&quot;</span>, notes = <span class="hljs-string">&quot;加载数据&quot;</span>, response = UserInfo.<span class="hljs-keyword">class</span>)<br><span class="hljs-meta">@ApiImplicitParams</span>(&#123;<br>        <span class="hljs-meta">@ApiImplicitParam</span>(name = <span class="hljs-string">&quot;userAccount&quot;</span>, value = <span class="hljs-string">&quot;手机号&quot;</span>, <span class="hljs-keyword">required</span> = <span class="hljs-keyword">false</span>, paramType = <span class="hljs-string">&quot;query&quot;</span>, dataType = <span class="hljs-string">&quot;string&quot;</span>),<br>        <span class="hljs-meta">@ApiImplicitParam</span>(name = <span class="hljs-string">&quot;userName&quot;</span>, value = <span class="hljs-string">&quot;姓名&quot;</span>, <span class="hljs-keyword">required</span> = <span class="hljs-keyword">false</span>, paramType = <span class="hljs-string">&quot;query&quot;</span>, dataType = <span class="hljs-string">&quot;string&quot;</span>),<br>        <span class="hljs-meta">@ApiImplicitParam</span>(name = <span class="hljs-string">&quot;userPwd&quot;</span>, value = <span class="hljs-string">&quot;密码&quot;</span>, <span class="hljs-keyword">required</span> = <span class="hljs-keyword">false</span>, paramType = <span class="hljs-string">&quot;query&quot;</span>, dataType = <span class="hljs-string">&quot;string&quot;</span>), <br>&#125;)<br><span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">&quot;registered&quot;</span>)<br>public ResponseData registered(<span class="hljs-built_in">String</span> userAccount, <span class="hljs-built_in">String</span> userPwd,<span class="hljs-built_in">String</span> logo,<span class="hljs-built_in">String</span> qianming,<span class="hljs-built_in">String</span> phone) &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        UserInfo user = userInfoMapper.getUserByAccount(userAccount);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">null</span> == user) &#123;<br>            UserInfo demoUser = <span class="hljs-keyword">new</span> UserInfo();<br>            demoUser.setName(userAccount);<br>            demoUser.setPassword(userPwd);<br>            demoUser.setPhone(phone);<br><br>            userInfoMapper.insertIgnoreNull(demoUser);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ResponseData().fail(<span class="hljs-number">10001</span>, <span class="hljs-string">&quot;账号已存在，请更换。&quot;</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>        e.printStackTrace();<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ResponseData().fail(<span class="hljs-number">500</span>, e.getMessage());<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ResponseData().success();<br>&#125;<br></code></pre></td></tr></table></figure><p>前端</p><p>OkGo.<String>post(Myapi.mainHost+Myapi.regiestUrl)表示：网络请求地址</p><p>.params(“userAccount”,name)</p><p>.params(“userPwd”,pwd)</p><p>参数：姓名，密码</p><p>public void onSuccess(Response<String> response) {</p><p>表示请求响应的结果</p><p>if(code &#x3D;&#x3D; 200){</p><p>​          ToastUtils.showToast(RegiestActivity.this,”注册成功!”);</p><p>​          finish();</p><p>​        }else {</p><p>​          ToastUtils.showToast(RegiestActivity.this,”注册失败!”);</p><p>​        }</p><p>这里判断响应的code值，如果是200提示注册成功，反之则提示注册失败</p><p>  注意这里的注册默认为班级成员注册，因为是班级内部记账app，所以记账员及班委成员role需要在数据库内自行设置。</p><p>​    </p><p>4.班费清单列表</p><p>后端（controller层）</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">@<span class="hljs-constructor">ApiOperation(<span class="hljs-params">value</span> = <span class="hljs-string">&quot;Read&quot;</span>, <span class="hljs-params">httpMethod</span> = <span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-params">notes</span> = <span class="hljs-string">&quot;加载数据&quot;</span>, <span class="hljs-params">response</span> = Result.<span class="hljs-params">class</span>)</span><br>@<span class="hljs-constructor">RequestMapping(<span class="hljs-string">&quot;list&quot;</span>)</span><br>public Result <span class="hljs-built_in">list</span><span class="hljs-constructor">All()</span> &#123;<br>   <span class="hljs-keyword">try</span> &#123;<br>      List&lt;BanfeiInfo&gt; <span class="hljs-built_in">list</span> = banfeiInfoMapper.<span class="hljs-built_in">list</span><span class="hljs-constructor">All()</span>;<br>        return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ResultGenerator</span>.</span></span>gen<span class="hljs-constructor">SuccessResult(<span class="hljs-params">list</span>)</span>;<br>    &#125; catch (Exception e) &#123;<br>        e.print<span class="hljs-constructor">StackTrace()</span>;<br>        return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ResultGenerator</span>.</span></span>gen<span class="hljs-constructor">ErrorResult(500,<span class="hljs-params">e</span>.<span class="hljs-params">getMessage</span>()</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>前端</p><p>private void getAllData() {<br>  OkGo.<String><em>post</em>(Myapi.<em>mainHost</em>+ Myapi.<em>listAllbanfeiInfoUrl</em>)<br>       .execute(new StringCallback() {<br>         @Override<br>         public void onSuccess(Response<String> response) {<br>           Log.<em>e</em>(“班费列表”,response.body());<br>           BanFeiBean banFeiBean &#x3D; JSONUtils.<em>parserObject</em>(response.body(),BanFeiBean.class);<br>           int code &#x3D; banFeiBean.getResultCode();</p><p>if(code &#x3D;&#x3D; 200){</p><p>List&lt;BanFeiBean.Data&gt; data &#x3D; banFeiBean.getData();<br> adapter &#x3D; new BanFeiAdapter(BanweiActivity.this,R.layout.<em>list_item_banfei</em>,data);<br> recyclerView.setAdapter(adapter);<br> …}}</p><p>OkGo.<String>post(Myapi.mainHost+ Myapi.listAllbanfeiInfoUrl)接口，无需传入参数，因为查询的是所有的班费列表通过Recyclerview控件展示列表</p><h3 id="3-5技术难点"><a href="#3-5技术难点" class="headerlink" title="3.5技术难点"></a>3.5技术难点</h3><p>通过下载安装包，真机运行班费记录app（脱离usb限制），通过通过签名jks的方式实现。</p><h2 id="4测试及出现过的问题及其解决方法"><a href="#4测试及出现过的问题及其解决方法" class="headerlink" title="4测试及出现过的问题及其解决方法"></a>4测试及出现过的问题及其解决方法</h2><h3 id="4-1测试界面"><a href="#4-1测试界面" class="headerlink" title="4.1测试界面"></a>4.1测试界面</h3><p>1.登录界面（三种身份选择）</p><p><img src="/img/Android-project/clip_image008.gif" alt="img"></p><p>图4 登录界面</p><p>2.注册界面（仅可注册班级成员，记账员及班委为数据库设置）</p><p><img src="/img/Android-project/clip_image010.gif" alt="img"></p><p>图5 注册页面</p><p>4.主页（记账员身份进入）</p><p><img src="/img/Android-project/clip_image012.gif" alt="img"></p><p>图6 主页</p><p>5.记账员发布账单</p><p><img src="/img/Android-project/clip_image014.gif" alt="img"></p><p>图7 记账</p><p><img src="/img/Android-project/clip_image016.gif" alt="img"></p><p>图8 账单已更新</p><p>6.提出质疑</p><p><img src="/img/Android-project/clip_image018.gif" alt="img"></p><p>图9 班级成员发布质疑</p><p><img src="/img/Android-project/clip_image020.gif" alt="img"></p><p>图10 质疑已公布</p><p>6.班委回复质疑</p><p><img src="/img/Android-project/clip_image022.gif" alt="img"></p><p>图11 班委回复质疑</p><p><img src="/img/Android-project/clip_image024.gif" alt="img"></p><p>图12 质疑已回复</p><p>8.班级成员通过质疑</p><p><img src="/img/Android-project/clip_image026.gif" alt="img"></p><p>图13 班级半数以上确认</p><p>9.质疑人close质疑（未超过半数班级成员确认关闭无效）</p><p><img src="/img/Android-project/clip_image028.gif" alt="img"></p><p>图14 质疑人close质疑</p><p>10.质疑已close</p><p><img src="/img/Android-project/clip_image030.gif" alt="img"></p><p>图15 质疑已关闭</p><p>  11.真机安装包下载及运行</p><p><img src="/img/Android-project/clip_image031.gif" alt="img"><img src="/img/Android-project/clip_image033.gif" alt="img"></p><p>图16 真机安装包下载及运行 </p><h3 id="4-2出现的问题及解决方案"><a href="#4-2出现的问题及解决方案" class="headerlink" title="4.2出现的问题及解决方案"></a>4.2出现的问题及解决方案</h3><p>​    1.Android Studio开发的客户端打Debug包手机无法安装</p><p><img src="/img/Android-project/clip_image035.gif" alt="img"></p><p>图17 安装失败</p><p>​    解决方案：通过签名jks生成release包，最终实现apk打包安装</p><p><img src="/img/Android-project/clip_image037.gif" alt="img"></p><p>图18 生成jks文件</p><p>​    2.云服务器88端口无法访问（端口已开放）</p><p>​    解决方案：查阅资料意识到可能是服务器内的系统放火墙未放通导致，使用systemctl stop firewalld 命令来进行关闭，最终解决问题。</p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5 总结"></a>5 总结</h2><h3 id="5-1全面总结"><a href="#5-1全面总结" class="headerlink" title="5.1全面总结"></a>5.1全面总结</h3><p>​    本实践采用前后端分离模式开发，基于spring boot的服务器端，Android Studio的客户端实现项目功能。大体实现如下功能：</p><p>记账员：记录班费记录及验收人</p><p>班委：对班级成员的质疑进行回复</p><p>班级成员：对班费账单进行质疑（半数以上班级成员通过才能由质疑人close，或者超过讨论期未close的质疑自动close），通过班委的回复</p><p>在此基础上进行了云部署，成功将服务器端部署到腾讯云服务器上运行，此外客户端通过jks签名打release包安装到了真机运行。</p><p>本项目采用git进行版本控制，仓库地址如下:</p><p><a href="https://github.com/ChengRui79/Android-charge-account.git">https://github.com/ChengRui79/Android-charge-account.git</a></p><p><img src="/img/Android-project/clip_image039.gif" alt="img"></p><p>图19 github仓库</p><h3 id="5-2未完成的部分"><a href="#5-2未完成的部分" class="headerlink" title="5.2未完成的部分"></a>5.2未完成的部分</h3><p>​    未完成的部分有：个人中心（对个人的注册信息及质疑，通过记录进行展示）；多班级支持（可实现多个班级共同使用，即分班级对进行班费使用进行记录）；记录归档功能</p><h3 id="5-3收获"><a href="#5-3收获" class="headerlink" title="5.3收获"></a>5.3收获</h3><p>​    对spring boot的mvc模式开发有了更熟练的掌握，通过前后端分离的采用，使我初步接触了Android客户端与IntelliJ IDEA服务器端基于Okthhp通信的主流网络通信框架。同时也在云平台技术的使用上更加深入（这是我在腾讯云上部署的第二个项目，第一个项目是一个java web项目）相对来说在本次部署难度大了很多，但同时也觉得收获颇丰。当然在前端设计上考虑略有不足，例如在用户注册页面，role显然不适合选择，由于前期分析不足，未考虑权限的特殊性，导致注册页面设计不合理，后删去role选择功能，默认班级成员。希望在以后的学习过程中多多接触新技术，不断提升能力。</p><h2 id="6参考文献"><a href="#6参考文献" class="headerlink" title="6参考文献"></a>6参考文献</h2><p>[1] Android客户端连接服务器- OKHttp的简单实用方法[ED&#x2F;OL]：<a href="https://blog.csdn.net/m0_47761892/article/details/107630036">https://blog.csdn.net/m0_47761892/article/details/107630036</a> </p><p>[2] 如何把android studio中的项目发布到手机上（超详细版）[ED&#x2F;OL]：<a href="https://blog.csdn.net/mlyhzt/article/details/126590913">https://blog.csdn.net/mlyhzt/article/details/126590913</a></p><p>[3] 详细SpringBoot教程之入门[ED&#x2F;OL]：<a href="https://blog.csdn.net/DBC_121/article/details/104383089">https://blog.csdn.net/DBC_121/article/details/104383089</a></p><p>[4] SpringBoot项目打包成jar包部署到宝塔面板(详细) [ED&#x2F;OL]：<a href="https://blog.csdn.net/weixin_47390965/article/details/124666474">https://blog.csdn.net/weixin_47390965/article/details/124666474</a></p><p>[5] 阿里云服务器配置及把java项目部署到服务器[ED&#x2F;OL]：<a href="https://blog.csdn.net/weixin_45831807/article/details/121213809">https://blog.csdn.net/weixin_45831807/article/details/121213809</a></p><p>[6] Spring Boot 接入[ED&#x2F;OL]：<a href="https://cloud.tencent.com/document/product/1416/56031">https://cloud.tencent.com/document/product/1416/56031</a></p><p>[7] Android中Glide的使用[ED&#x2F;OL]：<a href="https://blog.csdn.net/weixin_57542177/article/details/124074397?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167204971716782429745671%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=167204971716782429745671&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-124074397-null-null.142">https://blog.csdn.net/weixin_57542177/article/details/124074397?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167204971716782429745671%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167204971716782429745671&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-124074397-null-null.142</a></p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
      <category>Android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android</tag>
      
      <tag>springboot</tag>
      
      <tag>前后端分离</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/28/hello-world/"/>
    <url>/2023/03/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>others</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
