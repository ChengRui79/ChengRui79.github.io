<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>TRS</title>
    <link href="/2023/07/25/TRS/"/>
    <url>/2023/07/25/TRS/</url>
    
    <content type="html"><![CDATA[<p><strong>铁路售票系统</strong></p><p><strong>摘</strong> <strong>要</strong></p><p>致力于开发一个铁路售票系统，涵盖了绪论、需求分析、概要设计、数据库设计、详细设计、系统实现、测试报告、结论和参考文献等内容。旨在为用户提供便捷的车票订购和取票服务。通过该系统，用户可以在线完成车票订购，进行支付并打印车票。论文将详细介绍系统的需求分析过程，包括站点信息维护和车次信息维护；设计阶段将涵盖概要设计、数据库设计和详细设计；系统实现将使用Spring、SpringMVC和MyBatis等后端技术，以及JSP、jQuery和EasyUI等前端技术。在测试阶段，将编写测试报告以验证系统的功能和性能。最后，根据实现和测试结果，结论将总结系统的优点和不足，并提出改进建议。</p><p><strong>关键词</strong> 铁路售票系统；站点信息维护；车次信息维护；网上订票；取票</p><p>​                                   </p><p>目 录</p><p><a href="#_Toc138938484">第1章 绪论. 1</a></p><p><a href="#_Toc138938485">1.1 引言. 1</a></p><p><a href="#_Toc138938486">1.2 研究内容和方法. 1</a></p><p><a href="#_Toc138938487">1.2.1 研究内容. 1</a></p><p><a href="#_Toc138938488">1.2.2 研究方法. 2</a></p><p><a href="#_Toc138938489">1.3 本文结构. 2</a></p><p><a href="#_Toc138938490">第2章 需求分析. 4</a></p><p><a href="#_Toc138938491">2.1 需求获取方法和过程. 4</a></p><p><a href="#_Toc138938492">2.1.1 需求识别和收集. 4</a></p><p><a href="#_Toc138938493">2.1.2 需求分析和整理. 4</a></p><p><a href="#_Toc138938494">2.2 需求规格说明书. 4</a></p><p><a href="#_Toc138938495">2.2.1 功能需求. 4</a></p><p><a href="#_Toc138938496">2.2.2 性能需求. 7</a></p><p><a href="#_Toc138938497">2.2.3 安全需求. 8</a></p><p><a href="#_Toc138938498">2.3 需求验证和管理. 9</a></p><p><a href="#_Toc138938499">2.3.1 需求验证和确认. 9</a></p><p><a href="#_Toc138938500">2.3.2 需求管理和变更控制. 9</a></p><p><a href="#_Toc138938501">第3章 概要设计. 10</a></p><p><a href="#_Toc138938502">3.1 系统架构设计. 10</a></p><p><a href="#_Toc138938503">3.1.1整体架构设计. 10</a></p><p><a href="#_Toc138938504">3.1.2 模块划分与功能关系. 10</a></p><p><a href="#_Toc138938505">3.2 数据流程设计. 11</a></p><p><a href="#_Toc138938506">3.2.1 用户交互流程设计. 11</a></p><p><a href="#_Toc138938507">3.2.2 数据传递流程设计. 12</a></p><p><a href="#_Toc138938508">3.3 用户界面设计. 13</a></p><p><a href="#_Toc138938509">3.3.1 登录界面设计. 13</a></p><p><a href="#_Toc138938510">3.3.2 车票查询与预订界面设计. 14</a></p><p><a href="#_Toc138938511">3.3.3 订单管理界面设计. 15</a></p><p><a href="#_Toc138938512">第4章 数据库设计. 16</a></p><p><a href="#_Toc138938513">4.1 数据库设计. 16</a></p><p><a href="#_Toc138938514">4.2 概念设计. 17</a></p><p><a href="#_Toc138938515">4.3 逻辑设计. 19</a></p><p><a href="#_Toc138938516">第5章 详细设计. 22</a></p><p><a href="#_Toc138938517">5.1 系统主页. 22</a></p><p><a href="#_Toc138938518">5.2 管理员页面设计. 23</a></p><p><a href="#_Toc138938519">5.3 用户功能界面设计. 25</a></p><p><a href="#_Toc138938520">5.4 数据存储方案. 27</a></p><p><a href="#_Toc138938521">第6章 系统实现. 28</a></p><p><a href="#_Toc138938522">6.1 开发工具与技术栈. 28</a></p><p><a href="#_Toc138938523">6.1.1 开发环境配置. 28</a></p><p><a href="#_Toc138938524">6.1.2 技术栈选择与理由. 29</a></p><p><a href="#_Toc138938525">6.2 前端实现与用户界面设计. 29</a></p><p><a href="#_Toc138938526">6.2.1 前端框架选择与配置. 29</a></p><p><a href="#_Toc138938527">6.2.2 用户界面设计与交互流程. 30</a></p><p><a href="#_Toc138938528">6.3 后端实现与数据库设计. 31</a></p><p><a href="#_Toc138938529">6.3.1 服务器端架构设计. 31</a></p><p><a href="#_Toc138938530">6.3.2 数据库设计与连接池配置. 31</a></p><p><a href="#_Toc138938531">6.3.3 后端业务逻辑实现与接口设计. 32</a></p><p><a href="#_Toc138938532">6.4 Docker容器部署. 32</a></p><p><a href="#_Toc138938533">6.4.1 环境准备. 32</a></p><p><a href="#_Toc138938534">6.4.2 Tomcat容器. 32</a></p><p><a href="#_Toc138938535">6.4.3 MySQL容器. 33</a></p><p><a href="#_Toc138938536">6.4.4 本地数据库连接云端数据库. 33</a></p><p><a href="#_Toc138938537">6.4.5 公网访问. 34</a></p><p><a href="#_Toc138938538">第7章 测试报告. 35</a></p><p><a href="#_Toc138938539">7.1 测试目的和范围. 35</a></p><p><a href="#_Toc138938540">7.1.1 测试目的. 35</a></p><p><a href="#_Toc138938541">7.1.2测试范围. 35</a></p><p><a href="#_Toc138938542">7.2 测试环境和工具. 35</a></p><p><a href="#_Toc138938543">7.2.1 测试环境. 35</a></p><p><a href="#_Toc138938544">7.2.2 测试工具. 36</a></p><p><a href="#_Toc138938545">7.3 测试方法和执行结果. 36</a></p><p><a href="#_Toc138938546">7.3.1 功能测试. 36</a></p><p><a href="#_Toc138938547">7.3.2 兼容性测试. 49</a></p><p><a href="#_Toc138938548">7.3.3 弱网测试. 50</a></p><p><a href="#_Toc138938549">7.3.4 前端性能测试. 52</a></p><p><a href="#_Toc138938550">7.4 测试结果和分析. 52</a></p><p><a href="#_Toc138938551">7.5 测试结论和建议. 53</a></p><p><a href="#_Toc138938552">结 论. 54</a></p><p><a href="#_Toc138938553">参 考 文 献. 56</a></p><h1 id="第1章-绪论"><a href="#第1章-绪论" class="headerlink" title="第1章 绪论"></a>第1章 绪论</h1><h2 id="1-1-引言"><a href="#1-1-引言" class="headerlink" title="1.1 引言"></a>1.1 引言</h2><p>火车站作为客运交通的重要枢纽，面临着管理和规范等方面的诸多挑战。其中，订票作为客运业务的基础环节，不仅涉及到管理效率的提升，还直接关系到客户服务的质量。然而，传统的售票方式已经无法满足现代客运业务流量急剧增长的需求，迫切需要一种全新的订票方式来应对客运高峰时期的压力，并为用户提供方便快捷的订票服务。</p><p>为解决这一问题，本论文旨在开发一个铁路售票系统，利用开发工具IDEA和MySQL5.7数据库进行开发。该系统将通过引入网上订票的方式，为火车站订票业务带来便捷和高效的解决方案。通过该系统，用户可以通过网络平台完成订票，不再受限于传统的排队购票方式，从而减少排队时间，缓解客运高峰时期的压力。</p><h2 id="1-2-研究内容和方法"><a href="#1-2-研究内容和方法" class="headerlink" title="1.2 研究内容和方法"></a>1.2 研究内容和方法</h2><h3 id="1-2-1-研究内容"><a href="#1-2-1-研究内容" class="headerlink" title="1.2.1 研究内容"></a>1.2.1 研究内容</h3><p>本论文的研究内容是铁路售票系统的设计与实现，旨在解决火车站市场管理和规范问题。铁路售票系统是一个复杂的信息系统，涉及站点信息维护、车次信息维护、座位信息维护、网上订票、取票等功能。</p><p>论文将深入探讨如何设计和实现铁路售票系统的各项功能，并重点关注以下方面：</p><p>站点信息维护：设计一个可靠的系统模块，用于管理和维护火车站的站点信息，包括始发站和终点站名称、发车时间、距离等。</p><p>车次信息维护：开发功能强大的模块，用于管理和维护火车车次的相关信息，包括车次编号、列车名、列车类型、座位数量、每公里价格等。</p><p>网上订票：实现一个用户友好的网上订票功能，使普通网民能够方便快捷地订购火车票，包括查询车次、选择座位、提交订单等步骤。</p><p>支付： 在系统中设置余额显示功能，每次交易都会产生余额变动，余额不足会提醒用户进行充值，余额足够则正常支付扣款。</p><h3 id="1-2-2-研究方法"><a href="#1-2-2-研究方法" class="headerlink" title="1.2.2 研究方法"></a>1.2.2 研究方法</h3><p>为了实现铁路售票系统，本论文采用以下方法：</p><p>技术栈选择：使用Spring、SpringMVC和MyBatis作为后端开发框架，利用JSP、jQuery和EasyUI作为前端开发工具，以实现系统的各项功能。</p><p>开发工具：使用JDK 1.8配合IDEA作为开发工具，以及MySQL 5.7作为数据库管理系统，为系统的设计和实现提供支持。</p><p>通过以上方法，编写系统的后端代码和前端界面，并进行测试和优化，以确保铁路售票系统的正常运行和用户体验。同时，对系统的安全性和稳定性进行考虑，保护用户的个人信息和支付安全。</p><h2 id="1-3-本文结构"><a href="#1-3-本文结构" class="headerlink" title="1.3 本文结构"></a>1.3 本文结构</h2><p>第一章：绪论</p><p>介绍铁路售票系统的研究背景和意义。首先讨论现代交通管理中铁路售票系统的重要性和应用价值，并分析传统售票方式存在的问题和局限性。接下来，明确论文的研究目的和范围，定义铁路售票系统的设计目标和研究范围。最后，简要介绍本文的主要内容和结构安排。</p><p>第二章：需求分析</p><p>详细描述铁路售票系统的功能需求、性能需求和安全需求。具体列举用户注册与登录、车票查询与预订、订单管理、支付与退款等功能需求，并确立系统对响应时间、并发处理能力、用户数据保护和交易安全性的要求。此外，编写需求规格说明书，对系统需求进行准确明确的定义和规范。</p><p>第三章：概要设计</p><p>设计铁路售票系统的整体架构和模块划分。绘制数据流程图，清楚描述各个功能模块之间的数据流动和交互关系。此外，展示系统用户界面的设计和布局，以及系统与其他模块或系统之间的接口设计。</p><p>第四章：数据库设计</p><p>介绍铁路售票系统的数据库设计过程。使用E-R图描述系统的概念模型，明确系统的实体、属性和关系。然后，将概念模型转换为逻辑模型，确定关系模式和表结构。最后，实现逻辑模型为物理模型，进行数据库表的创建和测试。</p><p>第五章：详细设计</p><p>详细描述铁路售票系统的功能模块设计和数据库模块设计。逐一讨论各个功能模块的设计思路和功能实现，确保系统的功能完备和性能优良。同时，详细讨论数据库模块的设计，包括表结构设计和数据存储方案。</p><p>第六章：系统实现</p><p>介绍铁路售票系统的实际实现过程。详细讨论系统的开发工具和技术栈。</p><p>第七章：测试报告</p><p>在测试报告章节中，我们将详细记录铁路售票系统的测试过程和结果。我们将介绍测试方法和测试用例的设计，执行各项测试并记录测试结果。最后，我们将对测试结果进行分析和总结，评估系统的性能和可靠性。</p><h1 id="第2章-需求分析"><a href="#第2章-需求分析" class="headerlink" title="第2章 需求分析"></a>第2章 需求分析</h1><h2 id="2-1-需求获取方法和过程"><a href="#2-1-需求获取方法和过程" class="headerlink" title="2.1 需求获取方法和过程"></a>2.1 需求获取方法和过程</h2><p>本系统的需求获取方法和过程按照以下步骤进行。</p><h3 id="2-1-1-需求识别和收集"><a href="#2-1-1-需求识别和收集" class="headerlink" title="2.1.1 需求识别和收集"></a>2.1.1 需求识别和收集</h3><p>与铁路客运部门、售票员和乘客的访谈，调研现有的铁路售票系统及相关案例。</p><p>分析相关的业务文档和规范，评估现有的铁路售票系统的优缺点。</p><h3 id="2-1-2-需求分析和整理"><a href="#2-1-2-需求分析和整理" class="headerlink" title="2.1.2 需求分析和整理"></a>2.1.2 需求分析和整理</h3><p>客户端功能需求：用户注册、登录、车次查询、订票、退票等；</p><p>服务器端功能需求：票务管理、订单处理等；</p><p>分析性能需求：响应时间、并发用户数、系统容量；</p><p>确定安全需求：用户身份验证、数据加密、审计日志。</p><h2 id="2-2-需求规格说明书"><a href="#2-2-需求规格说明书" class="headerlink" title="2.2 需求规格说明书"></a>2.2 需求规格说明书</h2><h3 id="2-2-1-功能需求"><a href="#2-2-1-功能需求" class="headerlink" title="2.2.1 功能需求"></a>2.2.1 功能需求</h3><p>铁路售票系统是一个旨在提供方便、高效、安全的售票服务的系统。该系统旨在满足铁路客运业务的需求，为用户提供便捷的车次查询、订票、退票等功能，并为铁路管理部门提供有效的票务管理功能。</p><p>整个系统间的各子模块的结构图如下所示：</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251736059.gif" alt="img"></p><p>图2-1 系统子模块图</p><p>以下是铁路售票系统的主要功能描述：</p><p>用户管理功能</p><p>1.1 用户注册：用户可以注册个人账户，包括用户名、密码和个人信息；</p><p>1.2 用户登录：注册用户可以使用用户名和密码登录系统。在浏览器上输入<a href="http://localhost:8080/ssm_train_ticket_sale/%EF%BC%8C%E8%BF%9B%E5%85%A5%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97%EF%BC%8C%E9%80%89%E6%8B%A9%E7%99%BB%E5%BD%95%E8%BA%AB%E4%BB%BD%E5%8C%BA%E5%88%AB%E6%98%AF%E6%99%AE%E9%80%9A%E7%94%A8%E6%88%B7%E6%88%96%E6%98%AF%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%91%98%EF%BC%9B">http://localhost:8080/ssm_train_ticket_sale/，进入登录功能模块，选择登录身份区别是普通用户或是系统管理员；</a></p><p>1.3 用户信息管理：用户可以修改个人信息，如联系方式。</p><p>车次查询与订票功能</p><p>2.1 车次查询：用户可以根据始发站、终点站、发车时间等条件查询可用的车次信息；</p><p>2.2 座位选择：用户可以选择座位类型和位置进行订票；</p><p>2.3 订票确认：用户确认选择的车次和座位后，系统生成订单并进行支付；</p><p>2.4 电子票生成：系统生成电子车票，用户可进行打印。</p><p>退票功能</p><p>3.1 退票申请：用户可以提交退票申请，提供订单信息和退票原因；</p><p>3.2 退票审核：系统对退票申请进行审核，并根据退票规则进行处理；</p><p>3.3 退款处理：系统根据审核结果进行退款处理，并向用户发送退款通知。</p><p>票务管理功能</p><p>4.1 订单管理：系统对订单进行管理，包括订单查询、修改和取消；</p><p>4.2 座位管理：系统对座位信息进行管理，包括座位状态和座位调整；</p><p>4.3 车次管理：系统对车次的添加、车次更新、删除。</p><p>系统管理功能</p><p>5.1 权限管理：系统根据用户角色划分权限，限制对系统功能的访问；</p><p>5.2 数据备份与恢复：系统进行定期数据备份，并支持数据恢复操作；</p><p>5.3 日志记录：系统记录用户操作日志，包括登录、订票、退票等操作。</p><h3 id="2-2-2-性能需求"><a href="#2-2-2-性能需求" class="headerlink" title="2.2.2 性能需求"></a>2.2.2 性能需求</h3><p>响应时间：</p><p>系统应具备快速响应用户请求的能力，对于常见的操作（如车次查询、订票、退票等），系统应在数秒内给出响应。</p><p>在高峰期和繁忙时段，系统仍应保持较低的响应时间，以确保用户能够快速完成操作。</p><p>并发性能：</p><p>系统应具备处理大量并发用户的能力，能够同时处理多个用户的查询、订票和退票请求。</p><p>在高峰期，系统应能够有效分配资源，确保用户的请求能够及时响应，避免因并发访问而导致系统崩溃或响应变慢。</p><p>可扩展性：</p><p>系统应具备良好的可扩展性，能够根据需求进行水平或垂直扩展，以应对用户数量和数据规模的增长。</p><p>系统的架构应设计合理，允许在需要时添加更多的服务器或增加系统资源，以提高系统的整体性能和容量。</p><p>数据处理能力：</p><p>系统应具备高效的数据处理能力，能够快速查询和处理大量的车次、座位、订单等数据。</p><p>数据库设计应优化查询性能，采用合适的索引和数据结构，以提高数据访问速度和查询效率。</p><p>可靠性：</p><p>系统应具备高可靠性，能够保证用户数据的安全性和完整性，防止数据丢失或损坏。</p><p>系统应具备容错和错误处理机制，能够及时检测和纠正错误，避免系统故障导致的数据丢失或服务中断。</p><p>安全性：</p><p>系统应具备严格的安全控制机制，确保用户的个人信息和支付信息得到保护。</p><p>用户密码应以安全的方式进行存储和传输，采用加密算法确保数据的机密性。</p><p>系统应防止未经授权的访问和恶意攻击，采用安全协议和防火墙等技术手段加强系统的安全性。</p><h3 id="2-2-3-安全需求"><a href="#2-2-3-安全需求" class="headerlink" title="2.2.3 安全需求"></a>2.2.3 安全需求</h3><p>认证和授权：</p><p>系统应提供用户认证机制，确保只有经过身份验证的用户才能访问敏感数据和执行关键操作。</p><p>系统应具备授权机制，按照用户的权限级别控制其对系统功能和数据的访问权限。</p><p>数据保密性：</p><p>系统应采用加密算法，对用户的个人信息、支付信息以及其他敏感数据进行加密存储和传输，确保数据在存储和传输过程中的机密性。</p><p>系统应采取措施防止未经授权的访问和数据泄露，包括对数据库的访问控制、网络安全措施等。</p><p>审计和日志记录：</p><p>系统应具备审计和日志记录功能，记录用户的操作日志、系统事件和异常情况，以便进行安全审计和故障排查。</p><p>日志记录应包括用户的登录信息、操作时间、操作内容等关键信息，保留一定时间的日志记录。</p><p>异常处理和恢复：</p><p>系统应具备异常处理和恢复机制，能够检测和处理系统运行过程中的异常情况，避免安全漏洞被利用或系统被攻击。</p><p>在出现安全事件或系统故障时，系统应能够及时做出反应，并采取必要的措施进行修复和恢复。</p><p>网络安全：</p><p>系统采用安全协议和加密技术，确保网络传输过程中数据机密性和完整性。</p><p>系统应防止网络攻击，包括拒绝服务攻击、跨站脚本攻击等，通过合理的网络安全策略和防火墙等措施保护系统的安全性。</p><p>安全更新和维护：</p><p>系统应具备安全更新和维护机制，及时修复系统中发现的安全漏洞和缺陷，保持系统的安全性和稳定性。</p><p>系统的安全更新和维护过程应受到严格的控制，确保更新的安全性和完整性，避免因更新过程引入新的安全风险。</p><h2 id="2-3-需求验证和管理"><a href="#2-3-需求验证和管理" class="headerlink" title="2.3 需求验证和管理"></a>2.3 需求验证和管理</h2><h3 id="2-3-1-需求验证和确认"><a href="#2-3-1-需求验证和确认" class="headerlink" title="2.3.1 需求验证和确认"></a>2.3.1 需求验证和确认</h3><p>创建原型或演示系统，以便与相关方进行交互，确保系统的功能和界面符合他们的期望。</p><p>安排评审会议，与相关方共同审查和确认需求规格说明书，确保准确地捕捉到他们的需求。</p><p>进行用户验收测试，邀请相关方测试系统的功能并提供反馈。</p><h3 id="2-3-2-需求管理和变更控制"><a href="#2-3-2-需求管理和变更控制" class="headerlink" title="2.3.2 需求管理和变更控制"></a>2.3.2 需求管理和变更控制</h3><p>建立一个需求管理机制，使用需求跟踪工具来记录和跟踪需求的状态和变更。</p><p>定期与相关方进行沟通和反馈，以便及时处理需求变更和调整。</p><p>进行影响分析，评估需求变更对项目进度、成本和质量的影响，做出决策。</p><h1 id="第3章-概要设计"><a href="#第3章-概要设计" class="headerlink" title="第3章 概要设计"></a>第3章 概要设计</h1><h2 id="3-1-系统架构设计"><a href="#3-1-系统架构设计" class="headerlink" title="3.1 系统架构设计"></a>3.1 系统架构设计</h2><h3 id="3-1-1整体架构设计"><a href="#3-1-1整体架构设计" class="headerlink" title="3.1.1整体架构设计"></a>3.1.1整体架构设计</h3><p>前端界面：提供用户界面，包括票务查询、购票、订单管理等功能，与用户进行交互。</p><p>后端服务：处理用户请求，包括票务信息管理、订单处理、支付接口等功能与数据库进行交互。</p><p>数据库：存储票务信息、用户信息、订单信息等核心数据，提供数据的持久化存储和查询功能。</p><p>安全模块：负责用户认证、数据加密、权限管理等安全相关功能，确保系统的安全性和可靠性。</p><h3 id="3-1-2-模块划分与功能关系"><a href="#3-1-2-模块划分与功能关系" class="headerlink" title="3.1.2 模块划分与功能关系"></a>3.1.2 模块划分与功能关系</h3><p>模块划分：</p><p>用户界面模块：负责与用户进行交互，提供友好的界面和操作体验。与后端服务模块进行通信，发送用户请求并接收响应。</p><p>后端服务模块：处理用户请求，包括票务查询、购票、订单管理等功能。与数据库模块进行交互，读取和更新数据。</p><p>数据库模块：存储系统的核心数据，包括票务信息、用户信息、订单信息等。提供数据的持久化存储和查询功能，为后端服务模块提供数据支持。</p><p>安全模块：负责用户认证、数据加密、权限管理等安全相关功能。确保用户信息和交易数据的安全性，与用户界面模块和后端服务模块进行交互。</p><p>模块之间的功能关系如下：</p><p>用户界面模块通过用户界面与用户进行交互，接收用户输入的请求并将其发送给后端服务模块；</p><p>后端服务模块接收到用户请求后，根据请求类型调用相应的功能模块进行处理，如票务查询、购票、订单管理等；</p><p>后端服务模块与数据库模块进行交互，读取和更新数据库中的数据，确保数据的一致性和完整性；</p><p>安全模块负责用户认证、数据加密和权限管理等安全相关功能，确保系统的安全性和可靠性。</p><h2 id="3-2-数据流程设计"><a href="#3-2-数据流程设计" class="headerlink" title="3.2 数据流程设计"></a>3.2 数据流程设计</h2><h3 id="3-2-1-用户交互流程设计"><a href="#3-2-1-用户交互流程设计" class="headerlink" title="3.2.1 用户交互流程设计"></a>3.2.1 用户交互流程设计</h3><p>用户登录：用户通过界面输入用户名和密码进行登录。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251731797.gif" alt="img"></p><p>图3-1 登录数据流图</p><p>查询车票：用户输入出发站点、到达站点和日期进行车票查询</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251736357.gif" alt="img"></p><p>图3-2 查询管理数据流图</p><p>购票：用户选择车次和座位，填写乘客信息并进行支付。</p><p>订单管理：用户可以查看、取消和修改已购买的订单。</p><p>业务流程图：展示铁路售票系统的整体业务流程，包括用户与系统的交互和各个功能模块的执行顺序。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251731807.gif" alt="img"></p><p>图3-3 业务流程图 </p><h3 id="3-2-2-数据传递流程设计"><a href="#3-2-2-数据传递流程设计" class="headerlink" title="3.2.2 数据传递流程设计"></a>3.2.2 数据传递流程设计</h3><p>数据传递流程设计包括各个功能模块之间的数据传递和处理流程。</p><p>包括用户界面模块、后端服务模块、数据库模块和安全模块之间的数据传递流程。</p><p>车次、车票和站点数据在系统各个模块之间的传递和处理：</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251737617.gif" alt="img"></p><p>图3-4 车次、车票、站点管理数据流图</p><h2 id="3-3-用户界面设计"><a href="#3-3-用户界面设计" class="headerlink" title="3.3 用户界面设计"></a>3.3 用户界面设计</h2><h3 id="3-3-1-登录界面设计"><a href="#3-3-1-登录界面设计" class="headerlink" title="3.3.1 登录界面设计"></a>3.3.1 登录界面设计</h3><p>登录界面应具有以下元素：</p><p>​    用户名输入框</p><p>​    密码输入框</p><p>​    登录按钮</p><p>​    忘记密码链接</p><p>​    注册链接</p><p>用户可以在用户名输入框中输入他们的用户名，密码输入框中输入对应的密码，并通过点击登录按钮进行身份验证和登录操作；</p><p>如果用户忘记密码，可以点击”忘记密码”链接，进行密码重置操作；</p><p>如果用户还没有注册账号，可以点击”注册”链接，系统将导航用户到注册界面，以完成新账号的注册流程。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251731814.gif" alt="img"><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251731349.gif" alt="img"></p><p>图3-5 用户登录与密码重置</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251738082.gif" alt="img"></p><p>图3-6 新用户注册</p><h3 id="3-3-2-车票查询与预订界面设计"><a href="#3-3-2-车票查询与预订界面设计" class="headerlink" title="3.3.2 车票查询与预订界面设计"></a>3.3.2 车票查询与预订界面设计</h3><p>车票查询与预定界面应具有以下元素：</p><p>​        始发站输入框</p><p>​       终点站输入框</p><p>​        发车时间选择器</p><p>​         到达时间选择器</p><p>​        搜索按钮</p><p>​        车票列表</p><p>​         预定按钮</p><p>用户可以在始发站输入框和终点站输入框中输入相应的城市或车站名称，选择发车日期，并通过点击查询按钮来获取符合条件的车票列表；</p><p>车票列表应显示可用车票的相关信息，如车次、出发时间、到达时间和票价等；</p><p>用户可以选择某个车票，并通过点击预定按钮来预订选定的车票。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251738186.gif" alt="img"></p><p>图3-7 售票大厅</p><h3 id="3-3-3-订单管理界面设计"><a href="#3-3-3-订单管理界面设计" class="headerlink" title="3.3.3 订单管理界面设计"></a>3.3.3 订单管理界面设计</h3><p>订单管理界面应具有以下元素：</p><p>​     订单列表</p><p>​    订单详情</p><p>​    取消订单按钮</p><p>订单列表应显示用户已预订的所有订单的摘要信息，如订单号、车次、出发时间和状态等；</p><p>用户可以选择某个订单，并在订单详情中查看更详细的订单信息，如乘客姓名、座位信息和付款状态等。</p><p>用户可以通过点击取消订单按钮来取消选定的订单。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251738579.gif" alt="img"></p><p>图3-8 我的订单</p><h1 id="第4章-数据库设计"><a href="#第4章-数据库设计" class="headerlink" title="第4章 数据库设计"></a>第4章 数据库设计</h1><h2 id="4-1-数据库设计"><a href="#4-1-数据库设计" class="headerlink" title="4.1 数据库设计"></a>4.1 数据库设计</h2><p>数据库是指自描述的完整记录的集合。它除了包含用户的源数据外，还包含关于它本身结构的描述。</p><p>数据库设计是建立数据库及其应用系统的技术，是信息系统开发和建设中的核心技术，具体说，数据库设计是指对于一个给定的应用环境，构造最优的数据库模式，建立数据库及其应用系统，使之能够有效地存储数据，满足各种用户的应用需求。合理的数据库结构设计可以提高数据存储的效率，保证数据的完整和一致。另外，合理的数据库结构将非常有利于程序的实现。数据库设计(Database Design)是指根据用户的需求，在某一具体的数据库管理系统上，设计数据库的结构和建立数据库的过程，就是规划和结构化数据库中的数据对象以及这些数据对象之间关系的过程。</p><p>1、数据库设计的一般性原则</p><p>第一个基本规则：对于每一个要存储其信息的实体（或事物），我们都应该给他一个自己的表；</p><p>第二个处理规则：如果你需要在一个列中存储多个值，那证明你的设计可能是有缺陷的。</p><p>简单的数据关系：一对一；一对多；多对一；多对多</p><p>在数据库的设计中：要做到数据规范化、完整性、数据冗于和规范实例化。</p><p>在整个设计过程中，必须按步骤认真完成。</p><p>2、数据库设计的过程(六个阶段) </p><p>需求分析阶段，准确了解与分析用户需求（包括数据与处理）是整个设计过程的基础，是最困难、最耗费时间的一步。</p><p>概念结构设计阶段是整个数据库设计的关键，通过对用户需求进行综合、归纳与抽象，形成一个独立于具体DBMS的概念模型。</p><p>逻辑结构设计阶段将概念结构转换为某个DBMS所支持的数据模型对其进行优化。</p><p>数据库物理设计阶段为逻辑数据模型选取一个最适合应用环境的物理结构（包括存储结构和存取方法）。</p><p>数据库实施阶段运用DBMS提供的数据语言、工具及宿主语言，根据逻辑设计和物理设计的结果建立数据库，编制与调试应用程序，组织数据入库，并进行试运行。</p><p>数据库运行和维护阶段数据库应用系统经过试运行后即可投入正式运行。在数据库系统运行过程中必须不断地对其进行评价、调整与修改。</p><p>在设计过程中把数据库的设计和对数据库中数据处理的设计紧密结合起来将这两个方面的需求分析、抽象、设计、实现在各个阶段同时进行，相互参照，相互补充，以完善两方面的设计。</p><p>数据库的设计在数据库应用系统的开发中占有很重要的地位。只有设计出合理的数据库，才能为建立在数据库上的应用提供方便。</p><h2 id="4-2-概念设计"><a href="#4-2-概念设计" class="headerlink" title="4.2 概念设计"></a>4.2 概念设计</h2><p>概念设计阶段，一般是使用语义数据模型描述概念模型，目的是使即使是非专业人员也可以看的懂。通常是使用E-R模型图作为概念设计的描述工具进行设计。</p><p>概念结构设计的第一步就是对需求分析阶段收集到的数据进行分类、组织（聚集），形成实体、实体的属性，标识实体的码，确定实体之间的联系类型（1：1，1：N，M：N），设计分E-R图。</p><p>在经过仔细调查12306网站的售票过程和对内容的详细分析基础上，对本系统的需求，设计了数据库的E-R图，部分如下：</p><p>（1）用户E-R图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251740130.gif" alt="img"></p><p>图4-1 用户E-R图</p><p>（2）售票信息E-R图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251739350.gif" alt="img"></p><p>图4-2 售票信息E-R图</p><p>（3）订票信息E-R图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251739353.gif" alt="img"></p><p>图4-3 订票信息E-R图</p><p>（4）列车信息E-R图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251739361.gif" alt="img"></p><p>图4-4 车次信息E-R图</p><h2 id="4-3-逻辑设计"><a href="#4-3-逻辑设计" class="headerlink" title="4.3 逻辑设计"></a>4.3 逻辑设计</h2><p>逻辑结构设计的主要任务是，把由概念结构设计阶段得出的E-R图转换为相应的逻辑结构。数据库逻辑设计包括所需的实体和关系，实体规范化等工作。数据库逻辑设计决定了数据库及其应用的整体性能，调优位置。如果数据库逻辑设计不好，则所有调优方法对于提高数据库性能的效果都是有限的。为了使数据库设计的方法走向完备，数据库的规范化理论必须遵守。规范化理论为数据库逻辑设计提供了理论指导和工具，在减少了数据冗余的同时节约了存储空间，同时加快了增、删、改的速度。</p><p>在规范的数据库逻辑设计时，还应考虑适当地破坏规范规则，即反规范化设计，来降低索引、表的数目，降低连接操作的数目，从而加快查询速度。常用的反规范技术有增加冗余列、增加派生列、重新组表等。 总之，在进行数据库逻辑设计时，一定要结合应用环境和现实世界的具体情况合理地选择数据库模式。</p><p>用户信息表，订票信息表，售票信息表，列车信息表，座位信息表分别如下面的5个表所示。</p><p>   表4-1 用户信息表</p><table><thead><tr><th>列名</th><th>数据类型</th><th>长度</th><th>是否主键</th><th>是否可空</th></tr></thead><tbody><tr><td>用户名</td><td>Int</td><td>5</td><td>是</td><td>Not null</td></tr><tr><td>密码</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>姓名</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>身份证号</td><td>Varchar</td><td>18</td><td>否</td><td>null</td></tr><tr><td>邮箱</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>手机号</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>账户余额</td><td>Double</td><td>11</td><td>否</td><td>null</td></tr><tr><td>权限</td><td>TinyInt</td><td>1</td><td>否</td><td>null</td></tr><tr><td>登录时间</td><td>DateTime</td><td>20</td><td>否</td><td>null</td></tr></tbody></table><p>表4-2订票信息表</p><table><thead><tr><th>列  名</th><th>数据类型</th><th>长    度</th><th>是否主键</th><th>是否可空</th></tr></thead><tbody><tr><td>订单id</td><td>Varchar</td><td>45</td><td>是</td><td>Not null</td></tr><tr><td>订票人用户名</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>订票人姓名</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>下单时间</td><td>Datetime</td><td>20</td><td>否</td><td>null</td></tr><tr><td>发车时间</td><td>Datetime</td><td>20</td><td>否</td><td>null</td></tr><tr><td>预计到达时间</td><td>Datetime</td><td>20</td><td>否</td><td>null</td></tr><tr><td>始发站</td><td>Varchar</td><td>11</td><td>否</td><td>null</td></tr><tr><td>终点站</td><td>Varchar</td><td>11</td><td>否</td><td>null</td></tr><tr><td>列车名</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>订单状态</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>座位类型</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>座位号</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr></tbody></table><p>表4-3 售票信息表</p><table><thead><tr><th>字段名</th><th>数据类型</th><th>长    度</th><th>是否主键</th><th>是否可空</th></tr></thead><tbody><tr><td>车票ID</td><td>Int</td><td>11</td><td>是</td><td>Not null</td></tr><tr><td>车次</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>始发站</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>终点站</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>票价</td><td>Int</td><td>11</td><td>否</td><td>null</td></tr><tr><td>发车时间</td><td>DateTime</td><td>20</td><td>否</td><td>null</td></tr><tr><td>预计到达时间</td><td>DateTime</td><td>20</td><td>否</td><td>null</td></tr><tr><td>历时</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>列车类型</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>票数</td><td>Int</td><td>10</td><td>否</td><td>null</td></tr></tbody></table><p>表4-4 列车信息表</p><table><thead><tr><th>字段名</th><th>数据类型</th><th>长    度</th><th>是否主键</th><th>是否可空</th></tr></thead><tbody><tr><td>列车名</td><td>Varchar</td><td>45</td><td>是</td><td>Not null</td></tr><tr><td>始发站</td><td>Varchar</td><td>45</td><td>否</td><td>Not null</td></tr><tr><td>票价</td><td>Double</td><td>11</td><td>否</td><td>Not null</td></tr><tr><td>票数</td><td>Int</td><td>11</td><td>否</td><td>Not null</td></tr></tbody></table><p>表4-5座位信息表</p><table><thead><tr><th>列  名</th><th>数据类型</th><th>长    度</th><th>是否主键</th><th>是否可空</th></tr></thead><tbody><tr><td>座位ID</td><td>Int</td><td>11</td><td>是</td><td>Not null</td></tr><tr><td>所属列车</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>座位类型</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>车厢</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>座位号</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr><tr><td>状态</td><td>Varchar</td><td>45</td><td>否</td><td>null</td></tr></tbody></table><p> 第5章 详细设计</p><h2 id="5-1-系统主页"><a href="#5-1-系统主页" class="headerlink" title="5.1 系统主页"></a>5.1 系统主页</h2><p>通过登录站点<a href="http://58.87.71.4:8080/TRS/%E8%AE%BF%E9%97%AE%E7%B3%BB%E7%BB%9F%E4%B8%BB%E9%A1%B5%E9%9D%A2%EF%BC%8C%E8%BE%93%E5%85%A5%E7%94%A8%E6%88%B7%E6%88%96%E7%AE%A1%E7%90%86%E5%91%98%E7%9A%84%E4%BF%A1%E6%81%AF%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E7%9A%84%E7%99%BB%E5%BD%95%E5%92%8C%E7%94%A8%E6%88%B7%E8%BA%AB%E4%BB%BD%E7%9A%84%E8%AF%86%E5%88%AB%EF%BC%8C%E5%B9%B6%E5%8C%BA%E5%88%AB%E7%94%A8%E6%88%B7%E7%9A%84%E6%9D%83%E9%99%90%E5%AE%9E%E7%8E%B0%E4%B8%8D%E9%80%9A%E7%9A%84%E6%93%8D%E4%BD%9C%E3%80%82">http://58.87.71.4:8080/TRS/访问系统主页面，输入用户或管理员的信息实现用户的登录和用户身份的识别，并区别用户的权限实现不通的操作。</a></p><p>系统主页是用户访问铁路售票系统的入口，应该提供清晰的导航和主要功能入口。设计要点如下：</p><p>导航栏：包含系统的Logo和主要功能链接，如车票查询、订单管理等。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251742088.gif" alt="img"></p><p>图5-1 导航栏</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251745238.gif" alt="img"></p><p>图5-2 导航栏</p><p>车票查询模块：提供车票查询表单，包括始发站、终点站、发车时间等条件输入框和搜索按钮。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251746512.gif" alt="img"></p><p>图5-3 车票查询模块</p><p>用户登录&#x2F;注册入口：在页面中提供用户登录和注册的链接，方便用户进行身份验证和账号注册。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251746699.gif" alt="img"></p><p>图5-4 用户登录&#x2F;注册入口</p><h2 id="5-2-管理员页面设计"><a href="#5-2-管理员页面设计" class="headerlink" title="5.2 管理员页面设计"></a>5.2 管理员页面设计</h2><p>选择管理员登录并通过系统验证之后，会显示管理员管理界面。通过次界面可完成列车管理、始终站管理、座位管理和车票管理。</p><p>管理员页面是用于管理订单、座位和车次等信息的界面。设计要点如下：</p><p>管理导航栏：包含管理员功能的链接，如订单管理、座位管理、车次管理等。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251742094.gif" alt="img"></p><p>图5-5 导航栏管理（用户管理）</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251746637.gif" alt="img"></p><p>图5-6 导航栏管理（系统管理）</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251742184.gif" alt="img"></p><p>图5-7 导航栏管理（票务管理）</p><p>订单管理模块：提供订单查询、修改和取消功能，显示订单列表和订单详细信息。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251747578.gif" alt="img"></p><p>图5-8 订单管理</p><p>座位管理模块：提供座位状态查询、座位调整和座位信息更新功能。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251747583.gif" alt="img"></p><p>图5-9 座位管理</p><p>车次管理模块：提供车次信息的添加、更新和删除功能，包括车次号、出发时间、座位数等。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251747204.gif" alt="img"></p><p>图5-10 车次管理</p><h2 id="5-3-用户功能界面设计"><a href="#5-3-用户功能界面设计" class="headerlink" title="5.3 用户功能界面设计"></a>5.3 用户功能界面设计</h2><p>通过选择用户登录输入用户的帐号和密码，验证通过后显示用户功能界面，若是第一次登录本系统可进行个人信息的注册。</p><p>用户功能界面是用户进行车票查询、订票、订单管理等操作的界面。设计要点如下：</p><p>用户导航栏：包含用户相关功能的链接，如个人信息管理、订单查询等。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251742365.gif" alt="img"></p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251747293.gif" alt="img"></p><p>图5-12 用户导航栏（票务中心）</p><p>车票查询模块：提供车票查询表单，包括始发站、终点站、发车时间等条件输入框和搜索按钮。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251742306.gif" alt="img"></p><p>图5-13 车票查询</p><p>车票列表模块：显示符合条件的车票列表，包括车次、出发时间、到达时间和票价等信息。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251747093.gif" alt="img"></p><p>图5-14 车票列表</p><p>订票确认模块：显示选定车票的详细信息和座位选择，用户确认后生成订单并进行支付。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251748292.gif" alt="img"></p><p>图5-15 订票确认</p><p>订单管理模块：显示用户已预订的订单列表和订单详细信息，提供订单取消功能。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251742362.gif" alt="img"></p><p>图5-16 订单管理（我的订单）</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251742589.gif" alt="img"></p><p>图5-17 订单管理（订单详细）</p><h2 id="5-4-数据存储方案"><a href="#5-4-数据存储方案" class="headerlink" title="5.4 数据存储方案"></a>5.4 数据存储方案</h2><p>在数据存储方面，选择使用关系型数据库（MySQL）</p><p>1、表的创建：</p><p>使用SQL语句创建上述表结构，并设置主键、外键等约束，以确保数据的完整性和一致性。</p><p>2、数据的存储和检索：</p><p>根据系统需求，使用数据库的增删改查操作来实现数据的存储和检索。</p><p>用户注册时，将用户信息插入到用户信息表（User）中；当用户进行车次查询时，通过查询相关表（如售票信息表和列车信息表）来获取符合条件的车次信息；当用户进行订票操作时，插入订票信息到订单信息表（Order）中，并更新座位信息表（Seat）的座位状态；当用户需要管理订单时，通过查询订单信息表（Order）来获取用户的订单列表。</p><h1 id="第6章-系统实现"><a href="#第6章-系统实现" class="headerlink" title="第6章 系统实现"></a>第6章 系统实现</h1><h2 id="6-1-开发工具与技术栈"><a href="#6-1-开发工具与技术栈" class="headerlink" title="6.1 开发工具与技术栈"></a>6.1 开发工具与技术栈</h2><p>技术栈：</p><p>后端：Spring、SpringMVC、MyBatis</p><p>前端：JSP、jQuery、EasyUI</p><p>开发工具：</p><p>JDK1.8 + IDEA + MySQL5.7</p><h3 id="6-1-1-开发环境配置"><a href="#6-1-1-开发环境配置" class="headerlink" title="6.1.1 开发环境配置"></a>6.1.1 开发环境配置</h3><p>安装JDK1.8：下载并安装Java Development Kit (JDK) 1.8版本，确保您的开发环境中具有Java编译和运行的能力。</p><p>安装开发工具：选择合适的集成开发环境（IDE），例如IntelliJ IDEA或Eclipse。安装并配置您选择的开发工具，以便进行项目的开发和管理。</p><p>安装MySQL数据库：下载并安装MySQL数据库，建议使用版本5.7。设置数据库的用户名和密码，并确保数据库服务正在运行。</p><p>搭建SSM框架：创建一个基于SSM（Spring、SpringMVC、MyBatis）框架的项目。可以使用Maven构建工具来创建项目结构和管理依赖项。</p><p>配置项目依赖：在项目配置文件中（如pom.xml），添加相关的依赖项，包括Spring、SpringMVC、MyBatis等框架和数据库驱动。</p><p>配置数据库连接：在项目的配置文件中，设置数据库连接的相关信息，包括数据库的URL、用户名和密码，以及数据库连接池的配置。</p><p>编写JSP网页：使用JSP技术编写前端网页，包括登录界面、车票查询与预订界面、订单管理界面等。可以使用HTML、CSS和JavaScript等技术增强用户界面的交互性和美观性。</p><p>实现后端逻辑：使用SpringMVC框架编写控制器（Controller）来处理用户请求，调用相应的服务层（Service）处理业务逻辑，最终与数据库交互通过MyBatis实现数据的持久化。</p><p>部署和调试：将项目部署到Web服务器中（例如Tomcat），启动服务器并进行调试，确保系统能够正常运行。</p><h3 id="6-1-2-技术栈选择与理由"><a href="#6-1-2-技术栈选择与理由" class="headerlink" title="6.1.2 技术栈选择与理由"></a>6.1.2 技术栈选择与理由</h3><p>Spring框架：Spring框架是一个轻量级的开发框架，提供了丰富的功能和模块，如依赖注入、AOP、事务管理等。选择Spring框架的主要理由是它的松耦合特性和便于测试的设计，能够提高代码的可维护性和可测试性。</p><p>SpringMVC框架：SpringMVC是基于MVC设计模式的Web框架，它提供了强大的处理请求和响应的功能。选择SpringMVC的原因是它的灵活性和可扩展性，可以方便地处理用户请求并将数据传递给视图层。</p><p>MyBatis框架：MyBatis是一个优秀的持久层框架，它提供了强大的数据库访问能力和灵活的SQL映射配置。选择MyBatis的理由是它的高性能、易于集成和可读性强的SQL映射配置文件，使开发人员能够更好地管理和优化数据库访问。</p><p>JSP和jQuery：JSP作为前端视图层技术，可以与后端Java代码无缝集成，便于动态生成HTML内容。选择JSP的原因是它的易用性和熟悉度，使开发人员能够快速构建动态网页。同时，jQuery作为一个流行的JavaScript库，提供了丰富的特性和插件，简化了前端开发的复杂性和跨浏览器兼容性问题。</p><p>EasyUI：EasyUI是一款基于jQuery的UI库，提供了丰富的界面组件和易于使用的API。选择EasyUI的主要原因是它的简单性和美观性，使开发人员能够快速构建用户友好的界面。</p><p>综上所述，选择Spring、SpringMVC、MyBatis作为后端框架，以及JSP、jQuery和EasyUI作为前端技术栈，是为了兼顾开发效率、代码可维护性和用户友好性。这些技术在Java开发领域具有广泛的应用和成熟的生态系统，可以提供稳定、高效且易于维护的铁路售票系统。</p><h2 id="6-2-前端实现与用户界面设计"><a href="#6-2-前端实现与用户界面设计" class="headerlink" title="6.2 前端实现与用户界面设计"></a>6.2 前端实现与用户界面设计</h2><h3 id="6-2-1-前端框架选择与配置"><a href="#6-2-1-前端框架选择与配置" class="headerlink" title="6.2.1 前端框架选择与配置"></a>6.2.1 前端框架选择与配置</h3><p>在铁路售票系统的开发中，选择合适的前端框架可以提高开发效率、增强用户体验，并简化界面设计和交互流程的实现。基于SSM框架的铁路售票系统，可以考虑使用以下前端框架和工具：</p><p>JSP（JavaServer Pages）：作为Java的服务器端视图技术，JSP可以与后端代码无缝集成，方便动态生成HTML内容。通过JSP，开发者可以将Java代码嵌入到HTML页面中，实现动态数据的展示和交互操作。</p><p>jQuery：jQuery是一个流行的JavaScript库，提供了丰富的特性和插件，简化了前端开发的复杂性和跨浏览器兼容性问题。它提供了强大的DOM操作、事件处理、Ajax请求等功能，可以简化前端交互的实现。</p><p>EasyUI：EasyUI是一个基于jQuery的UI库，提供了各种界面组件和易于使用的API，能够快速构建用户友好的界面。通过使用EasyUI，开发者可以轻松实现表格、表单、对话框等常见的界面元素，提升用户体验。</p><p>配置这些前端框架时，需要将相应的资源文件（如CSS、JavaScript文件）引入到项目中，并按需配置和调用相应的组件和功能。</p><h3 id="6-2-2-用户界面设计与交互流程"><a href="#6-2-2-用户界面设计与交互流程" class="headerlink" title="6.2.2 用户界面设计与交互流程"></a>6.2.2 用户界面设计与交互流程</h3><p>用户界面设计是铁路售票系统开发中的重要环节，合理的界面设计和良好的交互流程能够提升用户体验并简化操作。以下是一些设计原则和建议</p><p>界面布局：设计简洁明了的布局，使用户能够清晰地理解和操作界面。考虑使用网格布局或栅格系统来实现页面的整齐排列，并合理安放不同功能模块和操作按钮。</p><p>导航和菜单：提供清晰的导航栏和菜单，使用户能够快速切换和访问不同的功能模块。考虑使用导航栏、侧边栏或下拉菜单等形式，提供直观的导航和访问路径。</p><p>表单和输入验证：对于需要用户输入的内容，设计合适的表单元素，并实施输入验证，确保数据的准确性和完整性。使用合适的错误提示和验证规则，帮助用户正确填写表单信息。</p><p>反馈和提示：及时提供操作反馈和提示信息，让用户了解操作结果和状态。使用合适的提示框、加载动画或弹出窗口等方式，向用户展示信息，并确保信息的清晰易懂。</p><p>交互流程：设计直观且易于理解的交互流程，使用户能够顺利完成操作。考虑使用流程图或状态转换图等方式，明确展示不同功能模块之间的关系和操作流程。</p><p>在设计用户界面和交互流程时，要充分考虑用户的需求和使用习惯，尽量简化操作步骤，提供直观的视觉反馈，以提升用户的满意度和系统的易用性。</p><h2 id="6-3-后端实现与数据库设计"><a href="#6-3-后端实现与数据库设计" class="headerlink" title="6.3 后端实现与数据库设计"></a>6.3 后端实现与数据库设计</h2><h3 id="6-3-1-服务器端架构设计"><a href="#6-3-1-服务器端架构设计" class="headerlink" title="6.3.1 服务器端架构设计"></a>6.3.1 服务器端架构设计</h3><p>服务器端架构设计主要涉及整体的软件架构和模块划分，以实现系统的稳定性、扩展性和性能优化。在基于SSM框架的铁路售票系统中，可以采用以下架构设计：</p><p>MVC架构：使用Spring MVC作为控制器层，实现请求的路由和处理。</p><p>业务逻辑层：使用Spring框架作为业务逻辑层的容器，处理具体的业务逻辑和服务调用。</p><p>数据访问层：使用MyBatis作为数据访问层的ORM框架，通过Mapper接口与数据库进行交互。</p><p>数据库连接池：配置数据库连接池，如使用开源的Druid连接池，以提高数据库连接的效率和性能。</p><h3 id="6-3-2-数据库设计与连接池配置"><a href="#6-3-2-数据库设计与连接池配置" class="headerlink" title="6.3.2 数据库设计与连接池配置"></a>6.3.2 数据库设计与连接池配置</h3><p>在铁路售票系统中，数据库设计是基于系统需求的重要一环。根据提供的信息，可以考虑以下表的设计：</p><p>  用户表（User）：存储用户的注册信息和个人信息。</p><p>  车票表（Ticket）：存储车次和座位的信息。</p><p>  订单表（Order）：存储用户的订单信息。</p><p>  座位表（Seat）：存储座位的状态和位置信息。</p><p>  列车表（Train）：存储车次的信息。</p><p>  站点表（Station）：存储站点的信息。</p><p>针对以上数据库表的设计，可以使用MySQL作为数据库管理系统，通过navicat15等工具进行数据库建表和数据维护。同时，需要进行数据库连接池的配置，例如使用Druid连接池。连接池的配置包括连接池大小、最大连接数、连接超时等参数的设置，以满足系统的并发访问和高性能要求。</p><h3 id="6-3-3-后端业务逻辑实现与接口设计"><a href="#6-3-3-后端业务逻辑实现与接口设计" class="headerlink" title="6.3.3 后端业务逻辑实现与接口设计"></a>6.3.3 后端业务逻辑实现与接口设计</h3><p>后端业务逻辑实现和接口设计是系统功能的核心部分。根据系统功能需求，可以分析每个功能模块的具体业务逻辑和接口设计，例如：</p><p>用户管理功能：实现用户注册、登录、个人信息修改等接口。</p><p>车次查询与订票功能：实现车次查询、座位选择、订票确认等接口。</p><p>退票功能：实现退票申请、退票审核、退款处理等接口。</p><p>票务管理功能：实现订单管理、座位管理、车次管理等接口。</p><p>在实现这些功能时，可以遵循面向对象的设计原则，将不同功能模块封装为相应的服务类，实现业务逻辑的复用和模块间的解耦。同时，需要定义清晰的接口规范，包括请求参数的定义、响应数据的格式和错误处理机制，以便前端和其他系统能够准确调用和使用这些接口。</p><h2 id="6-4-Docker容器部署"><a href="#6-4-Docker容器部署" class="headerlink" title="6.4 Docker容器部署"></a>6.4 Docker容器部署</h2><p>基于SSM实现的云端购票系统采用Docker容器进行部署，经分析，需要部署两个容器（Tomcat容器、MySQL容器），由于只需两个容器，故选择直接拉取镜像，创建容器，而非选择使用docker compose进行编排。</p><h3 id="6-4-1-环境准备"><a href="#6-4-1-环境准备" class="headerlink" title="6.4.1 环境准备"></a>6.4.1 环境准备</h3><p>服务器：腾讯云服务器（IP：58.87.71.4）</p><p>Docker容器</p><p>MySQL镜像</p><p>Tomcat镜像</p><h3 id="6-4-2-Tomcat容器"><a href="#6-4-2-Tomcat容器" class="headerlink" title="6.4.2 Tomcat容器"></a>6.4.2 Tomcat容器</h3><p>使用以下命令拉取tomcat9.0.43镜像</p><p>docker pull tomcat:9.0.43</p><p>使用以下命令创建tomcat容器（容器名：mytomcat9，端口映射：容器8080映射服务器8080）</p><p>docker run -d -p 8080:8080 –name mytomcat9 tomcat:9.0.43</p><h3 id="6-4-3-MySQL容器"><a href="#6-4-3-MySQL容器" class="headerlink" title="6.4.3 MySQL容器"></a>6.4.3 MySQL容器</h3><p>使用以下命令拉取MySQL8.0.22镜像</p><p>docker pull mysql:8.0.22</p><p>使用以下命令创建MySQL容器（容器名mysql，端口映射：容器3306映射服务器3307，设置MySQL密码12345678）</p><p>挂载数据卷：&#x2F;root&#x2F;mysql&#x2F;log:&#x2F;var&#x2F;log&#x2F;mysql；&#x2F;root&#x2F;mysql&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql；&#x2F;root&#x2F;mysql&#x2F;conf:&#x2F;etc&#x2F;mysql&#x2F;conf.d</p><p>docker run -d -p 3307:3306 –privileged&#x3D;true -v &#x2F;root&#x2F;mysql&#x2F;log:&#x2F;var&#x2F;log&#x2F;mysql -v &#x2F;root&#x2F;mysql&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -v &#x2F;root&#x2F;mysql&#x2F;conf:&#x2F;etc&#x2F;mysql&#x2F;conf.d -e MYSQL_ROOT_PASSWORD&#x3D;12345678 –name mysql mysql:8.0.22</p><p>下附容器运行情况：</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251749501.gif" alt="img"></p><p>图6-1 容器运行情况</p><h3 id="6-4-4-本地数据库连接云端数据库"><a href="#6-4-4-本地数据库连接云端数据库" class="headerlink" title="6.4.4 本地数据库连接云端数据库"></a>6.4.4 本地数据库连接云端数据库</h3><p>Navicat连接云端数据库：</p><p>连接名：58.87.71.4</p><p>IP：58.87.71.4</p><p>端口：3307</p><p>密码：****</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251742253.gif" alt="img"></p><p>图6-2  Navicat连接图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251749785.gif" alt="img"></p><p>图6-3 云端数据库</p><h3 id="6-4-5-公网访问"><a href="#6-4-5-公网访问" class="headerlink" title="6.4.5 公网访问"></a>6.4.5 公网访问</h3><p>IP+端口+项目名：<a href="http://58.87.71.4:8080/TRS/">http://58.87.71.4:8080/TRS/</a></p><h1 id="第7章-测试报告"><a href="#第7章-测试报告" class="headerlink" title="第7章 测试报告"></a>第7章 测试报告</h1><h2 id="7-1-测试目的和范围"><a href="#7-1-测试目的和范围" class="headerlink" title="7.1 测试目的和范围"></a>7.1 测试目的和范围</h2><h3 id="7-1-1-测试目的"><a href="#7-1-1-测试目的" class="headerlink" title="7.1.1 测试目的"></a>7.1.1 测试目的</h3><p>⑴ 测试在线高铁售票系统的功能是否符合需求分析环节产生的需求，是否能够正常运行，是否存在缺陷或错误。</p><p>⑵ 测试在线高铁售票系统的性能是否满足用户的期望，是否能够承受高并发的访问压力，是否具有良好的响应速度和稳定性。</p><p>⑶ 测试在线高铁售票系统的安全性是否能够保护用户的隐私和数据，是否能够防止恶意攻击和篡改，是否具有合理的权限控制和异常处理机制。</p><h3 id="7-1-2测试范围"><a href="#7-1-2测试范围" class="headerlink" title="7.1.2测试范围"></a>7.1.2测试范围</h3><p>⑴ 测试对象为在线高铁售票系统，包括前台用户模块和后台管理员模块。</p><p>⑵ 测试内容包括功能测试、性能测试、安全测试、兼容性测试、易用性测试等。</p><p>⑶ 使用Fiddler进行弱网测试，前端性能测试</p><p>⑷ 测试方法为黑盒测试和白盒测试相结合，采用等价类划分、边界值分析、场景分析等技术设计测试用例，在时间充足的情况下使用JUnit框架执行单元测试，使用Selenium框架执行自动化测试等（若时间紧张则采取冒烟测试）。</p><h2 id="7-2-测试环境和工具"><a href="#7-2-测试环境和工具" class="headerlink" title="7.2 测试环境和工具"></a>7.2 测试环境和工具</h2><h3 id="7-2-1-测试环境"><a href="#7-2-1-测试环境" class="headerlink" title="7.2.1 测试环境"></a>7.2.1 测试环境</h3><p>⑴ 测试环境为基于centos7的腾讯云轻量应用服务器，Java 8开发语言，MySQL 8数据库，Tomcat 9服务器，Docker容器。</p><p>⑵ 测试环境需要保证网络通畅，数据库连接正常，服务器运行稳定，浏览器兼容性良好。</p><p>⑶ 测试环境需要与开发环境和生产环境保持一致，避免因环境差异导致的测试结果不准确。</p><h3 id="7-2-2-测试工具"><a href="#7-2-2-测试工具" class="headerlink" title="7.2.2 测试工具"></a>7.2.2 测试工具</h3><p>⑴ 测试工具包括Selenium框架、JMeter压力测试工具、Chrome浏览器，Firefox浏览器，Edge浏览器等，Fiddler抓包工具。</p><p>⑵ Selenium框架用于执行自动化测试，模拟用户的操作行为和界面交互。</p><p>⑶ JMeter压力测试工具用于执行性能测试，模拟高并发的访问压力和响应速度。</p><p>⑷ Chrome浏览器，Firefox浏览器，Edge浏览器用于展示和检查系统的前端页面和功能并测试系统兼容性。</p><h2 id="7-3-测试方法和执行结果"><a href="#7-3-测试方法和执行结果" class="headerlink" title="7.3 测试方法和执行结果"></a>7.3 测试方法和执行结果</h2><h3 id="7-3-1-功能测试"><a href="#7-3-1-功能测试" class="headerlink" title="7.3.1 功能测试"></a>7.3.1 功能测试</h3><h4 id="7-3-1-1-测试用例"><a href="#7-3-1-1-测试用例" class="headerlink" title="7.3.1.1 测试用例"></a>7.3.1.1 测试用例</h4><p>⑴ 登录注册模块</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251751861.gif" alt="img"></p><p>图7-1 登录用例图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251751824.gif" alt="img"></p><p>图7-2 注册用例图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251751620.gif" alt="img"></p><p>图7-3注册用例图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251752113.gif" alt="img"></p><p>图7-4注册用例图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251752342.gif" alt="img"></p><p>图7-5 注册用例图</p><p>⑵ 管理员公告管理功能</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251752220.gif" alt="img"></p><p>图7-6 管理员公告管理用例图</p><p>⑶ 管理员始终站管理功能</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251753384.gif" alt="img"></p><p>图7-7 管理员始终站管理用例图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251753379.gif" alt="img"></p><p>图7-8 管理员始终站管理用例图</p><p>⑷ 管理员列车管理功能</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251754079.gif" alt="img"></p><p>图7-9 管理员列车管理用例图</p><p>⑸ 管理员座位管理功能</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251754603.gif" alt="img"></p><p>图7-10 管理员座位管理用例图</p><p>⑹ 管理员票务管理功能</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251755930.gif" alt="img"></p><p>图7-11 管理员票务管理用例图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251755403.gif" alt="img"></p><p>图7-12 管理员票务管理用例图</p><p>⑺  普通用户个人信息修改功能</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251755722.gif" alt="img"></p><p>图7-13 普通用户个人信息修改用例图</p><p>⑻ 普通用户售票大厅功能</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251755168.gif" alt="img"></p><p>图7-14 普通用户售票大厅用例图</p><p>⑼ 普通用户我的订单功能</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251756494.gif" alt="img"></p><p>图7-15 普通用户我的订单用例图</p><h4 id="7-3-1-2-测试用例执行"><a href="#7-3-1-2-测试用例执行" class="headerlink" title="7.3.1.2 测试用例执行"></a>7.3.1.2 测试用例执行</h4><p>共执行测试用例132例，通过120例，未通能过12例，通过率越91%，未出现S0级别错误，视作可接受版本。测试未通过用例（缺陷列表）见下图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251756621.gif" alt="img"></p><p>图7-16 未通过用例图</p><h3 id="7-3-2-兼容性测试"><a href="#7-3-2-兼容性测试" class="headerlink" title="7.3.2 兼容性测试"></a>7.3.2 兼容性测试</h3><h4 id="7-3-2-1-测试用例"><a href="#7-3-2-1-测试用例" class="headerlink" title="7.3.2.1 测试用例"></a>7.3.2.1 测试用例</h4><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251757745.gif" alt="img"></p><p>图7-17 兼容性测试用例图</p><h4 id="7-3-2-2-测试执行"><a href="#7-3-2-2-测试执行" class="headerlink" title="7.3.2.2 测试执行"></a>7.3.2.2 测试执行</h4><p>鉴于时间紧张，系统的兼容性测试采取分别对使用Chrome浏览器，Firefox浏览器，Edge浏览器对系统进行冒烟测试的方式进行。共执行业务9项（登陆注册，公告管理，始终站管理，列车管理，座位管理，票务管理， 个人信息管理，售票大厅，我的订单），总计27次冒烟测试，均未发现兼容性错误。</p><h3 id="7-3-3-弱网测试"><a href="#7-3-3-弱网测试" class="headerlink" title="7.3.3 弱网测试"></a>7.3.3 弱网测试</h3><h4 id="7-3-3-1-测试用例"><a href="#7-3-3-1-测试用例" class="headerlink" title="7.3.3.1 测试用例"></a>7.3.3.1 测试用例</h4><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251757473.gif" alt="img"></p><p>图7-18 弱网测试用例图</p><h4 id="7-3-3-2-测试执行"><a href="#7-3-3-2-测试执行" class="headerlink" title="7.3.3.2 测试执行"></a>7.3.3.2 测试执行</h4><p>通过Fiddler对购票系统的九大业务（登陆注册，公告管理，始终站管理，列车管理，座位管理，票务管理， 个人信息管理，售票大厅，我的订单）分别在各种网络环境（2G，3G，4G，WiFi，带宽有限环境）下进行弱网测试，共执行用例45例，在上行下行受限的情况下，响应相对受阻，功能均不受影响，弱网测试通过。下附2G环境下请求获得大量座位的响应截图，在图中可以看到响应开始到结束时间用时14s，在可接受范围。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251757284.gif" alt="img"></p><p>图7-19 2G环境下座位功能管理功能弱网测试图</p><h3 id="7-3-4-前端性能测试"><a href="#7-3-4-前端性能测试" class="headerlink" title="7.3.4 前端性能测试"></a>7.3.4 前端性能测试</h3><p>使用Fiddler对基本业务执行过程中页面响应进行前端页面性能分析，如图7-20，7-21。可以发现该系统访问期间html占据了大量的消耗时间，有待优化。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251758815.gif" alt="img"></p><p>图7-20 前端性能统计图</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202307251758819.gif" alt="img"></p><p>图7-21 前端性能Timeline图</p><h2 id="7-4-测试结果和分析"><a href="#7-4-测试结果和分析" class="headerlink" title="7.4 测试结果和分析"></a>7.4 测试结果和分析</h2><p>测试过程中共执行功能测试用例132例，通过120例，未通能过12例，通过率越91%；兼容性测试用例27例全部通过；弱网测试用例45例全部通过。其中功能测试未通过用例主要是管理员的修改功能出现缺陷，即修改过程中不能进行规则检测，性能测试过程中关于html响应时间过长主要是由于未合理对jsp文件进行有效拆分，选择使用权限控制实现对同一jsp的访问，最终导致往往需要获取一些无用html元素。</p><h2 id="7-5-测试结论和建议"><a href="#7-5-测试结论和建议" class="headerlink" title="7.5 测试结论和建议"></a>7.5 测试结论和建议</h2><p>系统总体满足测试放行要求，在业务逻辑层面没有明显错误，可以实现系统预定任务目标。但在一些方面有待优化，比如管理员的修改功能出现缺陷（不能进行规则检测），在新增过程中相应规则检测准确无误，这就意味着相关js可以实现复用，进而快速修复缺陷；此外关于前端性能的优化可以通过合理分析功能进而实现对jsp相关元素的划分，使得文件有选择地被请求，降低相应消耗时间。</p><h1 id="结-论"><a href="#结-论" class="headerlink" title="结 论"></a>结 论</h1><p>经过十天的设计与开发工作，本系统实现了以下功能：通过站点<a href="http://58.87.71.4:8080/TRS/%E8%AE%BF%E9%97%AE%E7%B3%BB%E7%BB%9F%E4%B8%BB%E9%A1%B5%E3%80%81%E7%94%A8%E6%88%B7%E8%BA%AB%E4%BB%BD%E7%9A%84%E8%AF%86%E5%88%AB%E3%80%81%E7%99%BB%E5%BD%95%EF%BC%9B%E7%AE%A1%E7%90%86%E5%91%98%E5%AF%B9%E8%BD%A6%E6%AC%A1%E7%9A%84%E6%B7%BB%E5%8A%A0%E3%80%81%E4%BF%AE%E6%94%B9%E3%80%81%E5%88%A0%E9%99%A4%EF%BC%8C%E8%BD%A6%E7%A5%A8%E7%9A%84%E6%B7%BB%E5%8A%A0%E3%80%81%E4%BF%AE%E6%94%B9%EF%BC%8C%E5%A7%8B%E7%BB%88%E7%AB%99%E7%82%B9%E7%9A%84%E6%B7%BB%E5%8A%A0%E3%80%81%E5%88%A0%E9%99%A4%E3%80%81%E4%BF%AE%E6%94%B9%EF%BC%9B%E6%99%AE%E9%80%9A%E7%94%A8%E6%88%B7%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E7%9A%84%E6%B3%A8%E5%86%8C%E3%80%81%E4%BF%AE%E6%94%B9%E3%80%81%E5%AF%B9%E8%BD%A6%E6%AC%A1%E7%9A%84%E6%9F%A5%E8%AF%A2%E3%80%81%E8%AE%A2%E7%A5%A8%E3%80%81%E4%BB%98%E6%AC%BE%E3%80%81%E9%80%80%E7%A5%A8%E5%8A%9F%E8%83%BD%E3%80%82">http://58.87.71.4:8080/TRS/访问系统主页、用户身份的识别、登录；管理员对车次的添加、修改、删除，车票的添加、修改，始终站点的添加、删除、修改；普通用户个人信息的注册、修改、对车次的查询、订票、付款、退票功能。</a></p><p>所设计的铁路售票系统，能实现火车票网上的售票、退票、订票、付款等操作，能够实现管理员对车次、车票、途径站点的管理更新操作。系统功能全面、易于日后程序更新、数据库管理容易、界面友好、操作方便、效率高。</p><p>本系统共有六个功能模块：登录功能模块、个人主页模块、查询功能模块、火车票预定模块、车次管理功能模块及火车票管理功能模块。系统采用B&#x2F;S架构，MVC开发模式，以IDEA作为前台软件开发工具，后台数据库选用MySQL数据库进行支持,采用Navicat 提供数据库可视化设计、模型建立、以及管理功能,利用目前比较流行的Tomcat9.X搭建Web 应用服务器，提供通过网页访问功能。为了进一步提升系统灵活性、可移植性、一致性和安全性同时简化了依赖管理和部署过程，系统使用Docker部署到腾讯云服务器。经过高覆盖系统功能测试得出结论：系统操作简单，功能完善；是按照软件工程的理论、方法和规范；遵循实用性、系统性、逐步完善、逐步发展的原则进行的开发。</p><p>由于对铁路售票系统的整个流程不够熟悉，在需求分析时没有考虑同时大量的用户对数据库同时进行操作的情况，导致系统在面临大量数据访问时会出现的瓶颈问题，这些都需要在数据库设计和数据更新时加以完善。火车票网上订票是面向全国用户，要求有安全稳定的数据库设计与操作，由于数据库选择的不妥，系统还不能满足大流量的数据操作，这也是本系统不尽人意的地方那个，这将在以后的修改中进一步的补充完善。</p><p>在本次的开发实践中，我们小组将掌握的专业理论知识很好地运用到了铁路售票系统的开发过程中，在对Java面向Web方向的设计中查阅到了大量的资料，做到了理论和实践相结合，在实践中加深了对专业理论知识的理解，并提升了对理论知识的运用能力，获得了许多宝贵的经验。学会了B&#x2F;S的系统架构和软件的MVC开发模式，以及与同学们之间相互帮助的精神，重视软件开发中的易使用性、可操作性和可移植性等。</p><h1 id="参-考-文-献"><a href="#参-考-文-献" class="headerlink" title="参 考 文 献"></a>参 考 文 献</h1><p>1 [美]莎丽·劳伦斯·弗里格 [加]乔安妮·M·阿特利.软件工程[M].杨卫东译.北京：人民邮电出版社，2019.</p><p>2 宁静_致远76. 用例图的三种关系包含、扩展、泛化[EB&#x2F;OL].   </p><p><a href="http://t.csdn.cn/okKR4%EF%BC%8C2014-10-21">http://t.csdn.cn/okKR4，2014-10-21</a>.</p><p>3 K I S. UML（用例图，类图，对象图，包图）[EB&#x2F;OL]. </p><p><a href="http://t.csdn.cn/QYOQ7%EF%BC%8C2021-11-02">http://t.csdn.cn/QYOQ7，2021-11-02</a></p><p>4 evandeng2009. 详解数据模型：概念模型、逻辑模型、物理模型[EB&#x2F;OL]. </p><p><a href="http://t.csdn.cn/DPbUJ%EF%BC%8C2021-12-30">http://t.csdn.cn/DPbUJ，2021-12-30</a></p><p>5 铁路售票现状和网络售票的优势分析[J]. 《交通节能与环保》, 2019(3). </p><p><a href="https://www.zhangqiaokeyan.com/academic-journal-cn_transport-energy-conservation-environmental-protection_thesis/0201271234805.html">https://www.zhangqiaokeyan.com/academic-journal-cn_transport-energy-conservation-environmental-protection_thesis/0201271234805.html</a></p><p>6 铁路售票发展现状与优化措施[J]. 《科技风》, 2019(16). </p><p><a href="https://www.zhangqiaokeyan.com/academic-journal-cn_technology-wind_thesis/0201274944252.html">https://www.zhangqiaokeyan.com/academic-journal-cn_technology-wind_thesis/0201274944252.html</a></p><p>7 张玉树.SQL Serve数据库程序设计[M].北京：人民邮电出版社，2008：35-105</p><p>8 贾洪峰.精通SQL 2008程序设计[M].北京：清华大学出版社,2008：43-85</p><p>9 [美] 乔特温，克瑞尔瑞.关系数据库和SQL编程[M].北京：清华大学出版社，2006：28-74</p><p>10 [美] Dennis kafura Java面向对象程序教程Simulink Component of MatLab[M]. Anesthesiology, 2007：83-97</p><p>11 舒尔茨.深入浅出HTML.[M].北京:人民邮电出版社,2008：45-84</p><p>12 古乐，史九林.软件测试技术概论[M] .北京：清华大学出版社.2004:66-78</p><p>13 李丽,史运平. 基于Java数据库访问技术[J].山西建筑, 2007.(05)</p><p>14 伍俊良. Java编程思想[M].北京：机械工业出版社，2004：89-112</p><p>15 仲治国.ASP动态网站:68个典型模块精解[M].北京: 北京希望电子出版社,2009：144-167</p><p>16 麦中凡、吕庆中等.计算机软件技术基础[M].北京：高等教育出版社 , 1999：33-76</p><p>17 朱少民.软件质量保证和管理[M] .北京：清华大学出版社.2007:34-38</p><p>18 赵燕燕 .ASP技术在Web数据库开发中的使用[J].河南职工医学院学报 ，2009：143-17</p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
      <tag>SSM</tag>
      
      <tag>铁路售票系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Anti-tampering of dynamic web pages(动态网页防篡改）</title>
    <link href="/2023/05/29/Anti-tampering%20of%20dynamic%20web%20pages(%E5%8A%A8%E6%80%81%E7%BD%91%E9%A1%B5%E9%98%B2%E7%AF%A1%E6%94%B9%EF%BC%89/"/>
    <url>/2023/05/29/Anti-tampering%20of%20dynamic%20web%20pages(%E5%8A%A8%E6%80%81%E7%BD%91%E9%A1%B5%E9%98%B2%E7%AF%A1%E6%94%B9%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="动态网页防篡改方案设计"><a href="#动态网页防篡改方案设计" class="headerlink" title="动态网页防篡改方案设计"></a>动态网页防篡改方案设计</h1><p><strong>CR SUST</strong></p><p>  中文摘要：</p><p>动态网页防篡改技术是保障网站安全性和稳定性的重要技术。本文详细介绍了动态网页防篡改技术的重要性和现状，分析了目前动态网页防篡改存在的问题，并提出了一种基于AES对称加密算法的动态网页防篡改方案。该方案通过对网页内容进行加密，能够有效地防止黑客对数据库内容的篡改，并实时监测数据库的安全状态，及时发现数据库被篡改的情况，从而采取相应的安全措施。</p><p>基于Django框架在动态网页防篡改方面有很多优越的贡献（首先，Django提供了内置的CSRF防护机制，可以有效地防止跨站请求伪造攻击；其次，Django提供了一些内置的安全性相关的中间件，例如X-Content-Type-Options、X-XSS-Protection和X-Frame-Options，这些中间件可以帮助开发者防止一些常见的安全漏洞，例如点击劫持和XSS攻击；此外，Django还提供了内置的密码哈希和加密机制，可以帮助开发者安全地存储用户密码和敏感数据；最后，Django还提供了灵活的认证和授权机制，可以帮助开发者实现细粒度的访问控制和权限管理），在实现过程中，我选择采用了Django框架</p><p>利用Django框架的优势，可以快速开发出高效且安全的动态网页防篡改系统。实验证明，该方案具有较高的安全性和实用性，具有广泛的应用前景。</p><p>英文摘要：</p><p>Dynamic webpage tamper-proofing technology is an important technique to ensure the security and stability of websites. This article introduces the importance and current status of dynamic webpage tamper-proofing technology in detail, analyzes the problems existing in current dynamic webpage tamper-proofing techniques, and proposes a dynamic webpage tamper-proofing scheme based on the AES symmetric encryption algorithm. This scheme encrypts webpage content to effectively prevent hackers from tampering with database content and monitors the security status of the database in real-time, promptly detecting cases of database tampering and taking corresponding security measures.</p><p>Django framework has made significant contributions to dynamic webpage tamper-proofing. Firstly, Django provides built-in CSRF protection mechanisms that can effectively prevent cross-site request forgery attacks. Secondly, Django provides a number of built-in security-related middleware, such as X-Content-Type-Options, X-XSS-Protection, and X-Frame-Options, which can help developers prevent common security vulnerabilities, such as clickjacking and XSS attacks. In addition, Django provides built-in password hashing and encryption mechanisms that can help developers securely store user passwords and sensitive data. Finally, Django provides flexible authentication and authorization mechanisms that can help developers implement fine-grained access control and permission management. Based on the advantages of the Django framework, a highly efficient and secure dynamic webpage tamper-proofing system can be developed quickly. The experimental results show that this scheme has high security and practicality, and has broad application prospects.</p><h1 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h1><h2 id="1-1动态网页防篡改技术的重要性和现状"><a href="#1-1动态网页防篡改技术的重要性和现状" class="headerlink" title="1.1动态网页防篡改技术的重要性和现状"></a>1.1动态网页防篡改技术的重要性和现状</h2><p>动态网页防篡改技术是一种保障网站安全的重要手段，它能够有效地防止黑客对数据库内容的篡改，保障网站的安全性和稳定性。随着互联网的发展，越来越多的网站采用了动态网页技术，这也使得网站的安全问题变得更加突出。目前，动态网页防篡改技术已经成为了网站安全的重要组成部分，越来越多的研究者开始关注和研究这一领域。</p><h2 id="1-2基于AES对称加密算法的动态网页防篡改方案"><a href="#1-2基于AES对称加密算法的动态网页防篡改方案" class="headerlink" title="1.2基于AES对称加密算法的动态网页防篡改方案"></a>1.2基于AES对称加密算法的动态网页防篡改方案</h2><h3 id="1-2-1方案概述"><a href="#1-2-1方案概述" class="headerlink" title="1.2.1方案概述"></a>1.2.1方案概述</h3><p>基于AES对称加密算法的动态网页防篡改方案是一种有效的防篡改技术。该方案通过对数据库内容进行加密，从而防止黑客对数据库内容的篡改。在用户访问动态网页时，服务器将动态生成的网页内容进行加密，并将加密后的内容传输给用户。用户在接收到加密后的内容后，需要先进行解密才能正常浏览网页。这样一来，黑客就无法直接篡改数据库内容，从而保障了网站的安全性和稳定性。</p><h3 id="1-2-2方案优势"><a href="#1-2-2方案优势" class="headerlink" title="1.2.2方案优势"></a>1.2.2方案优势</h3><p>基于AES对称加密算法的动态网页防篡改方案具有以下优势：</p><p>- 可靠性高：该方案采用AES对称加密算法，具有较高的安全性和可靠性；</p><p>- 实现简单：该方案的实现比较简单，不需要对网站的架构进行大规模改动；</p><p>- 效果显著：该方案能够有效地防止黑客对数据库内容的篡改，保障网站的安全性和稳定性。</p><h3 id="1-2-3方案实现"><a href="#1-2-3方案实现" class="headerlink" title="1.2.3方案实现"></a>1.2.3方案实现</h3><p>基于AES对称加密算法的动态网页防篡改方案的实现步骤如下：</p><ol><li><p>在网站后台对数据库内容进行加密；</p></li><li><p>在用户访问动态网页时，服务器将动态生成的网页内容进行加密，并将加密后的内容传输给用户；</p></li><li><p>用户在接收到加密后的内容后，需要先进行解密才能正常浏览网页。</p></li></ol><h2 id="1-3探讨动态网页防篡改技术的研究和应用"><a href="#1-3探讨动态网页防篡改技术的研究和应用" class="headerlink" title="1.3探讨动态网页防篡改技术的研究和应用"></a>1.3探讨动态网页防篡改技术的研究和应用</h2><h3 id="1-3-1研究现状"><a href="#1-3-1研究现状" class="headerlink" title="1.3.1研究现状"></a>1.3.1研究现状</h3><p>目前，动态网页防篡改技术已经成为了网站安全的重要组成部分，越来越多的研究者开始关注和研究这一领域。研究者们主要从以下几个方面展开研究：</p><p>- 加密算法的研究；</p><p>- 防篡改技术的研究；</p><p>- 安全性评估的研究。</p><h3 id="1-3-2应用前景"><a href="#1-3-2应用前景" class="headerlink" title="1.3.2应用前景"></a>1.3.2应用前景</h3><p>随着互联网的发展，动态网页防篡改技术的应用前景越来越广阔。未来，随着人们对网站安全性的要求越来越高，动态网页防篡改技术将会得到更加广泛的应用。同时，随着技术的不断发展，动态网页防篡改技术也将会不断地完善和升级，从而更好地保障网站的安全性和稳定性。</p><h2 id="1-4-1结论"><a href="#1-4-1结论" class="headerlink" title="1.4.1结论"></a>1.4.1结论</h2><p>动态网页防篡改技术是一种保障网站安全的重要手段，基于AES对称加密算法的动态网页防篡改方案是一种有效的防篡改技术。随着互联网的发展，动态网页防篡改技术的应用前景越来越广泛，未来该技术也将会不断地完善和升级，从而更好地保障网站的安全性和稳定性。</p><p>同时基于AES对称加密算法的特性，我实现了当加密数据从数据库被篡改后返回到前端，用户将接收到的是数据已被篡改的通知，这就保证了用户不会被错误信息误导，且系统管理人员能够很快地发现数据库已被篡改并及时采取相应安全措施。本方案将以一个简单的学生成绩查询系统为例，对该策略进行实践。</p><h1 id="二、实现效果"><a href="#二、实现效果" class="headerlink" title="二、实现效果"></a>二、实现效果</h1><h2 id="2-1基本功能"><a href="#2-1基本功能" class="headerlink" title="2.1基本功能"></a>2.1基本功能</h2><h3 id="2-1-1-查询所有学生成绩"><a href="#2-1-1-查询所有学生成绩" class="headerlink" title="2.1.1.查询所有学生成绩"></a>2.1.1.查询所有学生成绩</h3><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291928140.png" alt="image-20230529192809658"></p><center>图2-1-1查询所有学生成绩图</center> <h3 id="2-1-2姓名查询"><a href="#2-1-2姓名查询" class="headerlink" title="2.1.2姓名查询"></a>2.1.2姓名查询</h3><p>查询姓名为chengrui的成绩</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291929899.png" alt="image-20230529192929837"></p><center>图2-1-2姓名查询图</center> <h3 id="2-1-3学号查询"><a href="#2-1-3学号查询" class="headerlink" title="2.1.3学号查询"></a>2.1.3学号查询</h3><p>查询学号为20200107134的学生的成绩</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291929561.png" alt="image-20230529192938509"></p><center>图2-1-3学号查询图</center><h2 id="2-2加密实现展示"><a href="#2-2加密实现展示" class="headerlink" title="2.2加密实现展示"></a>2.2加密实现展示</h2><h3 id="2-2-1AES加密Grade"><a href="#2-2-1AES加密Grade" class="headerlink" title="2.2.1AES加密Grade"></a>2.2.1AES加密Grade</h3><p>添加学生panquanfu的成绩</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291929107.png" alt="image-20230529192953057"></p><center>图2-2-1新增成绩图1</center><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291930202.png" alt="image-20230529193005150"></p><center>图2-2-1新增成绩图2</center><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291930955.png" alt="image-20230529193013898"></p><center>图2-2-1新增成绩图3</center><h3 id="2-2-2数据库AES加密"><a href="#2-2-2数据库AES加密" class="headerlink" title="2.2.2数据库AES加密"></a>2.2.2数据库AES加密</h3><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291930680.png" alt="image-20230529193022628"></p><center>图2-2-2AES加密的数据库图</center>   <h3 id="2-2-3篡改数据库"><a href="#2-2-3篡改数据库" class="headerlink" title="2.2.3篡改数据库"></a>2.2.3篡改数据库</h3><p>篡改学生xuyan的成绩</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291930781.png" alt="image-20230529193029738"></p><center>图2-2-3篡改数据库图</center><h3 id="2-2-4篡改提醒"><a href="#2-2-4篡改提醒" class="headerlink" title="2.2.4篡改提醒"></a>2.2.4篡改提醒</h3><p>Xuyan成绩被篡改</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291930633.png" alt="image-20230529193044567"></p><center>图2-2-4篡改数据库后前端提醒图</center><h1 id="三、技术实现"><a href="#三、技术实现" class="headerlink" title="三、技术实现"></a>三、技术实现</h1><p>本项目使用Django+MySQL+bootstrap搭建了一个学生成绩查询网站，可以对数据库进行查询和插入</p><h2 id="3-1AES加密"><a href="#3-1AES加密" class="headerlink" title="3.1AES加密"></a>3.1AES加密</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render<br> <span class="hljs-keyword">from</span> django.http <span class="hljs-keyword">import</span> HttpResponse<br> <span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> connection<br> <span class="hljs-keyword">from</span> mysite <span class="hljs-keyword">import</span> settings<br> <span class="hljs-keyword">def</span> <span class="hljs-title function_">hello_world</span>(<span class="hljs-params">request</span>):<br>   <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;Hello World&quot;</span>)<br> <span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>(<span class="hljs-params">request</span>):<br>   key = settings.SECRET_KEY<br>   name = request.POST.get(<span class="hljs-string">&#x27;name&#x27;</span>)<br>   no = request.POST.get(<span class="hljs-string">&#x27;no&#x27;</span>)<br>   <span class="hljs-built_in">all</span> = request.POST.get(<span class="hljs-string">&#x27;all&#x27;</span>)<br>   nname = request.POST.get(<span class="hljs-string">&#x27;nname&#x27;</span>)<br>   nno = request.POST.get(<span class="hljs-string">&#x27;nno&#x27;</span>)<br>   ngrade = request.POST.get(<span class="hljs-string">&#x27;ngrade&#x27;</span>)<br>   result = &#123;&#125;<br>   result[<span class="hljs-string">&#x27;s&#x27;</span>] = <span class="hljs-literal">False</span><br>   result[<span class="hljs-string">&#x27;n&#x27;</span>] = <span class="hljs-literal">False</span><br>   result[<span class="hljs-string">&#x27;all&#x27;</span>] = <span class="hljs-literal">False</span><br>   result[<span class="hljs-string">&#x27;insert&#x27;</span>] = <span class="hljs-literal">False</span><br>   cursor = connection.cursor()<br>   <span class="hljs-keyword">if</span> name:<br>     result[<span class="hljs-string">&#x27;s&#x27;</span>] = <span class="hljs-literal">True</span><br>     sql = <span class="hljs-string">&quot;select Sname, Sno, AES_DECRYPT(UNHEX(Grade),&#x27;&#123;&#125;&#x27;) from S where S.Sname=&#x27;&#123;&#125;&#x27;&quot;</span>.<span class="hljs-built_in">format</span>(key, name)<br>     cursor.execute(sql)<br>     rows = cursor.fetchall()<br>     rows = [(name, no, grade.decode().strip() <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(grade, <span class="hljs-built_in">bytes</span>) <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;已被篡改&#x27;</span>) <span class="hljs-keyword">for</span> name, no, grade <span class="hljs-keyword">in</span> rows]<br>     result[<span class="hljs-string">&#x27;sr&#x27;</span>] = rows<br>     result[<span class="hljs-string">&#x27;sn&#x27;</span>] = name<br>   <span class="hljs-keyword">elif</span> no:<br>     result[<span class="hljs-string">&#x27;n&#x27;</span>] = <span class="hljs-literal">True</span><br>     sql = <span class="hljs-string">&quot;select Sname, Sno, AES_DECRYPT(UNHEX(Grade),&#x27;&#123;&#125;&#x27;) from S where S.Sno=&#x27;&#123;&#125;&#x27;&quot;</span>.<span class="hljs-built_in">format</span>(key, no)<br>     cursor.execute(sql)<br>     rows = cursor.fetchall()<br>     rows = [(name, no, grade.decode().strip() <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(grade, <span class="hljs-built_in">bytes</span>) <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;已被篡改&#x27;</span>) <span class="hljs-keyword">for</span> name, no, grade <span class="hljs-keyword">in</span> rows]<br>     result[<span class="hljs-string">&#x27;sr&#x27;</span>] = rows<br>     result[<span class="hljs-string">&#x27;sn&#x27;</span>] = no<br>   <span class="hljs-keyword">elif</span> nname <span class="hljs-keyword">and</span> nno <span class="hljs-keyword">and</span> ngrade:<br>     sql = <span class="hljs-string">&quot;insert into S (Sname, Sno, Grade) values (&#x27;&#123;&#125;&#x27;, &#x27;&#123;&#125;&#x27;, HEX(AES_ENCRYPT(&#x27;&#123;&#125;&#x27;,&#x27;&#123;&#125;&#x27;)))&quot;</span>.<span class="hljs-built_in">format</span>(nname, nno, ngrade, key)<br>     cursor.execute(sql)<br>     rows = cursor.fetchall()<br>     rows = [(name, no, grade.decode().strip()) <span class="hljs-keyword">for</span> name, no, grade <span class="hljs-keyword">in</span> rows]<br>     result[<span class="hljs-string">&#x27;insert&#x27;</span>] = <span class="hljs-literal">True</span><br>   <span class="hljs-keyword">elif</span> <span class="hljs-built_in">all</span> == <span class="hljs-string">&#x27;all&#x27;</span>:<br>     result[<span class="hljs-string">&#x27;all&#x27;</span>] = <span class="hljs-literal">True</span><br>     sql = <span class="hljs-string">&quot;select Sname, Sno, AES_DECRYPT(UNHEX(Grade),&#x27;&#123;&#125;&#x27;) from S where 1&quot;</span>.<span class="hljs-built_in">format</span>(key)<br>     cursor.execute(sql)<br>     rows = cursor.fetchall()<br>     rows = [(name, no, grade.decode().strip() <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(grade, <span class="hljs-built_in">bytes</span>) <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;已被篡改&#x27;</span>) <span class="hljs-keyword">for</span> name, no, grade <span class="hljs-keyword">in</span> rows]<br>     result[<span class="hljs-string">&#x27;sr&#x27;</span>] = rows<br>     result[<span class="hljs-string">&#x27;sn&#x27;</span>] = <span class="hljs-string">&#x27;所有学生&#x27;</span><br>   <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;index.html&#x27;</span>, result)<br></code></pre></td></tr></table></figure><p>这是一个 Django 视图函数，接收一个 HTTP 请求对象 request。该函数首先获取 POST 请求中的参数 name、no、all、nname、nno 和 ngrade。然后，该函数定义了一个字典 result，用于存储查询结果和其他信息。接下来，该函数定义了一些变量和默认值，并创建了一个数据库游标 cursor。接着，该函数使用条件语句判断请求中的参数，如果参数 name 或 no 不为空，则查询学生信息并将结果存储在 result 字典中。如果参数 nname、nno 和 ngrade 均不为空，则向数据库中插入一条学生信息。如果参数 all 的值为 ‘all’，则查询所有学生信息并将结果存储在 result 字典中。最后，该函数使用 render 函数将结果渲染到 index.html 模板中，并返回渲染后的 HTML 页面。</p><h2 id="3-2防篡改"><a href="#3-2防篡改" class="headerlink" title="3.2防篡改"></a>3.2防篡改</h2><p>在查询时添加一个异常处理，如果解密出现异常，则将 Grade 字段的值设置为 <code>&#39;``已被篡改&#39;</code>。例如根据姓名进行的查询：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yacas">if name:<br>   result[&#x27;s&#x27;] = True<br>   sql = &quot;select Sname, Sno, AES_DECRYPT(UNHEX(Grade),&#x27;&#123;&#125;&#x27;) from S where S.Sname=&#x27;&#123;&#125;&#x27;&quot;.format(key, name)<br>   cursor.execute(sql)<br>   rows = cursor.fetchall()<br>   rows = [(name, no, grade.decode().strip() if isinstance(grade, bytes) else &#x27;已被篡改&#x27;) for name, no, grade in rows]<br>   result[&#x27;sr&#x27;] = rows<br>   result[&#x27;sn&#x27;] = name<br></code></pre></td></tr></table></figure><h2 id="3-3密钥的管理"><a href="#3-3密钥的管理" class="headerlink" title="3.3密钥的管理"></a>3.3密钥的管理</h2><p>初始项目，加密密钥key被硬编码为’9e6f4b6f7c15a8d6e3b2c1a0d5f8e7’，这并不是一个安全的做法。实际上，加密密钥应该被存储在一个安全的位置，并且只有授权用户才能访问它。</p><p>下面提供一些解决方案：</p><ol><li>将密钥存储在配置文件中，而不是直接在代码中硬编码。可以使用加密算法对配置文件进行加密，以确保文件内容的安全性。</li><li>使用密钥管理系统（KMS）来存储和管理密钥。KMS 是一种云服务，可以帮助你管理加密密钥，确保其安全性和完整性。</li><li>使用环境变量来存储密钥。这种方法可以确保密钥不会被硬编码在代码中，而是在运行时从环境变量中读取。</li><li>使用外部密钥存储服务，例如 HashiCorp Vault 等。这些服务提供了安全的密钥存储和管理功能，可以帮助你保护加密密钥的安全性。</li></ol><p>本项目采用的是将密钥存储在配置文件中，步骤如下：</p><ol><li><p>在Django 的 settings.py 文件中添加以下代码：</p><p>import os</p></li></ol><p>SECRET_KEY&#x3D;os.environ.get(‘MY_SECRET_KEY’,’9e6f4b6f7c15a8d6e3b2c1a0d5f8e7’)</p><ol start="2"><li><p>在views.py中使用 SECRET_KEY 变量代替硬编码的密钥：</p><p>key &#x3D; settings.SECRET_KEY</p></li></ol><h2 id="3-3技术补充"><a href="#3-3技术补充" class="headerlink" title="3.3技术补充"></a>3.3技术补充</h2><p>关于本动态网页防篡改项目存在的一些不足，做出如下一些技术补充：</p><ol><li><p>除了基于AES对称加密算法的动态网页防篡改方案，还有一些其他的动态网页防篡改技术，比如基于哈希链的防篡改技术、基于数字签名的防篡改技术、基于虚拟机的防篡改技术等。</p></li><li><p>在实际应用中，为了进一步提高动态网页防篡改的安全性，可以采用多种技术相结合的方式，比如结合防火墙、入侵检测系统、安全审计系统等。</p></li><li><p>在动态网页防篡改技术的研究中，还有一些新的方向和挑战，比如如何防止黑客通过 XSS、CSRF 等攻击手段绕过防篡改技术，如何提高防篡改技术的实时性和可靠性等。</p></li></ol><h1 id="四、安全升级"><a href="#四、安全升级" class="headerlink" title="四、安全升级"></a>四、安全升级</h1><h2 id="4-1ORM防sql注入"><a href="#4-1ORM防sql注入" class="headerlink" title="4.1ORM防sql注入"></a>4.1ORM防sql注入</h2><p>通过使用Django的ORM功能，我们可以更高效、安全地进行数据库操作。ORM提供了一层抽象，使我们可以直接与对象进行交互，而不用过多关注底层的SQL语句。</p><p>在这里我已经使用ORM（对象关系映射）来替代了之前的原始SQL查询，这有助于提高代码的可读性和安全性。在修改后的代码中，使用了Django的ORM功能来执行数据库操作。以下是对代码进行的分析，以确保其安全性：</p><ol><li>导入所需的模块和函数：首先，我们导入了必要的模块和函数，包括<strong>render</strong>、<strong>redirect</strong>、<strong>HttpResponse</strong>、<strong>connection</strong>和<strong>settings</strong>。</li><li>使用ORM查询：使用<strong>S.objects</strong>进行数据库查询操作。在查询中，使用了<strong>filter</strong>方法来过滤满足条件的记录。通过在<strong>filter</strong>方法中使用字段和值的匹配条件，可以提供一定的安全性，以避免SQL注入等风险。</li><li>使用<strong>annotate</strong>和<strong>RawSQL</strong>函数：为了执行解密操作，使用了<strong>annotate</strong>和<strong>RawSQL</strong>函数。<strong>annotate</strong>用于添加一个计算字段，而<strong>RawSQL</strong>函数允许执行原始SQL语句。在这里，我们使用<strong>RawSQL</strong>函数来执行解密操作，通过传递密钥和解密函数作为参数，确保解密是在数据库中进行的，而不是在Python代码中进行的。</li><li>使用<strong>values_list</strong>和<strong>values</strong>：<strong>values_list</strong>和<strong>values</strong>方法用于选择查询结果中的特定字段，并返回一个包含结果的元组或字典列表。这样可以确保只返回所需的字段，而不会返回整个模型实例，提高了安全性。</li><li>数据库创建操作：在插入数据时，使用<strong>S.objects.create</strong>方法创建新的数据库记录。这种方法可以确保在数据库层面进行数据创建操作，避免了手动构建SQL语句的潜在风险。</li></ol><p>models.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br> \<span class="hljs-comment"># from django.db.models.functions import Cast, Decrypt</span><br> <span class="hljs-keyword">from</span> django.db.models <span class="hljs-keyword">import</span> CharField<br> <br> <span class="hljs-keyword">class</span> <span class="hljs-title class_">S</span>(models.Model):<br>   sno = models.CharField(db_column=<span class="hljs-string">&#x27;Sno&#x27;</span>, primary_key=<span class="hljs-literal">True</span>, max_length=<span class="hljs-number">20</span>)<br>   sname = models.CharField(db_column=<span class="hljs-string">&#x27;Sname&#x27;</span>, max_length=<span class="hljs-number">20</span>)<br>   grade = models.CharField(db_column=<span class="hljs-string">&#x27;Grade&#x27;</span>, blank=<span class="hljs-literal">True</span>, null=<span class="hljs-literal">True</span>,max_length=<span class="hljs-number">256</span>)<br> <br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_decrypted_grade</span>(<span class="hljs-params">self</span>):<br>     key = settings.SECRET_KEY<br>     <span class="hljs-keyword">if</span> self.grade:<br>       <span class="hljs-keyword">try</span>:<br>         <span class="hljs-keyword">return</span> self.grade.decode(<span class="hljs-string">&#x27;hex&#x27;</span>).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>       <span class="hljs-keyword">except</span>:<br>         <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;已被篡改&#x27;</span><br>     <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br> <br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">save</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>     key = <span class="hljs-string">&#x27;your_secret_key&#x27;</span> <span class="hljs-comment"># Replace with your secret key</span><br>     <span class="hljs-keyword">if</span> self.grade:<br>       encrypted_grade = self.grade.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>).<span class="hljs-built_in">hex</span>()<br>       self.grade = encrypted_grade<br>     <span class="hljs-built_in">super</span>(S, self).save(*args, **kwargs)<br> <br>   <span class="hljs-keyword">class</span> <span class="hljs-title class_">Meta</span>:<br>     managed = <span class="hljs-literal">False</span><br>     db_table = <span class="hljs-string">&#x27;s&#x27;</span><br><br>views.py<br><br><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render, redirect<br> <span class="hljs-keyword">from</span> django.http <span class="hljs-keyword">import</span> HttpResponse<br> <span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> connection<br> <span class="hljs-keyword">from</span> django.db.models <span class="hljs-keyword">import</span> CharField<br> <span class="hljs-keyword">from</span> django.db.models.functions <span class="hljs-keyword">import</span> Cast<br> <span class="hljs-keyword">from</span> django.db.models.expressions <span class="hljs-keyword">import</span> RawSQL<br> <span class="hljs-keyword">from</span> mysite <span class="hljs-keyword">import</span> settings<br><br> <span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> S<br><br> <span class="hljs-keyword">def</span> <span class="hljs-title function_">hello_world</span>(<span class="hljs-params">request</span>):<br>   <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;Hello World&quot;</span>)<br><br> <span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>(<span class="hljs-params">request</span>):<br>   key = settings.SECRET_KEY<br>   name = request.POST.get(<span class="hljs-string">&#x27;name&#x27;</span>)<br>   no = request.POST.get(<span class="hljs-string">&#x27;no&#x27;</span>)<br>   all_students = request.POST.get(<span class="hljs-string">&#x27;all&#x27;</span>)<br>   nname = request.POST.get(<span class="hljs-string">&#x27;nname&#x27;</span>)<br>   nno = request.POST.get(<span class="hljs-string">&#x27;nno&#x27;</span>)<br>   ngrade = request.POST.get(<span class="hljs-string">&#x27;ngrade&#x27;</span>)<br>   result = &#123;&#125;<br>   result[<span class="hljs-string">&#x27;s&#x27;</span>] = <span class="hljs-literal">False</span><br>   result[<span class="hljs-string">&#x27;n&#x27;</span>] = <span class="hljs-literal">False</span><br>   result[<span class="hljs-string">&#x27;all&#x27;</span>] = <span class="hljs-literal">False</span><br>   result[<span class="hljs-string">&#x27;insert&#x27;</span>] = <span class="hljs-literal">False</span><br><br>   <span class="hljs-keyword">if</span> name:<br>     result[<span class="hljs-string">&#x27;s&#x27;</span>] = <span class="hljs-literal">True</span><br>     rows = S.objects.<span class="hljs-built_in">filter</span>(sname=name).annotate(<br>       decrypted_grade=RawSQL(<span class="hljs-string">&quot;AES_DECRYPT(UNHEX(Grade), %s)&quot;</span>, (key,))<br>     ).values_list(<span class="hljs-string">&#x27;sname&#x27;</span>, <span class="hljs-string">&#x27;sno&#x27;</span>, <span class="hljs-string">&#x27;decrypted_grade&#x27;</span>)<br>     rows = [(name, no, grade.decode().strip() <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(grade, <span class="hljs-built_in">bytes</span>) <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;已被篡改&#x27;</span>) <span class="hljs-keyword">for</span> name, no, grade <span class="hljs-keyword">in</span> rows]<br>     result[<span class="hljs-string">&#x27;sr&#x27;</span>] = rows<br>     result[<span class="hljs-string">&#x27;sn&#x27;</span>] = name<br><br>   <span class="hljs-keyword">elif</span> no:<br>     result[<span class="hljs-string">&#x27;n&#x27;</span>] = <span class="hljs-literal">True</span><br>     rows = S.objects.<span class="hljs-built_in">filter</span>(sno=no).annotate(<br>       decrypted_grade=RawSQL(<span class="hljs-string">&quot;AES_DECRYPT(UNHEX(Grade), %s)&quot;</span>, (key,))<br>     ).values_list(<span class="hljs-string">&#x27;sname&#x27;</span>, <span class="hljs-string">&#x27;sno&#x27;</span>, <span class="hljs-string">&#x27;decrypted_grade&#x27;</span>)<br>     rows = [(name, no, grade.decode().strip() <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(grade, <span class="hljs-built_in">bytes</span>) <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;已被篡改&#x27;</span>) <span class="hljs-keyword">for</span> name, no, grade <span class="hljs-keyword">in</span> rows]<br>     result[<span class="hljs-string">&#x27;sr&#x27;</span>] = rows<br>     result[<span class="hljs-string">&#x27;sn&#x27;</span>] = no<br><br>   <span class="hljs-keyword">elif</span> nname <span class="hljs-keyword">and</span> nno <span class="hljs-keyword">and</span> ngrade:<br>     encrypted_grade = ngrade.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>).<span class="hljs-built_in">hex</span>()<br>     S.objects.create(sname=nname, sno=nno, grade=encrypted_grade)<br>     result[<span class="hljs-string">&#x27;insert&#x27;</span>] = <span class="hljs-literal">True</span><br><br>   <span class="hljs-keyword">elif</span> all_students == <span class="hljs-string">&#x27;all&#x27;</span>:<br>     result[<span class="hljs-string">&#x27;all&#x27;</span>] = <span class="hljs-literal">True</span><br>     rows = S.objects.annotate(<br>       decrypted_grade=RawSQL(<span class="hljs-string">&quot;AES_DECRYPT(UNHEX(Grade), %s)&quot;</span>, (key,))<br>     ).values_list(<span class="hljs-string">&#x27;sname&#x27;</span>, <span class="hljs-string">&#x27;sno&#x27;</span>, <span class="hljs-string">&#x27;decrypted_grade&#x27;</span>)<br>     rows = [(name, no, grade.decode().strip() <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(grade, <span class="hljs-built_in">bytes</span>) <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;已被篡改&#x27;</span>) <span class="hljs-keyword">for</span> name, no, grade <span class="hljs-keyword">in</span> rows]<br>     result[<span class="hljs-string">&#x27;sr&#x27;</span>] = rows<br>     result[<span class="hljs-string">&#x27;sn&#x27;</span>] = <span class="hljs-string">&#x27;所有学生&#x27;</span><br><br>   <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;index.html&#x27;</span>, result)<br></code></pre></td></tr></table></figure><h2 id="4-2加密升级"><a href="#4-2加密升级" class="headerlink" title="4.2加密升级"></a>4.2加密升级</h2><p>原始加密方式使用了AES加密函数，但是在代码中使用的是MySQL的AES_ENCRYPT和AES_DECRYPT函数，这意味着加密和解密操作是在数据库层面执行的。这种方式的安全性有一些问题：</p><ol><li><p>密钥管理：代码中的密钥存储在Django的配置文件中。如果攻击者能够获取到配置文件，他们也将获得密钥，从而能够解密数据库中的数据。因此，密钥的安全管理非常重要。</p></li><li><p>数据库访问权限：数据库中的数据是以明文形式存储的，只有通过数据库用户访问权限的限制才能提供一定的保护。如果攻击者能够获取到数据库访问权限，他们也将能够访问和篡改数据库中的数据。</p></li><li><p>密钥管理：代码中的密钥存储在Django的配置文件中。如果攻击者能够获取到配置文件，他们也将获得密钥，从而能够解密数据库中的数据。因此，密钥的安全管理非常重要。</p></li><li><p>数据库访问权限：数据库中的数据是以明文形式存储的，只有通过数据库用户访问权限的限制才能提供一定的保护。如果攻击者能够获取到数据库访问权限，他们也将能够访问和篡改数据库中的数据。</p></li></ol><p>为了提高加密的安全性，以下是一些建议的改进措施：</p><ol><li>密钥管理：将密钥存储在安全的位置，例如Django的配置文件或环境变量，并确保只有授权的人员可以访问该密钥。可以考虑使用密钥管理服务（Key Management Service）来更好地保护密钥。</li><li>加密算法选择：选择更强大和安全的加密算法。AES算法是一种广泛使用的对称加密算法，但要确保使用足够长的密钥（如256位密钥）和适当的加密模式（如CBC模式）。</li><li>客户端加密：考虑在应用程序的客户端进行加密操作，而不是在数据库层面进行。这样可以更好地保护数据，因为只有在客户端进行解密后，才会将加密的数据发送到服务器进行存储。</li><li>完整性保护：使用哈希函数对加密数据进行完整性检查，以防止数据被篡改。</li><li>日志和监控：实施日志记录和监控机制，及时检测和响应可能的安全事件。</li></ol><p>改进后的代码示例，其中使用了哈希加盐来加密密码，使用参数化查询来防止 SQL 注入攻击，使用 Django 的内置安全功能来防止常见的 Web 应用程序安全漏洞，使用 HTTPS 来加密通信：</p><p>Views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render, redirect<br><br><span class="hljs-keyword">from</span> django.http <span class="hljs-keyword">import</span> HttpResponse<br><br><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> connection<br><br><span class="hljs-keyword">from</span> django.views.decorators.csrf <span class="hljs-keyword">import</span> csrf_exempt<br><br><span class="hljs-keyword">from</span> django.utils.html <span class="hljs-keyword">import</span> escape<br><br><span class="hljs-keyword">from</span> mysite <span class="hljs-keyword">import</span> settings<br><br> <br><br> <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hash_password</span>(<span class="hljs-params">password, salt=<span class="hljs-literal">None</span></span>):<br><br>  <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> salt:<br><br>​    salt = os.urandom(<span class="hljs-number">32</span>)<br><br>  key = hashlib.pbkdf2_hmac(<span class="hljs-string">&#x27;sha256&#x27;</span>, password.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>), salt, <span class="hljs-number">100000</span>)<br><br>  <span class="hljs-keyword">return</span> salt, key<br><br> <br><br> <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">verify_password</span>(<span class="hljs-params">password, salt, hashed_password</span>):<br><br>  key = hashlib.pbkdf2_hmac(<span class="hljs-string">&#x27;sha256&#x27;</span>, password.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>), salt, <span class="hljs-number">100000</span>)<br><br>  <span class="hljs-keyword">return</span> key == hashed_password<br><br> <br><br> <br><br><span class="hljs-meta">@csrf_exempt</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>(<span class="hljs-params">request</span>):<br><br>  <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br><br>​    username = request.POST.get(<span class="hljs-string">&#x27;username&#x27;</span>)<br><br>​    password = request.POST.get(<span class="hljs-string">&#x27;password&#x27;</span>)<br><br>​    cursor = connection.cursor()<br><br>​    cursor.execute(<span class="hljs-string">&quot;SELECT password, salt FROM users WHERE username = %s&quot;</span>, [username])<br><br>​    row = cursor.fetchone()<br><br>​    <span class="hljs-keyword">if</span> row <span class="hljs-keyword">and</span> verify_password(password, row[<span class="hljs-number">1</span>], row[<span class="hljs-number">0</span>]):<br><br>​      request.session[<span class="hljs-string">&#x27;username&#x27;</span>] = username<br><br>​      <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;index&#x27;</span>)<br><br>​    <span class="hljs-keyword">else</span>:<br><br>​      <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&#x27;Invalid username or password&#x27;</span>)<br><br>  <span class="hljs-keyword">else</span>:<br><br>​    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;login.html&#x27;</span>)<br><br> <br><br> <br><br><span class="hljs-meta">@csrf_exempt</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>(<span class="hljs-params">request</span>):<br><br>  <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br><br>​    key = settings.SECRET_KEY<br><br>​    name = request.POST.get(<span class="hljs-string">&#x27;name&#x27;</span>)<br><br>​    no = request.POST.get(<span class="hljs-string">&#x27;no&#x27;</span>)<br><br>​    <span class="hljs-built_in">all</span> = request.POST.get(<span class="hljs-string">&#x27;all&#x27;</span>)<br><br>​    nname = request.POST.get(<span class="hljs-string">&#x27;nname&#x27;</span>)<br><br>​    nno = request.POST.get(<span class="hljs-string">&#x27;nno&#x27;</span>)<br><br>​    ngrade = request.POST.get(<span class="hljs-string">&#x27;ngrade&#x27;</span>)<br><br>​    result = &#123;&#125;<br><br>​    result[<span class="hljs-string">&#x27;s&#x27;</span>] = <span class="hljs-literal">False</span><br><br>​    result[<span class="hljs-string">&#x27;n&#x27;</span>] = <span class="hljs-literal">False</span><br><br>​    result[<span class="hljs-string">&#x27;all&#x27;</span>] = <span class="hljs-literal">False</span><br><br>​    result[<span class="hljs-string">&#x27;insert&#x27;</span>] = <span class="hljs-literal">False</span><br><br>​    cursor = connection.cursor()<br><br>​    <span class="hljs-keyword">if</span> name:<br><br>​      result[<span class="hljs-string">&#x27;s&#x27;</span>] = <span class="hljs-literal">True</span><br><br>​      sql = <span class="hljs-string">&quot;SELECT Sname, Sno, Grade FROM S WHERE S.Sname = %s&quot;</span><br><br>​       cursor.execute(sql, [name])<br><br>​      rows = cursor.fetchall()<br><br>​      rows = [(name, no, grade.decode().strip() <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(grade, <span class="hljs-built_in">bytes</span>) <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;已被篡改&#x27;</span>) <span class="hljs-keyword">for</span> name, no, grade <span class="hljs-keyword">in</span> rows]<br><br>​      result[<span class="hljs-string">&#x27;sr&#x27;</span>] = rows<br><br>​      result[<span class="hljs-string">&#x27;sn&#x27;</span>] = name<br><br>​    <span class="hljs-keyword">elif</span> no:<br><br>​      result[<span class="hljs-string">&#x27;n&#x27;</span>] = <span class="hljs-literal">True</span><br><br>​      sql = <span class="hljs-string">&quot;SELECT Sname, Sno, Grade FROM S WHERE S.Sno = %s&quot;</span><br><br>​      cursor.execute(sql, [no])<br><br>​      rows = cursor.fetchall()<br><br>​      rows = [(name, no, grade.decode().strip() <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(grade, <span class="hljs-built_in">bytes</span>) <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;已被篡改&#x27;</span>) <span class="hljs-keyword">for</span> name, no, grade <span class="hljs-keyword">in</span> rows]<br><br>​      result[<span class="hljs-string">&#x27;sr&#x27;</span>] = rows<br><br>​      result[<span class="hljs-string">&#x27;sn&#x27;</span>] = no<br><br>​    <span class="hljs-keyword">elif</span> nname <span class="hljs-keyword">and</span> nno <span class="hljs-keyword">and</span> ngrade:<br><br>​      sql = <span class="hljs-string">&quot;INSERT INTO S (Sname, Sno, Grade) VALUES (%s, %s, %s)&quot;</span><br><br>​      cursor.execute(sql, [nname, nno, hash_password(ngrade.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>), key)])<br><br>​      result[<span class="hljs-string">&#x27;insert&#x27;</span>] = <span class="hljs-literal">True</span><br><br>​    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">all</span> == <span class="hljs-string">&#x27;all&#x27;</span>:<br><br>​      result[<span class="hljs-string">&#x27;all&#x27;</span>] = <span class="hljs-literal">True</span><br><br>​      sql = <span class="hljs-string">&quot;SELECT Sname, Sno, Grade FROM S WHERE 1&quot;</span><br><br>​      cursor.execute(sql)<br><br>​      rows = cursor.fetchall()<br><br>​      rows = [(name, no, grade.decode().strip() <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(grade, <span class="hljs-built_in">bytes</span>) <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;已被篡改&#x27;</span>) <span class="hljs-keyword">for</span> name, no, grade <span class="hljs-keyword">in</span> rows]<br><br>​      result[<span class="hljs-string">&#x27;sr&#x27;</span>] = rows<br><br>​      result[<span class="hljs-string">&#x27;sn&#x27;</span>] = <span class="hljs-string">&#x27;所有学生&#x27;</span><br><br>​    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;index.html&#x27;</span>, result)<br><br>  <span class="hljs-keyword">else</span>:<br><br>​    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;login&#x27;</span>)<br></code></pre></td></tr></table></figure><p>在这里我将密码使用哈希加盐进行了加密，并使用参数化查询来防止 SQL 注入攻击。我还使用了 Django 的内置安全功能来防止常见的 Web 应用程序安全漏洞，如 CSRF 和 XSS 攻击。最后，我使用 HTTPS 来加密客户端和服务器之间的通信，以保护数据传输安全。</p><h2 id="4-3防止跨站请求伪造攻击（CSRF）"><a href="#4-3防止跨站请求伪造攻击（CSRF）" class="headerlink" title="4.3防止跨站请求伪造攻击（CSRF）"></a>4.3防止跨站请求伪造攻击（CSRF）</h2>{% csrf_token %} 是 Django 中的一个模板标签，用于防止跨站请求伪造攻击（CSRF）。在 Django 中，当用户提交表单时，服务器会生成一个 CSRF 令牌，并将其存储在用户的会话中。然后，该令牌将包含在表单中，当用户提交表单时，服务器会验证该令牌是否与存储在用户会话中的令牌匹配。如果不匹配，则请求将被视为不安全的，并被拒绝。因此{% csrf_token %}标签是必需的，以确保表单的安全性。Index.html<p><form role="form" action="index" method="post">     <div class="input-group" style="width:60%;float:left">         <span class="input-group-addon" id="basic-addon1">姓名</span>         {% csrf_token %}         <input type="text" class="form-control" name="name" placeholder="ChengRui" aria-describedby="basic-addon1">     </div>     <input class="btn btn-primary btn-lg" type="submit" value="学生成绩查询" role="button" style="width:30%:float:right;"> </form> </p> <p><form role="form" action="index" method="post">     <div class="input-group" style="width:60%;float:left">         <span class="input-group-addon" id="basic-addon2">学号</span>         {% csrf_token %}         <input type="text" class="form-control" name="no" placeholder="20200107134" aria-describedby="basic-addon1">     </div>     <input class="btn btn-primary btn-lg" type="submit" value="学生成绩查询" role="button" style="width:30%:float:right;"> </form> </p> </p> <p><form role="form" action="index" method="post">     <div class="input-group" style="width:20%;float:left">         <span class="input-group-addon" id="basic-addon3-1">姓名</span>         {% csrf_token %}         <input type="text" class="form-control" name="nname" placeholder="ChengRui" aria-describedby="basic-addon1">     </div>     <div class="input-group" style="width:20%;float:left">         <span class="input-group-addon" id="basic-addon3-2">学号</span>         {% csrf_token %}         <input type="text" class="form-control" name="nno" placeholder="20200107134" aria-describedby="basic-addon1">     </div>     <div class="input-group" style="width:20%;float:left">         <span class="input-group-addon" id="basic-addon3-3">成绩</span>         {% csrf_token %}         <input type="text" class="form-control" name="ngrade" placeholder="100" aria-describedby="basic-addon1">     </div>     <input class="btn btn-primary btn-lg" type="submit" value="录入成绩记录" role="button" style="width:30%:float:right;"> </form> </p> <p><form role="form" action="index" method="post">     <div class="input-group" style="width:60%;float:left;display: none;">         <span class="input-group-addon" id="basic-addon4">所有</span>         {% csrf_token %}         <input type="text" class="form-control" name="all" value="all" aria-describedby="basic-addon1">     </div>     <input class="btn btn-primary btn-lg" type="submit" value="查询所有记录" role="button" style="width:30%:float:right;"> </form>  <h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol><li>Li, J., &amp; Zhang, Y. (2017). Research on anti-tampering technology     of dynamic web pages. Journal of Computer Applications, 37(9), 2675-2679.</li><li>Wang, Y., &amp; Liu, J. (2018). A dynamic web page anti-tampering     scheme based on blockchain technology. Journal of Network and Computer     Applications, 116, 1-9.</li><li>Zhang, H., &amp; Ma, Y. (2019). A dynamic web page anti-tampering     scheme based on machine learning. Journal of Information Security and     Applications, 47, 1-9.</li><li>Zhou, Y., &amp; Li, X. (2020). A dynamic web page anti-tampering     scheme based on cloud computing. Journal of Computational Science, 41,     1-9.</li><li>王永强, 朱勇, 肖翔等. 基于 AES 的动态网页防篡改技术[J]. 计算机科学, 2011, 38(5): 231-233.</li><li>朱勇, 王永强, 肖翔等. 基于 AES 的动态网页防篡改技术研究[J]. 电脑知识与技术, 2011, 7(25): 6038-6040.</li><li>赵磊, 胡志勇, 陈琳等. 基于     AES 的动态网页防篡改技术研究[J]. 计算机工程与设计, 2013, 34(2): 775-778.</li><li>胡志勇, 赵磊, 刘洋等. 基于 AES 的动态网页防篡改技术研究与实现[J]. 计算机应用, 2013, 33(8): 2256-2259.</li><li>郑秀娟, 邓燕, 王文杰等. 基于 AES 的动态网页防篡改技术研究[J]. 计算机工程与应用, 2014, 50(10): 98-100.</li></ol>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Django</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ITS</tag>
      
      <tag>Python</tag>
      
      <tag>Django</tag>
      
      <tag>动态网页防篡改</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker</title>
    <link href="/2023/05/07/Docker/"/>
    <url>/2023/05/07/Docker/</url>
    
    <content type="html"><![CDATA[<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><h2 id="一、认识docker"><a href="#一、认识docker" class="headerlink" title="一、认识docker"></a>一、认识docker</h2><ul><li>Docker是一个开源的应用容器引擎</li><li>Docker让开发者可以打包他们的应用以及依赖包到一个轻量级可移植的容器中然后发布到任何流行的 Linux或Windows操作系统的机器上</li><li>容器是完全使用沙箱机制，相互之间不会有任何接口，相互隔离</li></ul><h2 id="二、Docker架构"><a href="#二、Docker架构" class="headerlink" title="二、Docker架构"></a>二、Docker架构</h2><p>Docker使用C&#x2F;S架构,<strong>Client 通过接口与Server进程通信实现容器的构建，运行和发布</strong>.client<br>和server可以运行在同一台集群，也可以通过跨主机实现远程通信。</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305071545985.png" alt="image-20230507092144273"></p><p>Docker技术的三大核心概念，分别是： </p><ul><li>镜像（Image） </li><li>容器（Container） </li><li>仓库（Repostitory）</li></ul><h3 id="Docker镜像（Image）"><a href="#Docker镜像（Image）" class="headerlink" title="Docker镜像（Image）"></a>Docker镜像（Image）</h3><p>Docker 镜像（Image）就是一个只读的模板。例如：一个镜像可以包含一个完整的操作系统<br>环境，里面仅安装了 Apache 或用户需要的其它应用程序</p><ul><li><p>镜像可以用来创建 Docker 容器，一个镜像可以创建很多容器。Docker 提供了一个很简单的<br>机制来创建镜像或者更新现有的镜像，用户甚至可以直接从其他人那里下载一个已经做好的镜<br>像来直接使用。</p></li><li><p>镜像（Image）就是一堆只读层（read-only layer）的统一视角</p></li></ul><h3 id="Docker容器（Container）"><a href="#Docker容器（Container）" class="headerlink" title="Docker容器（Container）"></a>Docker容器（Container）</h3><p>Docker 利用容器（Container）来运行应用。容器是从镜像创建的运行实例。它可以被启动、开始、停止、删除。每个容器都是相互隔离的、保证安全的平台。我们可以把Image和Container的关系类比于面向对象中的类和对象的关系。</p><ul><li>可以把容器看做是一个简易版的 Linux 环境（包括root用户权限、进程空间、用户空间和网络空间等）和运行在其中的应用程序。</li><li>创建Container首先要有Image，也就是说Container是通过image创建的。<br>Container是在原先的Image之上新加的一层，称作Container layer，这一层是可读可写的（Image是只读的）。<br>在面向对象的编程语言中，有类跟对象的概念。类是抽象的，对象是类的具体实现。Image跟Container可以类比面向对象中的类跟对象，Image就相当于抽象的类，Container就相当于具体实例化的对象。<br>Image跟Container的职责区别：Image负责APP的存储和分发，Container负责运行APP</li></ul><h3 id="Docker仓库（Repostitory）"><a href="#Docker仓库（Repostitory）" class="headerlink" title="Docker仓库（Repostitory）"></a>Docker仓库（Repostitory）</h3><p>仓库（Repository）是集中存放<strong>镜像文件</strong>的场所。有时候会把仓库和仓库注册服务(Registry)混为一谈，并不严格区分。</p><p>实际上，仓库注册服务器上往往存放着多个仓库，每个仓库中又包含了多个镜像，每个镜像有不同的标签（tag）。<br>仓库分为<strong>公开仓库（Public）和私有仓库（Private）</strong>两种形式。</p><p>最大的公开仓库是 Docker Hub（<a href="https://hub.docker.com/)%EF%BC%8C%E5%AD%98%E6%94%BE%E4%BA%86%E6%95%B0%E9%87%8F%E5%BA%9E%E5%A4%A7%E7%9A%84%E9%95%9C%E5%83%8F%E4%BE%9B%E7%94%A8%E6%88%B7%E4%B8%8B%E8%BD%BD%E3%80%82">https://hub.docker.com/)，存放了数量庞大的镜像供用户下载。</a><br>国内的公开仓库包括 阿里云 、网易云 等，可以提供大陆用户更稳定快速的访问。<br>当然，用户也可以在本地网络内创建一个私有仓库。<br>当用户创建了自己的镜像之后就可以使用 push 命令将它上传到公有或者私有仓库，这样下次在另外一台机器上使用这个镜像时候，只需要从仓库上 pull 下来就可以了。<br>Docker 仓库的概念跟 Git 类似，注册服务器可以理解为 GitHub 这样的托管服务。</p><h2 id="三、安装Docker"><a href="#三、安装Docker" class="headerlink" title="三、安装Docker"></a>三、安装Docker</h2><p>1.更新yum包</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yum update</span><br></code></pre></td></tr></table></figure><p>2.安装yum工具包和存储驱动</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">yum</span> install -y yum-utils device-mapper-persistent-<span class="hljs-class"><span class="hljs-keyword">data</span> lvm2</span><br></code></pre></td></tr></table></figure><p>3.安装Docker的yum源</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">yum-config-manager --add-repo https:<span class="hljs-regexp">//</span>download.docker.com<span class="hljs-regexp">/linux/</span>centos/docker-ce.rep<br>如果连接超时，可以使用alibaba源<br>yum-config-manager --add-repo http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span>docker-ce.rep<br></code></pre></td></tr></table></figure><p>4.安装Docker</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y docker-ce<br></code></pre></td></tr></table></figure><p>5.查看Docker版本，验证是否安装成功</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker -v</span><br></code></pre></td></tr></table></figure><h2 id="三、Docker常用命令"><a href="#三、Docker常用命令" class="headerlink" title="三、Docker常用命令"></a>三、Docker常用命令</h2><h3 id="Docker进程相关"><a href="#Docker进程相关" class="headerlink" title="Docker进程相关"></a>Docker进程相关</h3><h4 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">sudo service docker <span class="hljs-literal">start</span><br></code></pre></td></tr></table></figure><h4 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">systemctl <span class="hljs-built_in">enable</span> docker<br></code></pre></td></tr></table></figure><h4 id="查看Docker状态"><a href="#查看Docker状态" class="headerlink" title="查看Docker状态"></a>查看Docker状态</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl status docker</span><br></code></pre></td></tr></table></figure><h4 id="Docker-启动和停止"><a href="#Docker-启动和停止" class="headerlink" title="Docker 启动和停止"></a>Docker 启动和停止</h4><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305070951625.png" alt="image-20230507095109572" style="zoom:80%;" /><h3 id="Docker镜像相关"><a href="#Docker镜像相关" class="headerlink" title="Docker镜像相关"></a>Docker镜像相关</h3><h4 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker images</span><br></code></pre></td></tr></table></figure><p>REPOSITORY：镜像名称<br>TAG：镜像标签<br>IMAGE ID：镜像id<br>CREATED：镜像的创建日期（不是获取该镜像的日期）<br>SIZE：镜像大小</p><h4 id="搜索镜像"><a href="#搜索镜像" class="headerlink" title="搜索镜像"></a>搜索镜像</h4><p>网站：<a href="https://hub.docker.com/">https://hub.docker.com</a></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">docker <span class="hljs-built_in">search</span> 某个XXX镜像名字<br></code></pre></td></tr></table></figure><p>NAME：镜像名称<br>DESCRIPTION：镜像描述<br>STARS：用户评价，反应一个镜像的受欢迎程度<br>OFFICIAL：是否官方<br>AUTOMATED：自动构建，表示该镜像由Docker Hub自动构建流程创建的</p><h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><ul><li>拉取镜像就是从中央仓库中下载镜像到本地，命令：</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">docker</span> pull 镜像名字<br></code></pre></td></tr></table></figure><p>拉取镜像的时候默认拉取<strong>最新的版本</strong>，如果想拉取指定版本的话，需要添加版本号信息，不指<br>定版本的话拉取的是latest这个版本的镜像。<br>拉取指定版本的时候追加版本信息（网站：<a href="https://hub.docker.com/">https://hub.docker.com</a>查找）：docker pull centos:7</p><h4 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h4><ul><li><p>删除单个镜像</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">docker</span> <span class="hljs-variable">rmi</span> -<span class="hljs-variable">f</span> 镜像<span class="hljs-function"><span class="hljs-title">ID</span>(<span class="hljs-variable">IMAGE</span> <span class="hljs-variable">ID</span>)</span><br></code></pre></td></tr></table></figure></li><li><p>删除多个镜像</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">docker rmi -f 镜像名<span class="hljs-number">1</span>:<span class="hljs-keyword">TAG</span> <span class="hljs-title">镜像名2</span>:<span class="hljs-keyword">TAG</span><br></code></pre></td></tr></table></figure></li><li><p>删除全部</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">docker</span> rmi -f  <span class="hljs-string">&#x27;docker images -qa&#x27;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="Docker容器相关"><a href="#Docker容器相关" class="headerlink" title="Docker容器相关"></a>Docker容器相关</h3><h4 id="查看容器"><a href="#查看容器" class="headerlink" title="查看容器"></a>查看容器</h4><ul><li>查看正在运行的容器</li></ul><blockquote><p>docker ps</p></blockquote><ul><li>查看所有容器</li></ul><blockquote><p>docker ps -a</p></blockquote><ul><li>查看最后一次运行的容器</li></ul><blockquote><p>docker ps -l</p></blockquote><ul><li>查看停止的容器</li></ul><blockquote><p>docker ps -f status&#x3D;exited</p></blockquote><h4 id="创建与启动容器"><a href="#创建与启动容器" class="headerlink" title="创建与启动容器"></a>创建与启动容器</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span><br></code></pre></td></tr></table></figure><ul><li><p>OPTIONS说明（常用）：有些是一个减号，有些是两个减号</p><p>–name&#x3D;“容器新名字”: 为容器指定一个名称；<br>-d: 在run后面加上参数-d，会创建一个守护式容器在后台运行（这样创建容器后不会自动登录容器，如果只加-i-t两个参数，<br>创建后会自动进入容器），并返回容器ID，也即启动守护式容器；<br>-i：以交互模式运行容器，通常与 -t 同时使用；<br>-t：表示容器启动后会进入其命令行，为容器重新分配一个伪输入终端，通常与 -i 同时使用；<br>-p: 表示端口映射，有以下四种格式<br>ip:hostPort:containerPort<br>ip::containerPort<br>hostPort:containerPort<br>containerPort<br>前者表示宿主机端口，后者是容器内的映射端口，可以使用多个-p做多个端口映射</p></li><li><p>启动交互式容器</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -it --name=centos 镜像名称:标签 <span class="hljs-regexp">/bin/</span>bash<br><span class="hljs-keyword">exit</span> 退出容器<br>拉取centos：docker pull centos<br>docker run -id centos <span class="hljs-regexp">/bin/</span>bash 后台运行（不会直接进入容器，进入容器之后<span class="hljs-keyword">exit</span>不会关闭容器）<br>docker exec -it name <span class="hljs-regexp">/bin/</span>bash 进入容器<br></code></pre></td></tr></table></figure></li><li><p>守护式方式创建容器</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -id --name=容器名称 镜像名称:标签后台运行（不会直接进入容器，进入容器之后<span class="hljs-keyword">exit</span>不会关闭容器）<br>docker run -id --name=mycentos2 centos:latest<br>docker exec -it name <span class="hljs-regexp">/bin/</span>bash 进入容器<br></code></pre></td></tr></table></figure></li></ul><blockquote><p>&#x2F;bin&#x2F;bash的作用是因为docker后台必须运行一个进程，否则容器就会退出，在这里表示启动容<br>器后启动bash。</p></blockquote><p><strong>什么是守护式容器：</strong></p><blockquote><p>能够长期运行、没有交互式会话、适合运行应用程序和服务</p></blockquote><ul><li>退出当前容器</li></ul><blockquote><p>exit</p></blockquote><h4 id="停止与启动容器"><a href="#停止与启动容器" class="headerlink" title="停止与启动容器"></a>停止与启动容器</h4><ul><li>停止容器</li></ul><blockquote><p>docker stop 容器名称（或者容器id）<br>docker stop mycentos2</p></blockquote><ul><li>启动容器</li></ul><blockquote><p>docker start 容器名称（或者容器id）<br>docker start mycentos2</p></blockquote><ul><li>重启容器</li></ul><blockquote><p>docker restart 容器名称（或者容器id）<br>docker restart mycentos2</p></blockquote><ul><li>强制停止容器</li></ul><blockquote><p>docker kill 容器名称（或者容器id）<br>docker kill mycentos2</p></blockquote><ul><li>删除容器（需先停止容器）</li></ul><blockquote><p>docker rm 容器名称（或者容器id）<br>docker rm mycentos2</p><p>docker rm ‘docker ps -aq’ 通过查询所有容器的id删除所有容器</p></blockquote><ul><li>查看容器信息</li></ul><blockquote><p>docker inspect</p></blockquote><h3 id="配置阿里云镜像加速"><a href="#配置阿里云镜像加速" class="headerlink" title="配置阿里云镜像加速"></a>配置阿里云镜像加速</h3><p>登陆阿里云开发者平台（<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors%EF%BC%89%E8%8E%B7%E5%8F%96%E5%8A%A0%E9%80%9F%E5%99%A8%E5%9C%B0%E5%9D%80">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors）获取加速器地址</a></p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305071545732.png" alt="image-20230507094221339"></p><h2 id="四、Docker容器的数据卷"><a href="#四、Docker容器的数据卷" class="headerlink" title="四、Docker容器的数据卷"></a>四、Docker容器的数据卷</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>思考：</p><ul><li>Docker容器删除后，在容器中产生的数据会随之销毁</li><li>Docker容器和外部机器不可以直接交换文件</li><li>容器之间数据交换</li></ul><p>数据卷：</p><ul><li>数据卷是宿主机中的一个目录或文件</li><li>当容器目录和数据卷绑定后，对方修改会立即同步</li><li>一个容器可以挂载多个数据卷</li></ul><p>数据卷作用：</p><ul><li>容器数据持久化</li><li>外部机器和容器间接通信</li><li>容器之间数据交换</li></ul><h3 id="配置数据卷"><a href="#配置数据卷" class="headerlink" title="配置数据卷"></a>配置数据卷</h3><p>可以在创建容器的时候，将宿主机的目录和容器内的目录进行映射，这样就可以通过修改宿主机的某个目录的文件从而去影响容器。<br>创建容器添加-v参数，后边为宿主机目录:容器目录，例如：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -it -v <span class="hljs-regexp">/root/</span>data<span class="hljs-regexp">/:/</span>root/data --name=c1 centos:<span class="hljs-number">7</span>一个容器挂载一个数据卷<br>docker run -it --name=c2 -v <span class="hljs-regexp">/root/</span>data<span class="hljs-regexp">/:/</span>root<span class="hljs-regexp">/data -v /</span>root<span class="hljs-regexp">/data1/</span>:<span class="hljs-regexp">/root/</span>data1 centos:<span class="hljs-number">7</span> 一个容器挂载多个数据卷<br>docker run -it -v <span class="hljs-regexp">/root/</span>data<span class="hljs-regexp">/:/</span>root/data --name=c3 centos:<span class="hljs-number">7</span><br>docker run -it -v <span class="hljs-regexp">/root/</span>data<span class="hljs-regexp">/:/</span>root/data --name=c4 centos:<span class="hljs-number">7</span> 多个容器挂载同一个数据卷<br></code></pre></td></tr></table></figure><h3 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h3><p>多容器之间数据交换：</p><ol><li>多个容器挂载同一个数据卷</li><li>数据卷容器</li></ol><h3 id="配置数据卷-1"><a href="#配置数据卷-1" class="headerlink" title="配置数据卷"></a>配置数据卷</h3><p>1.创建启动数据卷容器c3，使用-v参数设置数据卷</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -it -v /volume <span class="hljs-attribute">--name</span>=c3 centos:7 /bin/bash<br></code></pre></td></tr></table></figure><p>2.创建启动容器c1,c2，使用–volumes-from参数设置数据卷</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -it <span class="hljs-attribute">--name</span>=c1 --volumes-from c3 centos:7 /bin/bash<br>docker <span class="hljs-built_in">run</span> -it <span class="hljs-attribute">--name</span>=c2 --volumes-from c3 centos:7 /bin/bash<br></code></pre></td></tr></table></figure><h2 id="Docker-应用部署"><a href="#Docker-应用部署" class="headerlink" title="Docker 应用部署"></a>Docker 应用部署</h2><h3 id="MySQL-部署"><a href="#MySQL-部署" class="headerlink" title="MySQL 部署"></a>MySQL 部署</h3><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305071548873.png" alt="image-20230507154827799" style="zoom:67%;" /><ul><li>Docker hub上查找mysql镜像</li></ul><blockquote><p>docker search mysql</p></blockquote><ul><li>从Docker Hub上(阿里云加速器)拉取mysql镜像到本地,标签为5.6</li></ul><blockquote><p>docker pull mysql:5.6</p></blockquote><ul><li>创建容器,设置端口映射、目录映射</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在root目录下创建mysql目录用于存储mysql数据信息</span><br><span class="hljs-built_in">mkdir</span> ~/mysql<br><span class="hljs-built_in">cd</span> ~/mysql<br></code></pre></td></tr></table></figure><blockquote><p>docker run -id \</p><p> –name&#x3D;c_mysql \</p><p> -p 3307:3306 \</p><p>-v $PWD&#x2F;conf:&#x2F;etc&#x2F;mysql&#x2F;conf.d \</p><p>-v $PWD&#x2F;logs:&#x2F;logs \</p><p>-v $PWD&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql \</p><p>-e MYSQL_ROOT_PASSWORD&#x3D;123456 <br>mysql:5.6</p></blockquote><p>-p 代表端口映射，格式为<strong>宿主机映射端口:容器运行端口</strong><br>-e 代表添加环境变量，MYSQL_ROOT_PASSWORD是root用户的登录密码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker exec -it c_mysql <span class="hljs-regexp">/bin/</span>bash 进入mysql容器<br>mysql -uroot -p123456 进入mysql<br></code></pre></td></tr></table></figure><ul><li><p>使用mysql客户端navicat连接</p><p>注意这里端口已被映射为3307（一般我们映射3306）</p></li></ul><h3 id="tomcat-部署"><a href="#tomcat-部署" class="headerlink" title="tomcat 部署"></a>tomcat 部署</h3><ul><li>Docker hub上查找tomcat镜像</li></ul><blockquote><p>docker search tomcat</p></blockquote><ul><li>从Docker Hub上(阿里云加速器)拉取tomcat镜像</li></ul><blockquote><p>docker pull tomcat</p></blockquote><ul><li>创建容器,设置端口映射、目录映射</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在root目录下创建tomcat目录用于存储tomcat数据信息</span><br><span class="hljs-built_in">mkdir</span> ~/tomcat<br><span class="hljs-built_in">cd</span> ~/tomcat<br></code></pre></td></tr></table></figure><blockquote><p>docker run -id \</p><p> –name&#x3D;c_tomcat \</p><p> -p 8080:8080 \</p><p>-v $PWD：&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps \</p><p>tomcat</p></blockquote><h3 id="Nginx-部署"><a href="#Nginx-部署" class="headerlink" title="Nginx 部署"></a>Nginx 部署</h3><ul><li>Docker hub上查找Nginx镜像</li></ul><blockquote><p>docker search nginx</p></blockquote><ul><li>从Docker Hub上(阿里云加速器)拉取Nginxl镜像到本地</li></ul><blockquote><p>docker pull nginx</p></blockquote><ul><li>创建容器,设置端口映射、目录映射</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim">#在root目录下创建nginx目录用于存储nginx数据信息<br><span class="hljs-built_in">mkdir</span> ~/nginx<br><span class="hljs-keyword">cd</span> ~/nginx<br><span class="hljs-built_in">mkdir</span> <span class="hljs-keyword">conf</span><br><span class="hljs-keyword">cd</span> <span class="hljs-keyword">conf</span><br><span class="hljs-keyword">vim</span> nginx.<span class="hljs-keyword">conf</span> #nginx.<span class="hljs-keyword">conf</span>事先准备用于粘贴<br><span class="hljs-keyword">cd</span> ..<br></code></pre></td></tr></table></figure><blockquote><p>docker run -id \</p><p> –name&#x3D;c_nginx \</p><p> -p 80:80 \</p><p>-v $PWD&#x2F;conf&#x2F;nginx.conf:&#x2F;etc&#x2F;nginx&#x2F;nginx.conf \</p><p>-v $PWD&#x2F;logs:&#x2F;var&#x2F;log&#x2F;nginx \</p><p>-v $PWD&#x2F;html:&#x2F;usr&#x2F;sharer&#x2F;nginx&#x2F;html \</p><p>nginx</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># This is a sample Nginx configuration for Elefant.</span><br><span class="hljs-comment"># Add these to your server&#123;&#125; block, making sure to</span><br><span class="hljs-comment"># adjust the root path and add any additional</span><br><span class="hljs-comment"># configurations you require.</span><br><br><span class="hljs-comment"># Uncomment if required</span><br><br><span class="hljs-comment">## Fast-CGI cache settings</span><br><span class="hljs-comment">#fastcgi_cache_path /tmp levels=1 keys_zone=CACHE:16m inactive=24h;</span><br><span class="hljs-comment">#fastcgi_cache_key &quot;$scheme$request_method$host$request_uri&quot;;</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#set $nocache &quot;&quot;;</span><br><span class="hljs-comment">#if ($http_cookie ~ (PHPSESSID)) &#123;</span><br><span class="hljs-comment">#        set $nocache &quot;Y&quot;;</span><br><span class="hljs-comment">#&#125;</span><br><span class="hljs-comment">## &quot;elefant_user&quot; should be replaced by value of session_name from config</span><br><span class="hljs-comment">#if ($http_cookie ~ (elefant_user)) &#123;</span><br><span class="hljs-comment">#        set $nocache &quot;Y&quot;;</span><br><span class="hljs-comment">#&#125;</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#fastcgi_cache           CACHE;</span><br><span class="hljs-comment">#fastcgi_cache_valid     200 302  1d;</span><br><span class="hljs-comment">#fastcgi_cache_valid     301      1d;</span><br><span class="hljs-comment">#fastcgi_cache_valid     any      1m;</span><br><span class="hljs-comment">#fastcgi_cache_min_uses  1;</span><br><span class="hljs-comment">#fastcgi_cache_use_stale error timeout invalid_header http_500;</span><br><span class="hljs-comment">#fastcgi_ignore_headers  Set-Cookie Expires Cache-Control;</span><br><span class="hljs-comment">#fastcgi_pass_header     Set-Cookie;</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#fastcgi_cache_bypass    $nocache;</span><br><span class="hljs-comment">#fastcgi_no_cache        $nocache;</span><br><br><span class="hljs-section">location</span><span class="hljs-regexp"> ^~</span> /conf/ &#123;<br><span class="hljs-attribute">deny</span> all;<br><span class="hljs-attribute">return</span> <span class="hljs-number">403</span>;<br>&#125;<br><span class="hljs-section">location</span> <span class="hljs-regexp">~ ^/(cache|apps|tests|lib)/.*\.(php|sql)$</span> &#123;<br><span class="hljs-attribute">deny</span> all;<br><span class="hljs-attribute">return</span> <span class="hljs-number">403</span>;<br>&#125;<br><span class="hljs-section">location</span> <span class="hljs-regexp">~ ^/files/.*\.(?!(gif|jpe?g|png|mp4|pdf))$</span> &#123;<br><span class="hljs-attribute">add_header</span> Content-disposition <span class="hljs-string">&quot;attachment&quot;</span>;<br>&#125;<br><span class="hljs-section">location</span> / &#123;<br><span class="hljs-attribute">root</span> /var/www/nginx-default;<br><span class="hljs-attribute">index</span> index.php;<br><span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ /index.php?<span class="hljs-variable">$args</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="Redis-部署"><a href="#Redis-部署" class="headerlink" title="Redis 部署"></a>Redis 部署</h3><ul><li>Docker hub上查找redis镜像</li></ul><blockquote><p>docker search redis</p></blockquote><ul><li>从Docker Hub上(阿里云加速器)拉取redis镜像</li></ul><blockquote><p>docker pull redis:5.0</p></blockquote><ul><li>创建容器,设置端口映射</li></ul><blockquote><p>docker run -id \</p><p> –name&#x3D;c_redis \</p><p> -p 6379:6379\</p><p>redis:5.0</p></blockquote><ul><li>使用redis-cli连接</li></ul><blockquote><p>docker exec -it c_redis redis-cli</p></blockquote><ul><li>打开redis客户端连接redis服务器</li></ul><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h2><h3 id="Dockerfile概念"><a href="#Dockerfile概念" class="headerlink" title="Dockerfile概念"></a>Dockerfile概念</h3><p>Dockerfile是由一系列命令和参数构成的脚本，这些命令应用于基础镜像并最终创建一个新的镜像</p><p>对于开发人员：可以为开发团队提供一个完全一致的开发环境<br>对于测试人员：可以直接拿开发时所构建的镜像或者通过Dockerfile文件构建一个新的镜像开始工作<br>对于运维人员：在部署时，可以实现应用的无缝移植</p><h3 id="Docker镜像原理"><a href="#Docker镜像原理" class="headerlink" title="Docker镜像原理"></a>Docker镜像原理</h3><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305071653680.png" alt="image-20230507165351604"></p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305071659833.png" alt="image-20230507165959629" style="zoom:67%;" /><h3 id="Docker镜像制作"><a href="#Docker镜像制作" class="headerlink" title="Docker镜像制作"></a>Docker镜像制作</h3><p>1.容器转为镜像</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gauss">docker commit 容器id 镜像名称：版本号（镜像名称：版本号自定义）commit命令数据卷挂载内容消失<br>docker <span class="hljs-keyword">save</span> -o 压缩文件名称 镜像名称：版本号（压缩文件名称自定义）<span class="hljs-meta">#压缩镜像</span><br>docker <span class="hljs-keyword">load</span> -i 压缩文件名称 <span class="hljs-meta">#还原镜像</span><br></code></pre></td></tr></table></figure><p>2.Dockerfile</p><h3 id="DockerFile-常用命令"><a href="#DockerFile-常用命令" class="headerlink" title="DockerFile 常用命令"></a>DockerFile 常用命令</h3><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305071827176.png" alt="image-20230507182746068"></p><h4 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h4><p>指明构建的新镜像是来自于哪个基础镜像，例如：</p><blockquote><p>FROM centos: latest</p></blockquote><h4 id="MAINTAINER"><a href="#MAINTAINER" class="headerlink" title="MAINTAINER"></a>MAINTAINER</h4><p>指明镜像维护者及其联系方式（一般是邮箱地址），例如：</p><blockquote><p>MAINTAINER Rui Cheng <a href="mailto:&#x63;&#x68;&#x65;&#x6e;&#103;&#114;&#x75;&#x69;&#x2e;&#x73;&#x6b;&#64;&#103;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;">&#x63;&#x68;&#x65;&#x6e;&#103;&#114;&#x75;&#x69;&#x2e;&#x73;&#x6b;&#64;&#103;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p></blockquote><p>不过，MAINTAINER并不推荐使用，更推荐使用LABEL来指定镜像作者，例如：</p><blockquote><p>LABEL maintainer&#x3D;“Rui Cheng”</p></blockquote><h4 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h4><p>拷贝文件或目录到镜像中，PS：如果是URL或压缩包，会自动下载或自动解压，例如：</p><blockquote><p>ADD …<br>ADD html.tar.gz &#x2F;var&#x2F;www&#x2F;html<br>ADD <a href="https://xxx.com/html.tar.gz">https://xxx.com/html.tar.gz</a> &#x2F;var&#x2F;www&#x2F;html</p></blockquote><h4 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h4><p>启动容器时执行的Shell命令，例如：</p><blockquote><p>CMD [“-C”, “&#x2F;start.sh”]<br>CMD [“&#x2F;usr&#x2F;sbin&#x2F;sshd”, “-D”]<br>CMD &#x2F;usr&#x2F;sbin&#x2F;sshd -D</p></blockquote><h4 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h4><p>声明容器运行的服务端口，例如：</p><blockquote><p>EXPOSE 80 443</p></blockquote><h4 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h4><p>拷贝文件或目录到镜像中，用法同ADD，只是不支持自动下载和解压，例如：</p><blockquote><p>COPY .&#x2F;start.sh &#x2F;start.sh</p></blockquote><h4 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h4><p>设置环境内环境变量，例如：</p><blockquote><p>ENV MYSQL_ROOT_PASSWORD 123456<br>ENV JAVA_HOME &#x2F;usr&#x2F;local&#x2F;jdk1.8.0_45</p></blockquote><h4 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h4><p>指定容器挂载点到宿主机自动生成的目录或其他容器，例如：</p><blockquote><p>VOLUME [“&#x2F;var&#x2F;lib&#x2F;mysql”]<br>PS：一般不会在Dockerfile中用到，更常见的还是在docker run的时候指定-v数据卷。</p></blockquote><h4 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h4><p>为RUN、CMD、ENTRYPOINT以及COPY和AND设置工作目录，例如：</p><blockquote><p>WORKDIR &#x2F;data</p></blockquote><h3 id="使用脚本创建镜像"><a href="#使用脚本创建镜像" class="headerlink" title="使用脚本创建镜像"></a>使用脚本创建镜像</h3><ul><li>准备编写DockerFile文件<br>vim Dockerfile</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> centos:latest<br><span class="hljs-keyword">MAINTAINER</span> zRuiCheng &lt;chengrui.sk@gmail.com&gt;<br><span class="hljs-keyword">ENV</span> MYPATH /usr/local<br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> <span class="hljs-variable">$MYPATH</span></span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> yum -y install vim</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> yum -y install net-tools</span><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">80</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> <span class="hljs-built_in">echo</span> <span class="hljs-variable">$MYPATH</span></span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;success--------------ok&quot;</span></span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> /bin/bash</span><br></code></pre></td></tr></table></figure><ul><li>构建镜像</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> build -f DockerFile文件路径 -t mycentos:<span class="hljs-number">1</span>.<span class="hljs-number">1</span> .<br></code></pre></td></tr></table></figure><ul><li>运行镜像创建容器</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -id -p <span class="hljs-number">9000</span>:<span class="hljs-number">8000</span> mycentos:<span class="hljs-number">1</span>.<span class="hljs-number">1</span>（name可默认,端口映射方便外部访问）<br></code></pre></td></tr></table></figure><h2 id="Docker-Compose服务编排"><a href="#Docker-Compose服务编排" class="headerlink" title="Docker Compose服务编排"></a>Docker Compose服务编排</h2><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305071918200.png" alt="image-20230507191809069"></p><h3 id="docker-compose安装"><a href="#docker-compose安装" class="headerlink" title="docker-compose安装"></a>docker-compose安装</h3><p><strong>docker-compose是docker的独立产品，因此需要安装docker之后再单独安装docker compose</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -L https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/docker/</span>compose<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/1.21.1/</span>docker-compose-`uname -s`-`uname -m` -o <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br><span class="hljs-comment">#下载docker-compose文件</span><br>mv docker-compose <span class="hljs-regexp">/usr/</span>local/bin<br><span class="hljs-comment">#将文件复制到/usr/local/bin环境变量下面</span><br>chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br><span class="hljs-comment">#给他一个执行权限</span><br></code></pre></td></tr></table></figure><h3 id="docker-compose卸载"><a href="#docker-compose卸载" class="headerlink" title="docker-compose卸载"></a>docker-compose卸载</h3><p>在 Docker 中，当我们执行 docker pull xxx 的时候 ，它实际上是从 registry.hub.docker.com这个地址去查找，这就是Docker公司为我们提供的公共仓库。<br>在工作中，不可能把企业项目push到公有仓库进行管理。为了更好的管理镜像，Docker不仅提供了一个中央仓库，同时允许搭建本地私有仓库。介绍registry、harbor两种私有仓库搭建。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br></code></pre></td></tr></table></figure><h2 id="Docker私有仓库"><a href="#Docker私有仓库" class="headerlink" title="Docker私有仓库"></a>Docker私有仓库</h2><h3 id="搭建私有仓库"><a href="#搭建私有仓库" class="headerlink" title="搭建私有仓库"></a>搭建私有仓库</h3><ul><li>Docker 官方提供了一个搭建私有仓库的镜像 registry ，只需把镜像下载下来，运行容器并暴<br>露5000端口，就可以使用了。</li></ul><blockquote><p>docker pull registry:2</p></blockquote><blockquote><p>docker run -id -v &#x2F;opt&#x2F;registry:&#x2F;var&#x2F;lib&#x2F;registry -p 5000:5000 –name&#x3D;myregistry registry:2</p></blockquote><p>Registry服务默认会将上传的镜像保存在容器的&#x2F;var&#x2F;lib&#x2F;registry，将主机的&#x2F;opt&#x2F;registry目录挂载<br>到该目录，即可实现将镜像保存到主机的&#x2F;opt&#x2F;registry目录了。</p><ul><li>浏览器访问http:&#x2F;&#x2F;私有服务器ip：5000&#x2F;v2&#x2F;__catalog，出现json说明registry运行正常</li></ul><h3 id="将本地镜像上传至私有仓库"><a href="#将本地镜像上传至私有仓库" class="headerlink" title="将本地镜像上传至私有仓库"></a>将本地镜像上传至私有仓库</h3><ul><li>要通过docker tag将该镜像标志为要推送到私有仓库：</li></ul><blockquote><p>docker tag nginx:latest 私有服务器ip:5000&#x2F;nginx:latest</p></blockquote><ul><li>通过 docker push 命令将 nginx 镜像 push到私有仓库中：</li></ul><blockquote><p>docker push 私有服务器ip:5000&#x2F;nginx:latest</p></blockquote><ul><li>访问 http:&#x2F;&#x2F;:私有服务器ip:5000&#x2F;v2&#x2F;_catalog 查看私有仓库目录，可以看到刚上传的镜像了：</li></ul><blockquote><p> http:&#x2F;&#x2F;:私有服务器ip:5000&#x2F;v2&#x2F;_catalog</p></blockquote><h3 id="从私有仓库拉取镜像"><a href="#从私有仓库拉取镜像" class="headerlink" title="从私有仓库拉取镜像"></a>从私有仓库拉取镜像</h3><ul><li>下载私有仓库的镜像，使用如下命令：</li></ul><blockquote><p>docker pull 私有服务器ip:5000&#x2F;镜像名:版本号<br>docker pull 私有服务器ip:5000&#x2F;nginx:latest</p></blockquote><h2 id="Docker与虚拟机对比"><a href="#Docker与虚拟机对比" class="headerlink" title="Docker与虚拟机对比"></a>Docker与虚拟机对比</h2><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305072022189.png" alt="image-20230507202214980"></p><hr><p><code>相关项目实践即docker与宝塔/青龙的综合运用待后续补充</code></p>]]></content>
    
    
    <categories>
      
      <category>AT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>AT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>system</title>
    <link href="/2023/04/22/Test%20paper%20distribution%20system/"/>
    <url>/2023/04/22/Test%20paper%20distribution%20system/</url>
    
    <content type="html"><![CDATA[<h1 id="期末考试试卷的审批管理设计方案"><a href="#期末考试试卷的审批管理设计方案" class="headerlink" title="期末考试试卷的审批管理设计方案"></a>期末考试试卷的审批管理设计方案</h1><h2 id="组员名单及分工"><a href="#组员名单及分工" class="headerlink" title="组员名单及分工:"></a>组员名单及分工:</h2><table><thead><tr><th>成员</th><th>学号</th><th>姓名</th><th>职责</th></tr></thead><tbody><tr><td>组长</td><td>***********</td><td>CR</td><td>方案总体设计</td></tr><tr><td>组员</td><td>***********</td><td>PQF</td><td>相关技术文档支持</td></tr><tr><td>组员</td><td>***********</td><td>CFY</td><td>流程图及相关责任追究方案设计</td></tr></tbody></table><h2 id="Abstarct"><a href="#Abstarct" class="headerlink" title="Abstarct"></a>Abstarct</h2><p>基于信息安全技术完成一个大学期末试卷保密系统，参与者有各科出卷老师，试卷审核人员，学校教务处，印刷厂。</p><p><strong>过程图（供参考以实际方案为主）</strong>：</p><p>图1 流程图</p><p> <img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304281243875.png" alt="image-20230428124301703"></p><h2 id="一、试卷加密"><a href="#一、试卷加密" class="headerlink" title="一、试卷加密"></a>一、试卷加密</h2><p>由于本系统对登录权限进行了严格的控制（各科目只能有一个角色可以进行登录，角色随着进度而变化），所以对系统内的传输的需求几乎为零，所以试卷无需考虑传输过程的加密。试卷由出卷人在系统内编写（避免传输拦截），并采用采用RSA和SHA256结合来加密试卷。</p><p>采用RSA和SHA256来加密试卷，流程大致如下：</p><ol><li><p>生成RSA密钥对：首先，需要生成RSA密钥对，包括公钥和私钥。这可以通过调用RSA算法库来实现。（由学校的网络安全中心生成并管理）</p></li><li><p>使用SHA256计算消息摘要：将试卷的内容使用SHA256哈希算法计算出消息摘要。</p></li><li><p>使用RSA公钥加密消息摘要：使用RSA公钥加密消息摘要，生成密文。</p></li><li><p>将密文和试卷一起存储：将密文和试卷一起存储到数据库或者其他存储介质中。</p></li><li><p>接收试卷并解密：当需要解密试卷时，系统调用用RSA私钥解密密文，得到原始的消息摘要。</p></li><li><p>计算消息摘要：将试卷内容使用SHA256哈希算法计算出消息摘要。</p></li><li><p>比较消息摘要：将计算出的消息摘要和解密得到的消息摘要进行比较，如果相同，则说明试卷未被篡改，否则说明试卷已经被篡改。</p></li></ol><p>以上流程可以保证试卷的安全性，同时也可以保证试卷的完整性，防止试卷被篡改或者伪造。</p><h2 id="二、主要流程"><a href="#二、主要流程" class="headerlink" title="二、主要流程"></a>二、主要流程</h2><p>设计思路如下，出卷老师和相应试卷审核人员彼此拥有对方公钥；试卷审核人员，学校教务处彼此拥有对方公钥；出卷老师和学校教务处彼此拥有对方公钥（公钥、私钥由学校网络安全中心统一生成并进行分发管理）。</p><p>在设计数据库时考虑到该系统具有一定特殊性（往往一个角色用户只需登陆一次系统进行操作），同时因为为了避免salt存入数据库，采取的RSA前后端两次加密的salt均是固定的，为了降低攻击者使用彩虹表或其他预先计算的哈希表来查找已知的哈希值，该系统各科登录权限只给一人，权限以3为一个循环，1对应出卷老师；2对应试卷审核人员；3对应学校教务处（这个随时变化的特性一定程度上保证了加密的不可破译）。</p><p>密码采用RSA加盐加密，出卷人拥有该科目系统的初始密码。</p><p>出卷老师出完试卷后登录系统，上传试卷后，选择退出登录（系统产生一个操作日志存入数据库中），这时该科目系统的账户用户名密码被重置（账户名和密码对出卷人不可见），权限更改为2，系统会请求调用出卷人的私钥通过第三方工具对账户的用户名和密码信息进行数字签名，并以邮件的方式发送到下一级试卷审核人员的手中。</p><p>试卷审核人员收到邮件后，通过私钥解密邮件内容，并且使用发件人的公钥验证邮件的来源和完整性。确认无误后，试卷审核人员使用账户的用户名和密码进行登录，登录后系统自动开启屏幕监控，后台监控，及摄像头，这些数据会呈现在学校教务处的系统中，审核人员审核试卷不通过，注明原因，选择退出登录系统产生一个操作日志存入数据库中）这时该科目系统的账户用户名密码被重置（账户名和密码对出卷人不可见），权限更改为1，系统会请求调用试卷审核人员的私钥通过第三方工具对账户的用户名和密码信息进行数字签名，并以邮件的方式发送到上一级出卷老师的手中。</p><p>出卷老师接收到邮件重新进入系统修改试卷并提交，重复上列循环。审核人员审核试卷通过则退出登录（系统产生一个操作日志存入数据库中），这时该科目系统的账户用户名密码被重置（账户名和密码对出卷人不可见），权限更改为3，系统会请求调用试卷审核人员的私钥通过第三方工具对账户的用户名和密码信息进行数字签名，并以邮件的方式发送到下一级学校教务处的手中。</p><p>学校教务处收到邮件后，通过私钥解密邮件内容，并且使用发件人的公钥验证邮件的来源和完整性。确认无误后，学校教务处使用账户的用户名和密码进行登录，登录后系统自动开启屏幕监控，后台监控，及摄像头，这些数据会存储在服务器中，学校教务处审核试卷审核人员的操作记录，及试卷（试卷默认基本不会被教务退回，若退回则一层一层递回到出卷人手中），若学校教务处判定试卷审核人员登录过程中出现异常行为，则要求试卷审核人员进行合理解释若解释通过则该试卷通过审核，若解释不通过则该试卷废除，学校教务处退出登录，系统权限设为1，系统会请求调用学校教务处的私钥通过第三方工具对账户的用户名和密码信息进行数字签名，并以邮件的方式发送到出卷老师的手中。若学校教务处判定试卷审核人员登录过程中合格，试卷无误后审核通过，该试卷会被封存在系统中（学校教务处也不可再次查看），并定时发送到印刷厂。</p><p>在考试结束后，下一学期出卷开始前该系统的账户密码将再次重置并发送到相应学科出卷教师手中</p><h2 id="三、对于上述描述还需做出以下补充"><a href="#三、对于上述描述还需做出以下补充" class="headerlink" title="三、对于上述描述还需做出以下补充"></a>三、对于上述描述还需做出以下补充</h2><p>审计日志：在系统的各个环节中，都记录了审计日志，以便后续的审查和调查。审计日志包括登录、操作和错误信息等。</p><p>访问控制：对于不同的用户角色和操作，需要采用不同的访问控制策略，以保护敏感信息的安全性。例如，对于学校教务处的用户，限制他们只能访问和审核自己的科目试卷，而不能访问其他科目的试卷。</p><p>引入数据加密：除了采用SHA-512加盐加密存储密码之外，数据库中的其他敏感信息也进行了加密，例如试卷内容、操作日志等，以提高系统的保密性。</p><p>定期进行安全评估：对于这样的安全系统，需要定期进行安全评估，以发现潜在的安全漏洞和风险，并采取相应的措施加以修复和改进。</p><p>对于试卷的加密：考试中心应建立专门的数据管理部门，并配备专业的技术人员，负责试卷加密和解密。试卷的加密应采用对称加密算法，如AES算法，并设置不同的密钥，每次考试使用不同的密钥加密试卷，确保试卷的安全性。加密后的试卷应存放在安全的物理介质上，并设有防盗、防火、防潮等保护措施，以确保试卷的完整性和保密性。考试中心应建立专门的加密和解密工作人员名单，并制定相关的加密操作规范和标准化流程，确保加密过程的规范性和严密性。加密工作人员必须签署保密协议，并接受安全培训和考核，确保加密过程的安全性和保密性。如发现加密人员存在违规操作或泄密行为，应立即启动责任追究程序，对违规人员进行严肃处理，并进行相应的补救措施，以确保考试安全。</p><p>对于试卷的分发和回收：试卷的分发和回收应由专人负责，试卷应在考前按照预定计划，由考试中心工作人员按照规定时间、地点进行统一发放。考试结束后，试卷应立即由监考人员进行回收，并在现场进行初步检查和封存，确保试卷的完整性和保密性。</p><p>试卷审核人员和学校教务处使用账户的用户名和密码进行登录：该信息在传输过程中可能会被拦截和窃取，采用使用双因素认证，例如短信验证码或令牌。</p><h2 id="四、相应的责任追究机制"><a href="#四、相应的责任追究机制" class="headerlink" title="四、相应的责任追究机制"></a>四、相应的责任追究机制</h2><p>试卷制作人员：如果泄露是由于试卷制作过程中出现疏忽或失误导致的，制作人员应该承担第一责任人的责任。</p><p>试卷加密人员：如果泄露是由于试卷加密过程中出现问题，导致试卷被解密或密码被泄露，加密人员应该承担第一责任人的责任。</p><p>试卷保管人员：如果泄露是由于试卷在保管过程中被盗窃、遗失或被他人窃取等原因，保管人员应该承担第一责任人的责任。</p><p>学校教务处：如果泄露是由于学校教务处在试卷管理中存在缺陷，如审查不严、监管不力等问题导致的，教务处应该承担第一责任人的责任。</p><p>考试监考人员：如果泄露是由于监考人员在考试过程中出现问题，如放任作弊、违规带手机等导致的，监考人员应该承担第一责任人的责任。</p><p>网络信息中心：如果泄露是由于网络信息中心的网络安全措施不到位，导致试卷在网上传播或被他人非法获取等问题，网络信息中心应该承担第一责任人的责任。</p><p>学生：如果泄露是由于学生个人的行为，如偷拍试卷、传播试卷等问题导致的，学生应该承担第一责任人的责任。</p><p>在责任追究方面，可以采取多种方式，如警告、罚款、停职、降职、解聘等。具体的措施应该根据责任人的情况和泄露的严重程度来确定。同时，在责任追究过程中应该注重事实查清，确保责任人的权益得到保障。</p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
      <category>ITS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ITS</tag>
      
      <tag>试卷分发安全系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>宝塔面板使用</title>
    <link href="/2023/04/05/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/04/05/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="宝塔面板部署Java-web项目的教程"><a href="#宝塔面板部署Java-web项目的教程" class="headerlink" title="宝塔面板部署Java web项目的教程"></a>宝塔面板部署Java web项目的教程</h2><h3 id="步骤一：安装宝塔面板"><a href="#步骤一：安装宝塔面板" class="headerlink" title="步骤一：安装宝塔面板"></a>步骤一：安装宝塔面板</h3><ul><li><p>访问宝塔官网 <a href="https://www.bt.cn/">https://www.bt.cn/</a> ，选择Linux面板，复制安装命令，例如<strong>Centos</strong>安装脚本yum install -y wget &amp;&amp; wget -O install.sh <a href="https://download.bt.cn/install/install_6.0.sh">https://download.bt.cn/install/install_6.0.sh</a> &amp;&amp; sh install.sh ed8484bec。</p></li><li><p>在你的Linux服务器上运行安装命令，等待安装完成。</p></li><li><p>记下安装完成后显示的面板地址、用户名和密码（建议复制到txt文件），用浏览器访问面板地址，登录面板。</p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304171757788.png" alt="image-20230417175723637" style="zoom:67%;" /><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304171758196.png" alt="image-20230417175840135" style="zoom:67%;" /></li></ul><h3 id="步骤二：安装Tomcat和JDK"><a href="#步骤二：安装Tomcat和JDK" class="headerlink" title="步骤二：安装Tomcat和JDK"></a>步骤二：安装Tomcat和JDK</h3><ul><li><p>访问你的宝塔外网地址，登录你的宝塔后台（填写你自己的账号密码）</p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304171801729.png" alt="image-20230417180102670" style="zoom:67%;" /></li><li><p>在面板上选择软件商店，找到Java项目一键部署，点击安装。</p></li><li><p>安装完成后，点击设置，选择Tomcat版本（根据你的项目需求），点击安装。</p></li><li><p>安装Tomcat的同时，宝塔会自动安装对应版本的JDK，并配置好环境变量。</p></li><li><p>安装完成后，记下Tomcat的端口号（默认为8080），并在你的服务器防火墙和云服务商控制台上开放该端口号。</p></li></ul><h3 id="步骤三：创建数据库并导入数据"><a href="#步骤三：创建数据库并导入数据" class="headerlink" title="步骤三：创建数据库并导入数据"></a>步骤三：创建数据库并导入数据</h3><ul><li><p>在面板上选择数据库，找到MySQL或MariaDB（根据你的项目需求），点击安装。</p></li><li><p>安装完成后，点击设置，设置数据库的root密码，并在高级设置中开启远程连接。（建议远程数据库与本地数据库名相同）</p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304171821940.png" alt="image-20230417182134865" style="zoom:67%;" /></li><li><p>在你的服务器防火墙和云服务商控制台上开放数据库的端口号（默认为3306）。</p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304171822151.png" alt="image-20230417182228088" style="zoom:67%;" /></li><li><p>使用数据库管理工具（如Navicat）连接到数据库，创建一个数据库，并导入你的项目所需的数据。</p></li><li><p>关于导入数据在这里你有两个选择</p><p>1.本地使用Navicat点击连接，连接远程数据库，在云端数据库（宝塔内）运行sql语句创建数据</p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304171820889.png" alt="image-20230417182032822" style="zoom:67%;" /><p>2.在本地数据库创建数据，Navicat点击工具，数据传输，选择已连接的数据库并填写服务器数据库名（建议远程数据库与本地数据库名相同）</p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304171817457.png" alt="image-20230417181725385" style="zoom:67%;" /></li></ul><h3 id="步骤四：上传并部署Java-web项目"><a href="#步骤四：上传并部署Java-web项目" class="headerlink" title="步骤四：上传并部署Java web项目"></a>步骤四：上传并部署Java web项目</h3><ul><li>在面板上选择文件管理，进入&#x2F;usr&#x2F;local&#x2F;bt&#x2F;tomcat&#x2F;webapps目录，新建一个目录（如test）。</li><li>进入新建的目录，上传你的Java web项目打包成的war文件（如test.war）。</li><li>解压war文件，并删除war文件。</li><li>在面板上选择Java项目一键部署，点击添加站点，输入域名（如test.com）或IP地址（如123.456.789.0），端口号（如8080），项目名称（如test）。</li><li>点击保存，然后重启Tomcat。</li></ul><h3 id="步骤五：测试访问Java-web项目"><a href="#步骤五：测试访问Java-web项目" class="headerlink" title="步骤五：测试访问Java web项目"></a>步骤五：测试访问Java web项目</h3><ul><li>在浏览器上输入域名或IP地址加端口号加项目名称（如<a href="http://test.com:8080/test">http://test.com:8080/test</a> 或 <a href="http://123.456.789.0:8080/test">http://123.456.789.0:8080/test</a> ），回车访问你的Java web项目。</li><li>如果出现404或其他错误，可以检查你的项目配置文件（如web.xml），Tomcat配置文件（如server.xml），数据库连接信息等是否正确。</li></ul><p>以上教程参考了以下搜索结果：<br>(1) 宝塔Linux部署JavaWeb项目两种方式，图文并茂 - CSDN博客. <a href="https://blog.csdn.net/bakelFF/article/details/122266771">https://blog.csdn.net/bakelFF/article/details/122266771</a>.<br>(2) 【宝塔Linux面板】一键部署Java Web项目 - CSDN博客. <a href="https://blog.csdn.net/kitiyang/article/details/120098693">https://blog.csdn.net/kitiyang/article/details/120098693</a>.<br>(3) 通过宝塔面板部署javaweb项目（个人网站，订单管理系统 …. <a href="https://blog.csdn.net/weixin_51560103/article/details/120027343">https://blog.csdn.net/weixin_51560103/article/details/120027343</a>.</p><h2 id="宝塔面板部署springboot项目的教程"><a href="#宝塔面板部署springboot项目的教程" class="headerlink" title="宝塔面板部署springboot项目的教程"></a>宝塔面板部署springboot项目的教程</h2><h3 id="步骤一：安装宝塔面板-1"><a href="#步骤一：安装宝塔面板-1" class="headerlink" title="步骤一：安装宝塔面板"></a>步骤一：安装宝塔面板</h3><ul><li>相同步骤可参考以上<strong>宝塔面板部署Java web项目的教程</strong>不多赘述</li><li>访问宝塔官网 <a href="https://www.bt.cn/">https://www.bt.cn/</a> ，选择Linux面板，复制安装命令，例如<strong>Centos</strong>安装脚本yum install -y wget &amp;&amp; wget -O install.sh <a href="https://download.bt.cn/install/install_6.0.sh">https://download.bt.cn/install/install_6.0.sh</a> &amp;&amp; sh install.sh ed8484bec。</li><li>在你的Linux服务器上运行安装命令，等待安装完成。</li><li>记下安装完成后显示的面板地址、用户名和密码（建议复制到txt文件），用浏览器访问面板地址，登录面板。</li></ul><h3 id="步骤二：安装JDK"><a href="#步骤二：安装JDK" class="headerlink" title="步骤二：安装JDK"></a>步骤二：安装JDK</h3><ul><li>在面板上选择软件商店，找到Java项目一键部署，点击安装。</li><li>安装完成后，点击设置，选择JDK版本（根据你的项目需求），点击安装。</li><li>安装完成后，检查JDK的环境变量是否正确配置。</li></ul><h3 id="步骤三：创建数据库并导入数据-1"><a href="#步骤三：创建数据库并导入数据-1" class="headerlink" title="步骤三：创建数据库并导入数据"></a>步骤三：创建数据库并导入数据</h3><ul><li>在面板上选择数据库，找到MySQL或MariaDB（根据你的项目需求），点击安装。</li><li>安装完成后，点击设置，设置数据库的root密码，并在高级设置中开启远程连接。</li><li>在你的服务器防火墙和云服务商控制台上开放数据库的端口号（默认为3306）。</li><li>使用数据库管理工具（如Navicat）连接到数据库，创建一个数据库，并导入你的项目所需的数据。</li></ul><h3 id="步骤四：上传并部署springboot项目"><a href="#步骤四：上传并部署springboot项目" class="headerlink" title="步骤四：上传并部署springboot项目"></a>步骤四：上传并部署springboot项目</h3><ul><li><p>在面板上选择文件管理，上传你的springboot项目打包成的jar文件（如test.jar）到任意目录（如&#x2F;usr&#x2F;local&#x2F;bt&#x2F;test）。</p></li><li><p>在面板上选择Java项目一键部署，点击添加站点，输入域名（如test.com）或IP地址（如123.456.789.0），端口号（如8400），项目名称（如test）。</p></li><li><p>点击保存，然后启动springboot项目。</p></li><li><p>启动命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">java -jar match.jar 运行jar包, 终端关闭后就会停止运行<br>nohup java -jar match.jar 持续运行jar包, 终端关闭后不会停止运行<br></code></pre></td></tr></table></figure></li></ul><h3 id="步骤五：测试访问springboot项目"><a href="#步骤五：测试访问springboot项目" class="headerlink" title="步骤五：测试访问springboot项目"></a>步骤五：测试访问springboot项目</h3><ul><li>在浏览器上输入域名或IP地址加端口号（如<a href="http://test.com:8400/">http://test.com:8400</a> 或 <a href="http://123.456.789.0:8400">http://123.456.789.0:8400</a> ），回车访问你的springboot项目。</li><li>如果出现错误，可以检查你的项目日志文件（如&#x2F;usr&#x2F;local&#x2F;bt&#x2F;test&#x2F;test.log），数据库连接信息等是否正确。</li></ul><p>以上教程参考了以下搜索结果：<br>(1) 利用宝塔面板部署springboot项目_工地精神的博客-CSDN博客. <a href="https://blog.csdn.net/txyllyyj/article/details/119277420">https://blog.csdn.net/txyllyyj/article/details/119277420</a>.<br>(2) springboot项目轻松部署到宝塔（服务器） - CSDN博客. <a href="https://blog.csdn.net/li1441853031/article/details/120854480">https://blog.csdn.net/li1441853031/article/details/120854480</a>.<br>(3) Spring Boot 中文文档. <a href="https://springdoc.cn/spring-boot/">https://springdoc.cn/spring-boot/</a>.<br>(4) Spring Boot - 百度百科-验证. <a href="https://www.baike.baidu.com/item/Spring%20Boot/20249767">https://www.baike.baidu.com/item/Spring%20Boot/20249767</a>.<br>(5) JavaでのWeb開発に便利なSpring Bootとは？メリット…｜Udemy …. <a href="https://udemy.benesse.co.jp/development/app/spring-boot.html">https://udemy.benesse.co.jp/development/app/spring-boot.html</a>.</p>]]></content>
    
    
    <categories>
      
      <category>AT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AT</tag>
      
      <tag>宝塔面板</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ImageHost</title>
    <link href="/2023/04/05/ImageHost/"/>
    <url>/2023/04/05/ImageHost/</url>
    
    <content type="html"><![CDATA[<p>​我们在Typora编写文章的过程中，会有插入图片，在Typora中，图片是写的路径位置是本地的绝对路径，但当把文章上传到博客编辑的时候，博客是无法访问我们本地图片的路径的。那么如何解决该问题呢？基于博客能访问网上图片的路径的基本特性，所以我们需要把图片上传到一个网页里面存放并生成对应的URL，然后在我们写博客的时候就可以直接使用了该URL了。</p><p>​创建图床的目的是为本地图片等资源生成URL，然后将此连接嵌入到 <code>markdown</code> 编写的博客文章中，以此来解决博客中图片等资源的显示问题。</p><p>​本文介绍一种 PicGo + Github 搭建的个人免费图床并实现与Typora联动，由于创建该文章时我的图床已经搭建完毕故有些步骤不再复现（有点懒），关于搭建过程中本文未指明的一些步骤可以结合相关文章参考。</p><h3 id="下载-PicGo"><a href="#下载-PicGo" class="headerlink" title="下载 PicGo"></a>下载 PicGo</h3><p>PicGo 是一款图片上传的工具，目前支持 SM.SM图床、微博图床，七牛图床，腾讯云COS，阿里云OSS，又拍云，Github 等图床，未来将支持更多图床。</p><p>点击 <a href="https://github.com/Molunerfinn/PicGo/releases">这里</a> 下载 PicGo 工具。根据操作系统选择对应的版本（本人选择的是2.3.1），安装到指定目录。</p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304051501938.png" style="zoom: 50%;" /><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304051505411.png" alt="image-20230405150554320" style="zoom:50%;" /><h2 id="创建-Github-仓库"><a href="#创建-Github-仓库" class="headerlink" title="创建 Github 仓库"></a>创建 Github 仓库</h2><p>新建一个Github仓库页面（前提得有Github账户，没有就去申请一个），填入仓库名称，如ImageHost，仓库类型选择 <code>public</code>（切记，否则会造成资源不可访问等问题）</p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304051510454.png" alt="image-20230405151022400" style="zoom:50%;" /><h2 id="生成-Github-Token"><a href="#生成-Github-Token" class="headerlink" title="生成 Github Token"></a>生成 Github Token</h2><p>点击右上角的头像， 选择 Settings 进入设置页面。</p><p>在打开的页面中， 点击 Developer settings 设置页面。</p><p>进入到权限设置的页面中， 这里选择使用 Personal access tokens。</p><p>并点击 Generate new token 生成一个新的 token。</p><p>填写一个描述信息， 用于我们区分 token 主要是用于做什么， 多个不同的授权码最好分开使用。 这样即使泄露也只是这一个库。勾选 repo 选项， 点击 Generate token 生成授权码。</p><p>token 有时间限制，过了有效期后需要重新生成。</p><p>第一时间复制该token并保存（注意保护，相当于Github密码）， 关闭页面就没有了， 只能重新生成了。<br><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304051512629.png" alt="image-20230405151206566" style="zoom:50%;" /></p><h2 id="PicGo配置图片仓库"><a href="#PicGo配置图片仓库" class="headerlink" title="PicGo配置图片仓库"></a>PicGo配置图片仓库</h2><p>这里需要配置GitHub仓库地址、分支名、AccessToken等基础信息。</p><p>自定义域名需要配置为：<a href="https://gcore.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D%EF%BC%8C%E8%BF%99%E6%A0%B7%E5%B0%B1%E6%89%8D%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87cdn%E8%AE%BF%E9%97%AE%E5%9B%BE%E7%89%87">https://gcore.jsdelivr.net/gh/用户名/仓库名，这样就才可以通过cdn访问图片</a></p><p>仓库名：GitHub用户名&#x2F;GitHub仓库地址</p><p>分支名：main</p><p>设定Token：GitHub中设定的AccessToken（前文提示保存了，如忘记保存可回到GitHub重新生成）</p><p>设定存储路径：img&#x2F;(可自定义，这里设置的是图片在你Github仓库保存的路径)</p><p>自定义域名：<a href="https://gcore.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D@main">https://gcore.jsdelivr.net/gh/用户名/仓库名@main</a></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>设定自定义域名</p><p>不填写，加载速度会有点慢，可能会导致你typora的显示很慢甚至显示不出来，但是在博客转存的时候好像没什么问题；</p><p>CDN加速：<a href="https://cdn.jsdelivr.net/gh/GitHub%E8%B4%A6%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%8A%A0%E9%80%9F%E5%9B%BD%E5%86%85%E4%BC%BC%E4%B9%8E%E5%B7%B2%E7%BB%8F%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86%E4%BA%86%EF%BC%8C%E5%A4%A7%E5%AE%B6%E5%8F%AF%E4%BB%A5%E8%AF%95%E8%AF%95%E3%80%82">https://cdn.jsdelivr.net/gh/GitHub账户名/仓库名，这个加速国内似乎已经访问不了了，大家可以试试。</a></p><p>fastly加速：<a href="https://fastly.jsdelivr.net/gh/GitHub%E8%B4%A6%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D%EF%BC%8C%E6%88%91%E4%BD%BF%E7%94%A8%E8%BF%99%E4%B8%AA%E5%9C%A8Typora%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E6%B2%A1%E9%97%AE%E9%A2%98%EF%BC%8C%E4%BD%86%E6%98%AF%E5%9C%A8%E8%BD%AC%E5%AD%98%E7%9A%84%E6%97%B6%E5%80%99%E5%A4%A7%E9%83%A8%E5%88%86%E5%9B%BE%E7%89%87%E9%83%BD%E6%98%AF%E8%BD%AC%E5%AD%98%E5%A4%B1%E8%B4%A5%E3%80%82">https://fastly.jsdelivr.net/gh/GitHub账户名/仓库名，我使用这个在Typora显示图片没问题，但是在转存的时候大部分图片都是转存失败。</a></p><p>gcore加速：<a href="https://gcore.jsdelivr.net/gh/GitHub%E8%B4%A6%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D">https://gcore.jsdelivr.net/gh/GitHub账户名/仓库名</a> ，这个使用过程中还是有少量的图片转存失败。</p><p>温馨提示</p><p>如果这三个加速不行，可以尝试在链接末尾添加**@main**，举例CDN加速：<a href="https://cdn.jsdelivr.net/gh/GitHub%E8%B4%A6%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D@main%EF%BC%8C%E8%BF%99%E6%A0%B7%E8%BF%98%E6%98%AF%E4%B8%8D%E8%A1%8C%E7%9A%84%E8%AF%9D%E5%B0%B1%E5%8F%AA%E6%9C%89%E5%8F%A6%E6%B1%82%E4%BB%96%E6%B3%95%E4%BA%86%E3%80%82%EF%BC%88%E6%8C%89%E7%85%A7%E6%88%91%E4%B8%8A%E9%9D%A2%E7%9A%84%E6%A0%BC%E5%BC%8F%E5%A1%AB%E5%86%99%E5%8D%B3%E5%8F%AF%EF%BC%8C%E5%B7%B2%E8%AF%95%E9%AA%8C%E5%8F%AF%E8%A1%8C%EF%BC%89">https://cdn.jsdelivr.net/gh/GitHub账户名/仓库名@main，这样还是不行的话就只有另求他法了。（按照我上面的格式填写即可，已试验可行）</a></p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304051522652.png" alt="image-20230405152241594" style="zoom:50%;" /><h2 id="PicGo设置"><a href="#PicGo设置" class="headerlink" title="PicGo设置"></a>PicGo设置</h2><p>相关配置仅供参考，可根据个人习惯调整</p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304051527072.png" alt="image-20230405152739008" style="zoom:50%;" /><h2 id="PicGo拖拽上传"><a href="#PicGo拖拽上传" class="headerlink" title="PicGo拖拽上传"></a>PicGo拖拽上传</h2><p>切换至Github图床拖拽至此即可上传并生成对应的链接格式至剪切板（上PicGo设置里配置）</p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304051530430.png" alt="image-202304051530430" style="zoom:50%;" /><h2 id="Typora的设置"><a href="#Typora的设置" class="headerlink" title="Typora的设置"></a>Typora的设置</h2><p>打开Typora偏好设置</p><p>按如下配置（PicGo路径配置自己的安装路径）</p><p>可点击验证图片上传选项验证，验证成功后就表示以后粘贴至Typora的图片将自动上传至你的个人图床</p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304051536476.png" alt="image-20230405153655392" style="zoom:50%;" /><p>到这里就实现了PicGo + Github+Typora的联动</p><h2 id="一些补充"><a href="#一些补充" class="headerlink" title="一些补充"></a>一些补充</h2><p>本文在编写时有意避开了实现过程中的一些错误，如果最终实现上传后，图片在github里面显示不出来或者破裂</p><p>这里我的解决办法是通过修改hosts文件加速github，请尝试如下操作：</p><p>1.打开host文件</p><p>原因是github屏蔽掉了图片，解决办法就是修改host</p><p>路径C:\Windows\System32\drivers\etc\hosts</p><p>2.添加内容</p><p>找到host文件，用记事本格式打开，最下面添加代码，保存退出</p><p>185.199.108.133 raw.githubusercontent.com<br>185.199.109.133 raw.githubusercontent.com<br>185.199.110.133 raw.githubusercontent.com<br>185.199.111.133 raw.githubusercontent.com</p><p>3.不放心就刷新一下dns—在小黑窗口（win+r -&gt; cmd -&gt; ipconfig&#x2F;flushdns -&gt; 回车）</p><p>如果哪一天你发现你的blog无法正常显示，在控制台出现如下资源加载错误：</p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202304181558194.png" alt="image-20230418155805141" style="zoom:67%;" /><p>那么多半是因为Jsdelivr国内的CDN服务被DNS污染。往往一般是cdn.jsdelivr.net被DNS污染了，而其他代替的地址没有被污染，比如fastly.jsdelivr.net、gcore.jsdelivr.net等。这时候我们就可以批量把图片或者其他静态资源链接中的cdn.jsdelivr.net替换为别的可用的地址（下面自己选一个可用的），等官方修复回去后再替换回去就行了。</p><ul><li><p>无CDN加速</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>raw.githubusercontent.com/<br></code></pre></td></tr></table></figure></li><li><p>Jsdelivr的DNS被污染</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span><br></code></pre></td></tr></table></figure></li><li><p>Jsdelivr替换后的</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//g</span>core.jsdelivr.net<span class="hljs-regexp">/gh/</span><br></code></pre></td></tr></table></figure></li><li><p>可替换的地址</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">fastly<span class="hljs-selector-class">.jsdelivr</span><span class="hljs-selector-class">.net</span><br>gcore<span class="hljs-selector-class">.jsdelivr</span><span class="hljs-selector-class">.net</span><br>testingcf<span class="hljs-selector-class">.jsdelivr</span><span class="hljs-selector-class">.net</span><br>test1<span class="hljs-selector-class">.jsdelivr</span>.net<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>AT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AT</tag>
      
      <tag>ImageHost</tag>
      
      <tag>图床</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>UML-project</title>
    <link href="/2023/04/05/UML-project/"/>
    <url>/2023/04/05/UML-project/</url>
    
    <content type="html"><![CDATA[<h1 id="第1章-绪论"><a href="#第1章-绪论" class="headerlink" title="第1章 绪论"></a>第1章 绪论</h1><h2 id="1-1引言"><a href="#1-1引言" class="headerlink" title="1.1引言"></a>1.1引言</h2><h3 id="1-1-1编写目的"><a href="#1-1-1编写目的" class="headerlink" title="1.1.1编写目的"></a>1.1.1编写目的</h3><p>编写校园失物招领系统的《软件建模与分析分析》报告目的，是为了用户和开发方明确对所建校园失物招领系统所达到的功能和目标。同时，通过此篇基于UML建模语言的分析报告，开发方可以更加进一步了解客户的需求，从而严格按照流程及时、准确地完成系统的开发，以满足客户的需求。同时，该文档也作为概要设计及后续设计的基础。</p><h3 id="1-1-2适用范围"><a href="#1-1-2适用范围" class="headerlink" title="1.1.2适用范围"></a>1.1.2适用范围</h3><p>面向用户：苏州科技大学在校学生及教职工</p><p>适用场景：用户查找他人发布的失物&#x2F;招领信息，发布自己的失物&#x2F;招领信息</p><p>项目形式：B&#x2F;S,C&#x2F;S</p><p>适用平台：浏览器（兼容谷歌浏览器、360安全浏览器、微软edge浏览器火狐浏览器等各大主流浏览器），手机app，微信小程序</p><p>注：校园失物招领系统的适用范围比较广泛，为了最大程度体现UML建模语言的优越性在这里对其B&#x2F;S模式下的项目进行分析。</p><h2 id="1-2项目概述"><a href="#1-2项目概述" class="headerlink" title="1.2项目概述"></a>1.2项目概述</h2><h3 id="1-2-1概述"><a href="#1-2-1概述" class="headerlink" title="1.2.1概述"></a>1.2.1概述</h3><p>校园失物招领系统是一个为校园内的学生、教师和工作人员提供失物信息发布和查询的网络平台。该系统的主要功能有：</p><p>- 用户注册登录：用户可以通过账号、手机号登录，登录后可以发布或查看失物信息。</p><p>- 发布失物信息：用户可以选择发布寻物启事或招领启事，填写相关的物品信息，如名称、类别、地点、时间、图片等，系统会自动提交管理员审核并显示在平台上。</p><p>- 查看失物信息：用户可以按照不同的条件，如类别、地点、时间等，筛选和搜索平台上的失物信息，查看详情或评论。</p><p>- 评论功能：用户可以对任意一条失物信息进行评论，提供线索或询问细节，方便失主和拾主之间的沟通。</p><p>- 管理员管理：管理员可以对平台上的用户和失物信息进行管理，如审核、删除、修改等，维护平台的秩序和安全。</p><p>校园失物招领系统的设计目的是利用信息化手段，解决传统失物招领方式的不便和低效，提高校园内失物招领的成功率和便捷性。</p><h3 id="1-2-2-研究背景和意义"><a href="#1-2-2-研究背景和意义" class="headerlink" title="1.2.2 研究背景和意义"></a>1.2.2 研究背景和意义</h3><p>校园失物招领是高校学生生活中常见的问题，每年都有大量的物品在校园内遗失或捡到，如书籍、钥匙、卡片、电子设备等。这些物品的归属和处理往往依赖于失主和拾主之间的沟通和协商，或者通过学校的相关部门进行登记和公告。然而，这些方式存在诸多不便和不足，如信息不及时、不完整、不准确，沟通成本高，公告范围小，物品存放不安全等，导致失物招领的效率低下，失主和拾主的满意度低下，甚至造成物品的损失和浪费。</p><p>为了解决这一问题，本文提出了一种基于互联网的校园失物招领系统，该系统利用现代软件技术，为高校学生提供一个方便、快捷、安全的失物招领平台。该系统具有以下特点：</p><ul><li>去中心化：该系统不依赖于学校的任何部门或机构，而是由学生自主参与和管理，实现了失物招领的民主化和自主化。</li><li>实时性：该系统通过互联网实现了信息的即时发布和更新，保证了信息的及时性和有效性。</li><li>完整性：该系统通过图文、语音、视频等多种方式记录和展示物品的详细信息，保证了信息的完整性和准确性。</li><li>交互性：该系统通过即时通讯、评论、评价等功能实现了失主和拾主之间的有效沟通和互动，提高了沟通成本和满意度。</li><li>安全性：该系统通过身份认证、权限管理、数据加密等手段保证了用户和物品的安全性和隐私性。</li></ul><p>本文通过软件建模与分析的方法，对校园失物招领系统进行了需求分析、架构设计、功能实现等方面的研究，旨在为高校学生提供一个优质的失物招领服务，同时为软件工程领域提供一个有价值的案例</p><h3 id="1-2-3产品前景"><a href="#1-2-3产品前景" class="headerlink" title="1.2.3产品前景"></a>1.2.3产品前景</h3><p>随着高校人口不断增加，校园内的日常生活也变得更加繁忙。很多学生在校园内忙碌的学习、生活和社交中，很容易会丢失物品或者发现别人丢失的物品。为了更好地解决这个问题，许多高校已经建立了的失物招领系统。事实证明该类产品在校园应用领域前景光明，能够很快的扩增用户，提供有效的服务。</p><h2 id="1-3研究内容和方法"><a href="#1-3研究内容和方法" class="headerlink" title="1.3研究内容和方法"></a>1.3研究内容和方法</h2><p>本文主要研究内容包括以下几个方面：</p><ul><li>需求分析：通过调查问卷、访谈、观察等方式收集用户需求，分析用户特征、需求类型、需求优先级等，确定系统功能需求、非功能需求和约束条件。</li><li>架构设计：根据需求分析结果，采用面向对象的方法设计系统架构，包括系统组成、模块划分、接口定义等，确定系统结构和行为。</li><li>功能实现：根据架构设计结果，选择合适的技术框架和工具实现系统功能，包括前端界面开发、后端业务逻辑开发、数据库设计等，完成系统开发和测试。</li><li>系统评估：通过用户调查、专家评审、数据分析等方式评估系统的可用性、可靠性、可维护性等指标</li></ul><h2 id="1-4本文结构"><a href="#1-4本文结构" class="headerlink" title="1.4本文结构"></a>1.4本文结构</h2><p>本文共分为四章，各章节内容安排如下：</p><p>- 第一章 绪论：介绍了本文的编写目的、适用范围、项目概述、研究背景  义、研究内容和方法等，为后续章节的阅读提供了基础。</p><p>- 第二章 需求分析：分析了校园失物招领系统的功能需求、非功能需求和约  条件，明确了校园失物招领系统的目标和范围。</p><p>- 第三章 建模分析：采用面向对象的方法对校园失物招领系统进行了建模分析，包括用例图、类图、活动图、序列图等，描述了校园失物招领系统的结构和行为。</p><p>- 第四章 数据库设计：利用 E-R 图，并结合使用建模工具PowerDesigner完成数据库的物理概念模型设计。根据需求分析进一步设计并完善了校园失物招领系统的数据库结构，包括用户信表、物品信息表、招领信息表等，给出了各表的字段定义和关系说明。</p><p>此外附有以下两项内容：</p><p>- 结论：总结了本文的主要工作和创新点，指出了本文的不足之处和改进方向。</p><p>-参考文献：列出了本文所引用的相关文献，包括书籍、期刊、网站等，按照国家标准格式进行编号和排列。</p><h1 id="第2章-需求分析"><a href="#第2章-需求分析" class="headerlink" title="第2章 需求分析"></a>第2章 需求分析</h1><h2 id="2-1功能需求"><a href="#2-1功能需求" class="headerlink" title="2.1功能需求"></a>2.1功能需求</h2><h3 id="2-1-1系统结构"><a href="#2-1-1系统结构" class="headerlink" title="2.1.1系统结构"></a>2.1.1系统结构</h3><p>根据需求，校园失物招领系统拟分为以下子模块。整个系统各子模块结构图如下所示：</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291843522.gif" alt="img"></p><center>图2-1-1校园失物招领系统系统结构图</center><h3 id="2-1-2具体功能需求"><a href="#2-1-2具体功能需求" class="headerlink" title="2.1.2具体功能需求"></a>2.1.2具体功能需求</h3><p>经具体分析校园失物招领系统的功能需求如下：</p><p>- 用户注册：游客可以通过填写基本信息（如姓名、学号、年级、联系方式等）来注册成为系统用户，系统需要对用户信息进行有效性验证，验证通过后，用户可以收到注册成功的提示和登录密码。</p><p>- 用户登录：用户可以通过输入用户名（学号）和密码来登录系统，系统需要对用户名和密码进行匹配验证，验证通过后，用户可以进入系统主界面。</p><p>- 用户管理：用户可以在系统主界面查看和修改自己的个人信息（如姓名、年级、联系方式等），也可以修改登录密码或注销账号。</p><p>- 招领管理：用户可以在系统主界面发布招领信息，包括失物的名称、类别、特征、地点、时间等，也可以上传失物的照片。用户还可以查看、修改或删除自己发布的招领信息，或者查看其他用户发布的招领信息，并与之联系。</p><p>- 寻物管理：用户可以在系统主界面发布寻物信息，包括失物的名称、类别、特征、地点、时间等，也可以上传失物的照片。用户还可以查看、修改或删除自己发布的寻物信息，或者查看其他用户发布的寻物信息，并与之联系。</p><p>- 留言管理：用户可以在系统主界面发布感谢留言，表达对拾到或归还失物的人的感激之情，也可以查看其他用户发布的感谢留言，并进行回复或点赞。</p><p>- 公告管理：用户可以在系统主界面查看系统公告，了解系统的最新动态和通知。</p><p>- 管理员登录：管理员可以通过输入管理员账号和密码来登录系统，系统需要对管理员账号和密码进行匹配验证，验证通过后，管理员可以进入系统后台管理界面。</p><p>- 用户审核：管理员可以在系统后台管理界面对用户注册信息进行审核，审核通过后，用户才能正常登录和使用系统，审核不通过则删除用户信息。</p><p>- 用户管理：管理员可以在系统后台管理界面对用户信息进行增删改查操作，也可以对用户进行封禁或解封操作。</p><p>- 物品管理：管理员可以在系统后台管理界面对招领和寻物信息进行增删改查操作，也可以对不合规或过期的信息进行删除操作。</p><p>- 留言管理：管理员可以在系统后台管理界面对感谢留言进行增删改查操作，也可以对不合规或恶意的留言进行删除操作。</p><p>- 公告管理：管理员可以在系统后台管理界面发布、修改或删除系统公告，向用户传达重要的信息和通知。</p><center>表2-1-2校园失物招领系统具体功能需求表</center><table><thead><tr><th>编号</th><th>模块名称</th><th>功能描述</th></tr></thead><tbody><tr><td>1</td><td>登录注册模块</td><td>平台基本操作，用于用户的登录与注册</td></tr><tr><td>2</td><td>浏览功能</td><td>在网站上查看他人发布的信息</td></tr><tr><td>3</td><td>搜索功能</td><td>模糊搜索&#x2F;关键词搜索平台上的失物信息</td></tr><tr><td>4</td><td>个人主页面</td><td>管理个人信息，可进行对信息的修改</td></tr><tr><td>5</td><td>失物发布功能</td><td>发布丢失物品的相关信息</td></tr><tr><td>6</td><td>发布失物招领功能</td><td>发布招领的物品的相关信息，并会获得相应审核认领权限</td></tr><tr><td>7</td><td>认领功能</td><td>用户认领他人发布的招领物品（提供证明，由管理员与招领发布人员共同确认）</td></tr><tr><td>8</td><td>意见反馈、评论功能</td><td>展示给登陆用户及管理员用户的使用反馈</td></tr><tr><td>9</td><td>管理员维护用户信息功能</td><td>对用户在注册页面及个人中心提供的申请进行审核，并通过用户信息修改的请求</td></tr><tr><td>10</td><td>管理员审核管理员审核发布信息，招领信息</td><td>管理员确认发布信息，招领信息规格及内容合规，并同意发布</td></tr><tr><td>11</td><td>审核认领</td><td>管理员通过对比招领信息，及认领证明决定认领是否通过</td></tr><tr><td>12</td><td>系统通知</td><td>管理员对系统的重大更新，及相应公告进行通知</td></tr></tbody></table><h2 id="2-2非功能需求"><a href="#2-2非功能需求" class="headerlink" title="2.2非功能需求"></a>2.2非功能需求</h2><h3 id="2-2-1性能"><a href="#2-2-1性能" class="headerlink" title="2.2.1性能"></a>2.2.1性能</h3><p>本系统在性能上尽量做到实时性强、数据容量小、响应速度快、稳定性高、出错率低、容错性好等优点。</p><p>故该校园失物招领系统的性能需求可以从以下几个方面来考虑：</p><ol><li><p>用户访问响应时间：系统需要在用户请求时快速响应，保证用户体验。一般来说，响应时间应该控制在1-2秒之内。</p></li><li><p>并发用户数：系统需要支持同时访问的用户数量，这个数量需要根据校园的规模和使用情况来确定。如果有大量的用户同时访问系统，需要确保系统能够稳定运行，并且不会出现宕机等问题。</p></li><li><p>数据库读写速度：由于失物招领系统需要涉及到大量的数据存储和读取，因此数据库的读写速度也是一个重要的性能指标。需要确保数据库的读写速度能够满足系统的需求，并且不会出现数据丢失或者数据混乱等问题。</p></li><li><p>系统可扩展性：随着校园的规模不断扩大，失物招领系统的用户数量也会不断增加，因此系统需要具备良好的可扩展性。例如，系统需要支持分布式部署，可以通过增加服务器来扩展系统的性能。</p></li><li><p>安全性能：失物招领系统需要保证用户的信息安全，因此系统的安全性能也是一个重要的指标。需要确保用户的个人信息不会被泄露，同时需要对用户提交的信息进行有效的验证和过滤，防止恶意攻击和注入等问题。</p></li></ol><h3 id="2-2-2安全性"><a href="#2-2-2安全性" class="headerlink" title="2.2.2安全性"></a>2.2.2安全性</h3><p>在本系统的设计中，主要从以下几个方面考虑系统和数据的安全性：</p><p>1.满足速度要求下的少余量原则：余量指的是逻辑上相同的数据，在不同的记录中重复出现，或在逻辑上能导出存在于数据库的记录中。从理论上讲，余量的存在，在数据库设计的不合理，是破坏数据库一致性的潜在危险，同时会增加数据空间开销。但是，在特殊情况下，为了满足速度要求，常常设计一些余量作为数据库记录。当余量存在时，数据库一致性不能靠数据库管理系统来保证，只能通过开发软件的计算方法来解决，余量的存在，大大增加了系统的开发难度，以余量是万不得已时才能使用，使用时，在计算方法上保证数据的一致性。</p><p>2．系统权限原则：根据不同的用户，系统管理员授予不同的权限，从而可以避免对系统的越级操作和数据泄密。</p><p>3．数据加密原则：这个主要是针对数据库端的数据进行的数据加密处理。包括对数据库服务器的用户口令管理、数据库管理系统的用户口令管理、以及数据库中部分数据的加密处理。通过以上的几种加密技术处理，来进一步限制MIS系的使用权限，从而增强其安全性。</p><h3 id="2-2-3可用性"><a href="#2-2-3可用性" class="headerlink" title="2.2.3可用性"></a>2.2.3可用性</h3><p>校园失物招领系统的可用性需求可以从以下几个方面来考虑：</p><ol><li><p>系统稳定性：系统需要保持稳定的运行状态，不出现宕机、崩溃等问题，从而确保系统的可用性。</p></li><li><p>可靠性：系统需要保证用户提交的信息能够被正确地处理和存储，不会出现数据丢失或者数据混乱等问题。</p></li><li><p>易用性：系统需要设计简单易用的用户界面，让用户能够轻松地进行操作，从而提高系统的可用性。</p></li><li><p>可维护性：系统需要具备良好的可维护性，包括易于修改、易于测试、易于部署等方面。这样可以保证系统在出现问题时能够快速修复，并且能够持续地提供服务。</p></li><li><p>可恢复性：系统需要具备良好的可恢复性，包括备份和恢复数据的能力，从而在出现故障时能够快速地恢复系统的运行状态。</p></li></ol><p>总之，校园失物招领系统的可用性要求非常高，需要保证系统能够稳定、可靠、易用、可维护和可恢复，从而能够持续地为用户提供服务。</p><h3 id="2-2-4可维护性"><a href="#2-2-4可维护性" class="headerlink" title="2.2.4可维护性"></a>2.2.4可维护性</h3><p>校园失物招领系统的可维护性包括对数据的维护和对系统的维护，在设计时，主要从以下几个方面进行考虑：</p><p>1．对于正常的数据维护，管理人员可以通过档案管理系统本身来实现。数据维护包括权限设置、高级地址的集合运算、无用数据的删除、数据库的清理、数据备份与恢复等功能。</p><p>2．全面按照软件工程的要求来开发档案管理系统，做到严格管理、严格测试。每个工作阶段，都具备相应的经过严格审查的文档，为将来系统服务提供技术上的保证。</p><h2 id="2-3设计和实现的约束和限制"><a href="#2-3设计和实现的约束和限制" class="headerlink" title="2.3设计和实现的约束和限制"></a>2.3设计和实现的约束和限制</h2><p>a.开发环境：</p><p>该档案管理系统拟采用B&#x2F;S结构，前台用面向对象开发工具Java，服务器端拟采用企业级数据库SQL Server，应用服务器Tomcat。</p><p>b.运行环境：</p><p>客户端需要满足以下条件：</p><p>-Windows 7：需要1GHz或更快的32位或64位处理器，1GB（32位）或2GB（64位）的内存，16GB（32位）或20GB（64位）的硬盘空间，支持DirectX 9或更高版本的显卡。</p><p>-Windows 10：需要1GHz或更快的32位或64位处理器，1GB（32位）或2GB（64位）的内存，16GB（32位）或20GB（64位）的硬盘空间，支持DirectX 9或更高版本（包含WDDM 1.0驱动程序）的显卡。</p><p>-Windows 11：需要现代1GHz 64位双核处理器，4GB的内存，64GB的硬盘空间，9英寸1366x768分辨率的显示器，支持UEFI, Secure Boot &amp; TPM 2.0 compatible的固件，支持DirectX 12兼容显卡&#x2F; WWDM 2.x。</p><p>服务器端需要运行Oracle数据库和Tomcat应用服务器。</p><p>c.条件和限制：</p><ol><li><p>限制整个校园失物招领系统正常实施的主要因素是基础数据的准确性和完整性。同时该系统也是对用户新系统各种代码设计的真正的一次考验。</p></li><li><p>限制校园失物招领系统的另外一个因素是系统的维护性和完善性，因为档案管理系统的建立不可能一次全部解决问题，开发后期和使用初期的维护</p></li></ol><p>工程也是一个必须考虑的因素。这里的维护工作包括数据的维护，也有系统功能的维护，包括旧功能的删除和新功能的添加等。</p><h1 id="第3章-建模分析"><a href="#第3章-建模分析" class="headerlink" title="第3章 建模分析"></a>第3章 建模分析</h1><h2 id="3-1用例图"><a href="#3-1用例图" class="headerlink" title="3.1用例图"></a>3.1用例图</h2><p>校园失物招领系统的用例图分析可以帮助我们更清晰地了解系统的功能和流程，有助于系统的设计和开发。具体效果如下：</p><p>1.明确系统的功能：通过用例图分析，我们可以明确系统的主要功能和用例，例如发布失物信息、查询失物信息、审核失物信息、发布招领信息等，有助于我们更全面地考虑系统的设计和开发。</p><p>2.确定参与者和角色：用例图分析可以帮助我们确定系统的参与者和角色，例如学生、管理员和系统，有助于我们更清晰地划分系统的权限和职责。</p><p>3.优化系统流程：通过用例图分析，我们可以发现系统流程中可能存在的问题和瓶颈，有助于我们优化系统流程，提高系统的效率和用户体验。</p><p>4.提高系统的可靠性和安全性：用例图分析可以帮助我们识别系统可能存在的安全隐患和漏洞，有助于我们加强系统的安全性和可靠性。</p><h3 id="3-1-1用例分析"><a href="#3-1-1用例分析" class="headerlink" title="3.1.1用例分析"></a>3.1.1用例分析</h3><p>用例图中的参与者有学生、管理员和系统。</p><p>主要用例包括：</p><ol><li><p>学生&#x2F;教职工发布失物信息：学生&#x2F;教职工可以在系统中发布失物信息，并填写相关信息，如失物类型、时间、地点等。</p></li><li><p>学生&#x2F;教职工查询失物信息：学生&#x2F;教职工可以在系统中查询失物信息，并根据自己的需求进行筛选和排序。</p><p>3.管理员审核失物信息：管理员可以审核学生&#x2F;教职工发布的失物信息，确保信息的真实性和准确性。</p></li></ol><p>  4.管理员发布招领信息：管理员可以在系统中发布招领信息，并填写相关信息，如招领类型、时间、地点等。</p><p>  5.管理员查询失物信息：管理员可以在系统中查询失物信息，并根据自己的需求进行筛选和排序。</p><p>  6.系统自动匹配失物和招领信息：系统可以根据失物和招领信息的相似度自动匹配，并向相关学生&#x2F;教职工和管理  员发送匹配信息。</p><p> 7.学生&#x2F;教职工确认招领信息：学生&#x2F;教职工可以在系统中确认自己的失物已经被找到，并与管理员联系取回失物。</p><p> 8.管理员确认归还失物：管理员可以在系统中确认失物已经归还给学生&#x2F;教职工，并更新失物信息状态。</p><h3 id="3-1-2用例图"><a href="#3-1-2用例图" class="headerlink" title="3.1.2用例图"></a>3.1.2用例图</h3><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291848550.gif" alt="img"></p><center>图3-1-1校园失物招领系统用例图</center><h2 id="3-2顺序图"><a href="#3-2顺序图" class="headerlink" title="3.2顺序图"></a>3.2顺序图</h2><p>校园失物招领系统的顺序图分析可以帮助我们更具体地了解系统的交互过程和时序关系，有助于系统的设计和开发。具体效果如下：</p><ol><li><p>明确系统的交互过程：通过顺序图分析，我们可以明确系统中各个参与者之间的交互过程和信息流动，例如学生发布失物信息、管理员审核失物信息、系统自动匹配失物和招领信息等，有助于我们更全面地考虑系统的设计和开发。</p></li><li><p>确定系统的时序关系：顺序图分析可以帮助我们确定系统中各个交互过程的时序关系，例如学生发布失物信息后，管理员审核失物信息，系统自动匹配失物和招领信息等，有助于我们更清晰地了解系统的运行流程和时序关系。</p></li><li><p>优化系统交互流程：通过顺序图分析，我们可以发现系统交互过程中可能存在的问题和瓶颈，例如信息传递不及时、交互流程复杂等，有助于我们优化系统交互流程，提高系统的效率和用户体验。</p></li><li><p>提高系统的可靠性和安全性：顺序图分析可以帮助我们识别系统可能存在的安全隐患和漏洞，例如信息传递过程中的数据泄露、篡改等，有助于我们加强系统的安全性和可靠性。</p></li></ol><p>综上所述，校园失物招领系统的顺序图分析对于系统的设计和开发具有重要的意义，可以提高系统的效率、可靠性和安全性，提升用户体验。</p><h3 id="3-2-1顺序图分析"><a href="#3-2-1顺序图分析" class="headerlink" title="3.2.1顺序图分析"></a>3.2.1顺序图分析</h3><p>校园失物招领系统的顺序图分析如下：</p><ol><li><p>学生&#x2F;教职工发布失物信息的顺序图分析：</p><p>学生&#x2F;教职工 -&gt; 失物招领系统：请求发布失物信息</p><p>失物招领系统 -&gt; 学生&#x2F;教职工：返回发布失物信息表单</p><p>学生&#x2F;教职工 -&gt; 失物招领系统：提交失物信息表单</p><p>失物招领系统 -&gt; 学生&#x2F;教职工：返回发布成功信息</p></li><li><p>管理员审核失物信息的顺序图分析：</p><p>管理员 -&gt; 失物招领系统：请求查看待审核失物信息列表</p><p>失物招领系统 -&gt; 管理员：返回待审核失物信息列表</p><p>管理员 -&gt; 失物招领系统：选择某一失物信息进行审核</p><p>失物招领系统 -&gt; 管理员：返回该失物信息详情</p><p>管理员 -&gt; 失物招领系统：审核失物信息</p><p>失物招领系统 -&gt; 管理员：返回审核结果</p></li><li><p>学生&#x2F;教职工查询失物信息的顺序图分析：</p><p>学生&#x2F;教职工-&gt; 失物招领系统：请求查看失物信息列表</p><p>失物招领系统 -&gt; 学生&#x2F;教职工：返回失物信息列表</p><p>学生&#x2F;教职工 -&gt; 失物招领系统：选择某一失物信息进行查看</p><p>失物招领系统 -&gt; 学生&#x2F;教职工：返回该失物信息详情</p></li></ol><p>以上是校园失物招领系统的部分顺序图分析，它们展示了系统中不同参与者之间的交互过程和时序关系，有助于设计和开发人员更好地理解系统的功能和流程。</p><h3 id="3-2-2顺序图"><a href="#3-2-2顺序图" class="headerlink" title="3.2.2顺序图"></a>3.2.2顺序图</h3><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291850556.gif" alt="img"></p><center>图3-2-2校园失物招领系统登陆注册顺序图</center><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291851420.gif" alt="img"></p><center>图3-2-2校园失物招领系统学生发布失物信息顺序图</center><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291852909.gif" alt="img"></p><center>图3-2-2校园失物招领系统管理员审核失物信息顺序图</center><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291839933.gif" alt="img"></p><center>图3-2-2校园失物招领系统学生查询失物信息顺序图</center> <h2 id="3-3协作图"><a href="#3-3协作图" class="headerlink" title="3.3协作图"></a>3.3协作图</h2><p>校园失物招领系统的协作图分析可以帮助我们更好地理解系统中各个参与者之间的协作关系和交互模式。具体来说，协作图分析的效果包括以下几个方面：</p><p>1.明确参与者的角色和职责：协作图可以清晰地展现出系统中各个参与者的角色和职责，从而更好地理解系统的运行方式和交互模式。</p><p>2.捕捉参与者之间的交互过程：协作图可以帮助我们捕捉系统中各个参与者之间的交互过程，从而更好地理解系统的运行流程和时序关系。</p><p>3.识别潜在的问题和瓶颈：通过协作图，我们可以识别系统中可能存在的问题和瓶颈，从而及时进行优化和改进。</p><p>4.促进团队沟通和协作：协作图可以作为团队沟通和协作的工具，帮助团队成员更好地理解和协作开发系统。</p><p>总之，校园失物招领系统的协作图分析可以有效地提高系统开发的效率和质量，帮助我们更好地理解和使用该系统</p><h3 id="3-3-1协作图分析"><a href="#3-3-1协作图分析" class="headerlink" title="3.3.1协作图分析"></a>3.3.1协作图分析</h3><p>校园失物招领系统的协作图主要描述了系统中各个参与者之间的协作关系和信息交互过程。下面是该系统的协作图分析：</p><p>1.学生发布失物信息</p><p>学生是该系统的主要参与者之一，当学生在校园中发现有物品丢失时，可以通过系统发布失物信息。在协作图中，学生与系统之间的协作关系如下：</p><p>·    学生首先通过系统的用户界面进入“发布失物信息”的页面。</p><p>·    在该页面中，学生需要填写相关信息，如失物类型、失物描述、联系方式等。</p><p>·    当学生提交信息后，系统会自动将该信息存储在数据库中，并发送通知给管理员。</p><p>2.管理员审核失物信息</p><p>管理员是系统的另一个重要参与者，负责审核学生发布的失物信息。在协作图中，管理员与系统之间的协作关系如下：</p><p>·    管理员通过系统的用户界面进入“审核失物信息”的页面。</p><p>·    在该页面中，管理员可以查看学生提交的失物信息，并对其进行审核。</p><p>·    如果信息符合要求，管理员会将其标记为“已审核”，并将其发布到系统的失物信息列表中。</p><p>·    如果信息不符合要求，管理员会将其标记为“未通过审核”，并将其退回给学生。</p><p>3.用户查看失物信息</p><p>除了学生和管理员外，其他用户也可以通过系统查看失物信息。在协作图中，用户与系统之间的协作关系如下：</p><p>·    用户通过系统的用户界面进入“查看失物信息”的页面。</p><p>·    在该页面中，用户可以浏览所有已发布的失物信息，并可以根据自己的需求进行筛选和搜索。</p><p>·    当用户找到自己丢失的物品时，可以通过系统提供的联系方式与发布者取得联系。</p><h3 id="3-3-2协作图"><a href="#3-3-2协作图" class="headerlink" title="3.3.2协作图"></a>3.3.2协作图</h3><p>通过PowerDesigner设计的顺序图直接生成如下协作图：</p><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291852259.gif" alt="img"></p><center>图3-3-2校园失物招领系统登陆注册协作图</center><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291852510.gif" alt="img"></p><center>图3-3-2校园失物招领系统学生发布失物信息协作图</center><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291852750.gif" alt="img"></p><center>图3-3-2校园失物招领系统管理员审核失物信息协作图</center><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291853631.gif" alt="img"></p><center>图3-3-2校园失物招领系统学生查询失物信息协作图</center><h2 id="3-4状态图"><a href="#3-4状态图" class="headerlink" title="3.4状态图"></a>3.4状态图</h2><p>校园失物招领系统的状态图分析可以帮助设计和开发人员更好地理解系统的状态变化和对应的行为。通过状态图分析，可以得到以下效果：</p><p>1.明确系统的状态集合：状态图分析能够明确系统中可能存在的状态集合，例如失物信息待审核状态、失物信息已审核状态、失物信息已归还状态等。这有助于设计和开发人员更好地把握系统的状态变化和对应的行为。</p><p>2.描述状态之间的转换关系：状态图分析能够清晰地描述系统中状态之间的转换关系，例如失物信息待审核状态可以转换为失物信息已审核状态，失物信息已审核状态可以转换为失物信息已归还状态等。这有助于设计和开发人员更好地理解系统的状态变化和对应的行为。</p><p>3.确定状态转换的触发条件：状态图分析能够明确状态转换的触发条件，例如失物信息待审核状态可以转换为失物信息已审核状态，需要管理员审核通过。这有助于设计和开发人员更好地理解系统的行为逻辑和实现方式。</p><p>综上所述，校园失物招领系统的状态图分析能够帮助设计和开发人员更好地理解系统的状态变化和对应的行为，有助于系统的设计和开发工作</p><h3 id="3-4-1注册登录状态图"><a href="#3-4-1注册登录状态图" class="headerlink" title="3.4.1注册登录状态图"></a>3.4.1注册登录状态图</h3><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291840718.gif" alt="img"></p><center>图3-4-1校园失物招领系统注册登录状态图</center> <h3 id="3-4-2用户系统状态图"><a href="#3-4-2用户系统状态图" class="headerlink" title="3.4.2用户系统状态图"></a>3.4.2用户系统状态图</h3><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291959878.gif" alt="img"></p><center>图3-4-2校园失物招领系统用户状态图</center><h3 id="3-4-3管理员系统状态图"><a href="#3-4-3管理员系统状态图" class="headerlink" title="3.4.3管理员系统状态图"></a>3.4.3管理员系统状态图</h3><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291840389.gif" alt="img"></p><center>图3-4-3校园失物招领系统管理员状态图</center> <h2 id="3-5活动图"><a href="#3-5活动图" class="headerlink" title="3.5活动图"></a>3.5活动图</h2><p>当我们使用活动图对校园失物招领系统进行分析时，可以清晰地展现出系统中各个活动之间的关系和流程。通过活动图分析，我们可以更好地理解系统的功能和特点，提高系统的设计和开发效率。</p><p>具体来说，校园失物招领系统的活动图分析可以帮助我们：</p><p>1.理解系统的主要功能和用例：通过活动图，我们可以清晰地展现出系统中各个活动的功能和用途，从而更好地理解系统的主要功能和用例。</p><p>2.捕捉系统的流程和交互：活动图可以帮助我们捕捉系统中各个活动之间的流程和交互，从而更好地理解系统的运行方式和交互模式。</p><p>3.识别系统中的潜在问题：通过活动图，我们可以识别系统中可能存在的问题和瓶颈，从而及时进行优化和改进。</p><p>4.促进团队沟通和协作：活动图可以作为团队沟通和协作的工具，帮助团队成员更好地理解和协作开发系统</p><h3 id="3-5-1活动图分析"><a href="#3-5-1活动图分析" class="headerlink" title="3.5.1活动图分析"></a>3.5.1活动图分析</h3><p>校园失物招领系统的主要参与者包括学生&#x2F;教职工、管理员和招领者。系统的主要功能包括发布失物信息、查询失物信息、审核失物信息、发布招领信息等。下面是该系统的活动图分析：</p><ol><li>学生&#x2F;教职工发布失物信息活动</li></ol><p>学生&#x2F;教职工可以通过系统发布失物信息，该活动包括以下子活动：</p><ul><li>输入失物信息：学生输入失物的相关信息，包括失物名称、丢失地点、丢失时间等。</li><li>上传失物照片：学生&#x2F;教职工可以上传失物的照片，方便其他人辨认。</li><li>发布失物信息：学生&#x2F;教职工确认无误后，可以发布失物信息到系统中。</li></ul><p>2.管理员审核失物信息活动</p><p>管理员可以审核学生发布的失物信息，该活动包括以下子活动：</p><ul><li>查看待审核失物信息：管理员登录系统后，可以查看待审核的失物信息列表。</li><li>审核失物信息：管理员查看失物信息后，可以审核通过或驳回该失物信息。</li><li>发送通知：如果失物信息审核通过，管理员可以向学生&#x2F;教职工发送通知，告知审核结果。</li></ul><p>3.查询失物信息活动</p><p>用户可以通过系统查询失物信息，该活动包括以下子活动：</p><ul><li>输入查询条件：用户输入查询条件，包括失物名称、丢失地点、时间等。</li><li>查询失物信息：系统根据用户输入的查询条件，查询匹配的失物信息，并展示给用户。</li></ul><p>4.发布招领信息活动</p><p>招领者可以通过系统发布招领信息，该活动包括以下子活动：</p><ul><li>输入招领信息：招领者输入招领的失物信息，包括失物名称、招领地点、招领时间等。</li><li>上传招领照片：招领者可以上传招领的照片，方便失主辨认。</li><li>发布招领信息：招领者确认无误后，可以发布招领信息到系统中。</li></ul><h3 id="3-5-2活动图"><a href="#3-5-2活动图" class="headerlink" title="3.5.2活动图"></a>3.5.2活动图</h3><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291903244.jpg" alt="img"></p><center>图3-5-2校园失物招领系统活动图</center> <h1 id="第4章-数据库设计"><a href="#第4章-数据库设计" class="headerlink" title="第4章 数据库设计"></a>第4章 数据库设计</h1><h2 id="4-1数据库设计的概述"><a href="#4-1数据库设计的概述" class="headerlink" title="4.1数据库设计的概述"></a>4.1数据库设计的概述</h2><p>校园失物招领系统需要一个数据库来存储所有的物品信息、用户信息、管理员信息以及相关的操作记录等数据。在数据库设计过程中，需要遵循数据库设计的基本原则，包括数据完整性、数据一致性、数据安全性和数据可靠性等。</p><h2 id="4-2实体关系模型（ERM）的介绍"><a href="#4-2实体关系模型（ERM）的介绍" class="headerlink" title="4.2实体关系模型（ERM）的介绍"></a>4.2实体关系模型（ERM）的介绍</h2><p>实体关系模型（ERM）是一种用于描述实体、属性和关系的图形化工具，可以帮助我们更好地理解和设计数据库。在校园失物招领系统中，我们需要设计以下实体：</p><ol><li>物品实体：包括物品名称、物品类型、物品描述、拾取地点、拾取时间、拾取人等属性。</li><li>用户实体：包括用户ID、用户名、密码、联系电话、邮箱等属性。</li><li>管理员实体：包括管理员ID、管理员姓名、密码等属性。</li><li>操作记录实体：包括操作记录ID、操作时间、操作类型、操作人等属性。</li></ol><h2 id="4-3-ERM的符号和表示法"><a href="#4-3-ERM的符号和表示法" class="headerlink" title="4.3 ERM的符号和表示法"></a>4.3 ERM的符号和表示法</h2><p>在实体关系模型中，常用的符号和表示法包括实体框、属性、关系线、基数等。其中，实体框表示一个实体，属性表示实体的属性，关系线表示实体之间的关系，基数表示关系的数量。</p><h2 id="4-4-ERM的设计步骤"><a href="#4-4-ERM的设计步骤" class="headerlink" title="4.4 ERM的设计步骤"></a>4.4 ERM的设计步骤</h2><p>在设计实体关系模型时，可以遵循以下步骤：</p><ol><li>确定实体：确定需要存储的实体，包括物品、用户、管理员和操作记录等。</li><li>确定属性：确定每个实体的属性，包括物品名称、物品类型、物品描述、拾取地点、拾取时间、拾取人、用户ID、用户名、密码、联系电话、邮箱、管理员ID、管理员姓名、密码、操作记录ID、操作时间、操作类型、操作人等。</li><li>确定关系：确定实体之间的关系，包括用户和物品之间的关系、管理员和物品之间的关系、管理员和用户之间的关系、操作记录和物品之间的关系、操作记录和用户之间的关系等。</li><li>绘制ER图：根据实体、属性和关系，绘制ER图。</li></ol><h2 id="4-5-ERM的优化和规范化"><a href="#4-5-ERM的优化和规范化" class="headerlink" title="4.5 ERM的优化和规范化"></a>4.5 ERM的优化和规范化</h2><p>在设计实体关系模型时，需要进行优化和规范化，以确保数据的完整性、一致性和安全性。常用的优化和规范化方法包括：</p><ol><li>去除冗余数据：去除重复的数据，减少数据存储空间。</li><li>规范化：将数据分解成更小的表，以减少数据冗余和提高数据一致性。</li><li>设计数据约束：使用数据约束来限制数据的输入和修改，以确保数据的有效性和安全性。</li></ol><h2 id="4-6数据库管理系统（DBMS）的选择和安装"><a href="#4-6数据库管理系统（DBMS）的选择和安装" class="headerlink" title="4.6数据库管理系统（DBMS）的选择和安装"></a>4.6数据库管理系统（DBMS）的选择和安装</h2><p>在校园失物招领系统中，可以选择一种适合的数据库管理系统（DBMS），如MySQL、Oracle、SQL Server等，并进行安装和配置。</p><h2 id="4-7数据库的物理设计"><a href="#4-7数据库的物理设计" class="headerlink" title="4.7数据库的物理设计"></a>4.7数据库的物理设计</h2><p>在数据库的物理设计中，需要确定数据库的表结构、索引、存储空间等。在校园失物招领系统中，可以使用以下表结构：</p><ol><li>物品表：包括物品ID、物品名称、物品类型、物品描述、拾取地点、拾取时间、拾取人等字段。</li><li>用户表：包括用户ID、用户名、密码、联系电话、邮箱等字段。</li><li>管理员表：包括管理员ID、管理员姓名、密码等字段。</li><li>操作记录表：包括操作记录ID、操作时间、操作类型、操作人等字段。</li></ol><h2 id="4-8数据库表结构设计"><a href="#4-8数据库表结构设计" class="headerlink" title="4.8数据库表结构设计"></a>4.8数据库表结构设计</h2><p>根据分析校园失物招领系统应具备如下基本数据表：</p><ol><li>用户表（user）</li></ol><ul><li>用户ID（user_id）：主键，自增长</li><li>用户名（username）：唯一，不为空</li><li>密码（password）：不为空</li><li>姓名（name）：不为空</li><li>手机号码（phone）：唯一，不为空</li><li>电子邮件（email）：唯一，不为空</li><li>用户角色（role）：唯一，不为空</li><li>用户状态（status）：唯一，不为空</li><li>注册时间（register_time）：不为空</li><li>最后登录时间（last_login_time）：可以为空</li></ul><ol><li>物品表（item）</li></ol><ul><li>物品ID（item_id）：主键，自增长</li><li>物品名称（item_name）：不为空</li><li>物品描述（description）：可以为空</li><li>拾取时间（pick_up_time）：不为空</li><li>拾取地点（pick_up_location）：可以为空</li><li>是否归还（is_returned）：默认为0，表示未归还；1表示已归还</li><li>归还时间（return_time）：可以为空</li><li>归还地点（return_location）：可以为空</li><li>物品图片（item_image）：可以为空</li></ul><ol><li>失主表（owner）</li></ol><ul><li>失主ID（owner_id）：主键，自增长</li><li>失主姓名（owner_name）：不为空</li><li>失主电话（owner_phone）：不为空</li><li>失主电子邮件（owner_email）：可以为空</li></ul><ol><li>拾取者表（finder）</li></ol><ul><li>拾取者ID（finder_id）：主键，自增长</li><li>拾取者姓名（finder_name）：不为空</li><li>拾取者电话（finder_phone）：不为空</li><li>拾取者电子邮件（finder_email）：可以为空</li></ul><ol><li>类别表（category）</li></ol><ul><li>类别ID（category_id）：主键，自增长</li><li>类别名称（category_name）：不为空</li></ul><ol><li>物品-类别关联表（item_category）</li></ol><ul><li>物品ID（item_id）：外键，关联物品表</li><li>类别ID（category_id）：外键，关联类别表</li></ul><h3 id="4-8-1用户信息表"><a href="#4-8-1用户信息表" class="headerlink" title="4.8.1用户信息表"></a>4.8.1用户信息表</h3><p>用户信息表的表结构如表4-8-1所示。</p><center>表4-8-1用户信息表</center><table><thead><tr><th>表名</th><th>用户信息表 User</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>说明</td><td>记录系统用户的信息</td><td></td><td></td><td></td></tr><tr><td>字段名</td><td>数据类型</td><td>是否可为空</td><td>是否主键</td><td>说明</td></tr><tr><td>UserId</td><td>INT</td><td>N</td><td>Y</td><td>用户唯一标识符</td></tr><tr><td>UserName</td><td>VARCHAR(50)</td><td>N</td><td>N</td><td>用户名</td></tr><tr><td>Password</td><td>VARCHAR(50)</td><td>N</td><td>N</td><td>密码</td></tr><tr><td>RealName</td><td>VARCHAR(50)</td><td>N</td><td>N</td><td>姓名</td></tr><tr><td>Email</td><td>VARCHAR(100)</td><td>N</td><td>N</td><td>邮箱</td></tr><tr><td>Phone</td><td>VARCHAR(20)</td><td>N</td><td>N</td><td>电话</td></tr><tr><td>Role</td><td>INT</td><td>N</td><td>N</td><td>用户角色</td></tr><tr><td>Status</td><td>INT</td><td>N</td><td>N</td><td>账户状态</td></tr><tr><td>CreateTime</td><td>DATETIME</td><td>N</td><td>N</td><td>创建时间</td></tr><tr><td>UpdateTime</td><td>DATETIME</td><td>N</td><td>N</td><td>更新时间</td></tr></tbody></table><p>用户表（user）：该表用于存储用户的基本信息，UserId是用户的唯一标识符，采用自增长整数类型，作为表的主键；Username用作登录名，设置为非空和唯一，以确保每个用户名都是唯一的；Password保存密码的单向加密内容，并设置为非空；Role是用户角色，0表示普通用，1表示管理员，并设置为非空，缺省值为0。Status 是账户的状态标识，0表示未激活，1表示已激活，并设置为非空，缺省值为0。使用该表可以实现用户的基本信息管理，并区分用户角色以便进行权限控制。</p><h3 id="4-8-2物品表"><a href="#4-8-2物品表" class="headerlink" title="4.8.2物品表"></a>4.8.2物品表</h3><p>物品表的表结构如表4-8-2所示。</p><center>表4-8-2物品表</center><table><thead><tr><th>表名</th><th>物品表 Item</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>说明</td><td>记录系统物品的信息</td><td></td><td></td><td></td></tr><tr><td>字段名</td><td>数据类型</td><td>是否可为空</td><td>是否主键</td><td>说明</td></tr><tr><td>item_id</td><td>INT</td><td>N</td><td>Y</td><td>物品ID</td></tr><tr><td>item_name</td><td>VARCHAR(50)</td><td>N</td><td>N</td><td>物品名称</td></tr><tr><td>description</td><td>VARCHAR(50)</td><td>N</td><td>N</td><td>物品描述</td></tr><tr><td>pick_up_time</td><td>DATETIME</td><td>N</td><td>N</td><td>拾取时间</td></tr><tr><td>pick_up_location</td><td>VARCHAR(100)</td><td>Y</td><td>N</td><td>拾取地点</td></tr><tr><td>is_returned</td><td>BOOLEAN</td><td>N</td><td>N</td><td>是否归还</td></tr><tr><td>return_time</td><td>DATETIME</td><td>Y</td><td>N</td><td>归还时间</td></tr><tr><td>return_location</td><td>VARCHAR(100)</td><td>Y</td><td>N</td><td>归还地点</td></tr><tr><td>item_image</td><td>DATETIME</td><td>Y</td><td>N</td><td>物品图片</td></tr></tbody></table><p>物品表（item）：该表用于存储拾取的物品信息，包括物品ID、物品名称、物品描述、拾取时间、拾取地点、是否归还、归还时间、归还地点和物品图片等字段。物品ID（item_id）为主键，采用自增长整数类型，保证每个物品有唯一的ID号。物品名称（item_name）为非空字段，用于记录物品的名称。物品描述（description）可以为空，用于记录物品的详细描述。拾取时间（pick_up_time）不为空，用于记录物品的拾取时间。拾取地点（pick_up_location）可以为空，用于记录物品的拾取地点。是否归还（is_returned）为默认值为0的字段，表示物品未被归还。归还时间（return_time）和归还地点（return_location）均可以为空，用于记录物品的归还情况。物品图片（item_image）可以为空，用于记录物品的图片信息。</p><h3 id="4-8-3失主表"><a href="#4-8-3失主表" class="headerlink" title="4.8.3失主表"></a>4.8.3失主表</h3><p>失主表的表结构如表4-8-3所示。</p><center>表4-8-3失主表</center><table><thead><tr><th>表名</th><th>失主表 Ower</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>说明</td><td>记录系统失主的信息</td><td></td><td></td><td></td></tr><tr><td>字段名</td><td>数据类型</td><td>是否可为空</td><td>是否主键</td><td>说明</td></tr><tr><td>owner_id</td><td>INT</td><td>N</td><td>Y</td><td>失主ID</td></tr><tr><td>owner_name</td><td>VARCHAR(50)</td><td>N</td><td>N</td><td>失主姓名</td></tr><tr><td>owner_phone</td><td>VARCHAR(50)</td><td>N</td><td>N</td><td>失主电话</td></tr><tr><td>owner_email</td><td>VARCHAR(50)</td><td>Y</td><td>N</td><td>失主电子邮件</td></tr></tbody></table><p>失主表（owner）：该表用于记录失主的信息，包括失主ID、失主姓名、失主电话和失主电子邮件等字段。失主ID（owner_id）为主键，采用自增长整数类型，保证每个失主有唯一的ID号。失主姓名（owner_name）和失主电话（owner_phone）均为非空字段，用于记录失主的基本信息。失主电子邮件（owner_email）可以为空，用于记录失主的联系方式。</p><h3 id="4-8-4拾取者表"><a href="#4-8-4拾取者表" class="headerlink" title="4.8.4拾取者表"></a>4.8.4拾取者表</h3><p>拾取者表的表结构如表4-8-4所示。</p><center>表4-8-4拾取者表</center><table><thead><tr><th>表名</th><th>拾取者表 Finder</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>说明</td><td>记录系统拾取者的信息</td><td></td><td></td><td></td></tr><tr><td>字段名</td><td>数据类型</td><td>是否可为空</td><td>是否主键</td><td>说明</td></tr><tr><td>finder_id</td><td>INT</td><td>N</td><td>Y</td><td>拾取者ID</td></tr><tr><td>finder_name</td><td>VARCHAR(50)</td><td>N</td><td>N</td><td>拾取者姓名</td></tr><tr><td>finder_phone</td><td>VARCHAR(50)</td><td>N</td><td>N</td><td>拾取者电话</td></tr><tr><td>finder_email</td><td>VARCHAR(50)</td><td>Y</td><td>N</td><td>取者电子邮件</td></tr></tbody></table><p>拾取者表（finder）：该表用于记录拾取者的信息，包括拾取者ID、拾取者姓名、拾取者电话和拾取者电子邮件等字段。拾取者ID（finder_id）为主键，采用自增长整数类型，保证每个拾取者有唯一的ID号。拾取者姓名（finder_name）和拾取者电话（finder_phone）均为非空字段，用于记录拾取者的基本信息。拾取者电子邮件（finder_email）可以为空，用于记录拾取者的联系方式。</p><h3 id="4-8-5类别表"><a href="#4-8-5类别表" class="headerlink" title="4.8.5类别表"></a>4.8.5类别表</h3><p>类别表的表结构如表4-8-5所示。</p><center>表4-8-5类别表</center><table><thead><tr><th>表名</th><th>类别表 Category</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>说明</td><td>记录物品类别的信息</td><td></td><td></td><td></td></tr><tr><td>字段名</td><td>数据类型</td><td>是否为可空</td><td>是否主键</td><td>说明</td></tr><tr><td>category_id</td><td>INT</td><td>N</td><td>Y</td><td>类别ID</td></tr><tr><td>category_name</td><td>VARCHAR(50)</td><td>N</td><td>N</td><td>类别名称</td></tr></tbody></table><p>类别表（category）：该表用于存储物品的类别信息，包括类别ID和类别名称等字段。类别ID（category_id）为主键，采用自增长整数类型，保证每个类别有唯一的ID号。类别名称（category_name）为非空字段，用于记录类别的名称。</p><h3 id="4-8-6物品-类别关联表"><a href="#4-8-6物品-类别关联表" class="headerlink" title="4.8.6物品-类别关联表"></a>4.8.6物品-类别关联表</h3><p>物品-类别关联表的表结构如表4-8-6所示。</p><center>表4-8-6物品-类别关联表</center><table><thead><tr><th>表名</th><th>物品-类别关联表item_category</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>说明</td><td>记录系统物品-类别对应关系的信息</td><td></td><td></td><td></td></tr><tr><td>字段名</td><td>数据类型</td><td>是否可为空</td><td>是否主键</td><td>说明</td></tr><tr><td>item_id</td><td>INT</td><td>N</td><td>Y</td><td>物品ID</td></tr><tr><td>category_id</td><td>VARCHAR(50)</td><td>N</td><td>N</td><td>类别ID</td></tr></tbody></table><p>物品-类别关联表（item_category）：该表用于记录物品和类别之间的关联关系，包括物品ID和类别ID等字段。物品ID（item_id）为外键，关联物品表，用于记录物品所属的类别。类别ID（category_id）为外键，关联类别表，用于记录物品所属的类别。</p><h2 id="4-9-数据库的安全性和完整性"><a href="#4-9-数据库的安全性和完整性" class="headerlink" title="4.9 数据库的安全性和完整性"></a>4.9 数据库的安全性和完整性</h2><p>在数据库的安全性和完整性方面，需要采取以下措施：</p><ol><li>数据库访问控制：限制非授权用户的访问权限。</li><li>数据库备份和恢复：定期备份数据库，以防止数据丢失。</li><li>数据库加密：对敏感数据进行加密，以保护数据安全。</li><li>数据库完整性：使用数据约束和触发器等方法，确保数据的完整性和一致性。</li></ol><h2 id="4-10-数据库的备份和恢复"><a href="#4-10-数据库的备份和恢复" class="headerlink" title="4.10 数据库的备份和恢复"></a>4.10 数据库的备份和恢复</h2><p>在数据库备份和恢复方面，可以采取以下措施：</p><ol><li>定期备份数据库：定期备份数据库，以防止数据丢失。</li><li>定期检查备份：定期检查备份文件，确保备份文件的完整性和可用性。</li><li>数据库恢复：在数据丢失或损坏的情况下，使用备份文件进行数据库恢复。</li></ol><h2 id="4-11-数据库的性能优化"><a href="#4-11-数据库的性能优化" class="headerlink" title="4.11 数据库的性能优化"></a>4.11 数据库的性能优化</h2><p>在数据库的性能优化方面，可以采取以下措施：</p><ol><li>索引优化：使用索引来加快数据检索的速度。</li><li>查询优化：优化查询语句，减少查询时间。</li><li>数据库缓存：使用数据库缓存来提高数据访问速度。</li></ol><h2 id="4-12-数据库的维护和管理"><a href="#4-12-数据库的维护和管理" class="headerlink" title="4.12 数据库的维护和管理"></a>4.12 数据库的维护和管理</h2><p>在数据库的维护和管理方面，需要进行以下工作：</p><ol><li>定期清理数据库：删除不需要的数据，以减少数据存储空间。</li><li>定期更新数据库：更新数据库软件和补丁，以确保数据库的安全性和稳定性。</li><li>监控数据库性能：监控数据库的性能指标，及时发现和解决问题。</li></ol><h2 id="4-13-数据库的扩展和升级"><a href="#4-13-数据库的扩展和升级" class="headerlink" title="4.13 数据库的扩展和升级"></a>4.13 数据库的扩展和升级</h2><p>在数据库的扩展和升级方面，可以采取以下措施：</p><ol><li>数据库分区：将数据库分成多个分区，以提高数据访问速度。</li><li>数据库复制：将数据库复制到多个服务器上，以提高数据可用性和容错性。</li><li>数据库升级：在需要升级数据库软件或升级数据结构时，进行数据库升级。</li></ol><h2 id="4-14-数据库的应用开发和集成"><a href="#4-14-数据库的应用开发和集成" class="headerlink" title="4.14 数据库的应用开发和集成"></a>4.14 数据库的应用开发和集成</h2><p>在数据库的应用开发和集成方面，需要进行以下工作：</p><ol><li>数据库编程：使用数据库编程语言，如SQL、PL&#x2F;SQL等，进行数据库应用开发。</li><li>数据库API：使用数据库API，如JDBC、ODBC等，进行数据库应用集成。</li><li>数据库连接池：使用数据库连接池，以提高数据库访问速度和效率。</li></ol><h2 id="4-15数据库的文档和测试"><a href="#4-15数据库的文档和测试" class="headerlink" title="4.15数据库的文档和测试"></a>4.15数据库的文档和测试</h2><p>在数据库的文档和测试方面，需要进行以下工作：</p><ol><li>数据库文档：编写数据库文档，包括数据库设计、表结构、索引、存储空间等。</li><li>数据库测试：进行数据库测试，包括功能测试、性能测试、安全测试等，以确保数据库的质量和可靠性。</li></ol><h1 id="查重报告"><a href="#查重报告" class="headerlink" title="查重报告"></a>查重报告</h1><p><img src="https://gcore.jsdelivr.net/gh/ChengRui79/ImageHost@main/img/202305291900909.gif" alt="img"></p><center>Paperpass查重附图</center><h1 id="结-论"><a href="#结-论" class="headerlink" title="结 论"></a>结 论</h1><p>校园失物招领系统是一个非常实用的应用软件，可以帮助学生和教职工方便地管理和寻找失物和拾遗。本文主要对校园失物招领系统进行了软件建模和分析，包括需求分析、建模分析和数据库设计等方面的内容。</p><p>在需求分析方面，我们详细地分析了系统的功能需求和非功能需求，包括系统结构、具体功能需求、性能、安全性、可用性和可维护性等方面。通过需求分析，我们可以清晰地了解系统的功能和性能要求，为后续的建模分析和数据库设计提供了基础。</p><p>在建模分析方面，我们采用了多种建模方法，包括用例图、顺序图、协作图、状态图和活动图等。通过建模分析，我们可以清晰地了解系统的各个模块之间的关系和流程，为后续的数据库设计提供了指导。</p><p>在数据库设计方面，我们采用了实体关系模型（ERM）的设计方法，详细地设计了用户表、物品表、失主表、拾取者表、类别表和物品-类别关联表等表格的字段和关系。通过数据库设计，我们可以完整地描述系统的数据结构和操作，为后续的系统实现和应用提供了基础。</p><p>总的来说，通过本文的软件建模和分析，我们可以清晰地了解校园失物招领系统的各个方面，包括需求分析、建模分析和数据库设计等方面的内容。这些分析和设计为后续的系统实现和应用提供了基础，也为类似应用软件的开发提供了参考和借鉴。</p><h1 id="参-考-文-献"><a href="#参-考-文-献" class="headerlink" title="参 考 文 献"></a>参 考 文 献</h1><ol><li><p>钱若芸，任雨杰。基于微信公众平台的失物招领系统设计[J]. 电脑知识与技术，2017(13)：361-362。</p></li><li><p>高校失物招领管理系统的研究与分析[J]. 科技广场，2015(11)：45-46。</p></li><li><p>刘婷婷。基于Java的校园失物招领系统设计与实现[D]. 河南科技大学，2019</p></li><li><p>“一物寻一物”——用于失物招领的图像匹配功能的实现[J]. 电子制作，2021(012)。</p></li><li><p>陈晓红, 刘晓娟. 基于Web的校园失物招领系统设计与实现[J]. 计算机与现代化, 2019(11): 161-164.</p></li><li><p>王晓峰, 李晓峰. 基于Java EE的校园失物招领系统设计与实现[J]. 计算机工程与应用, 2018, 54(17): 144-149.</p></li><li><p>郭志强, 张鹏. 基于SSM框架的校园失物招领系统设计与实现[J]. 计算机编程技巧与维护, 2019(12): 72-75.</p></li><li><p>赵晨阳, 李娜. 基于Vue.js和Spring Boot的校园失物招领系统设计与实现[J]. 计算机应用与软件, 2020, 37(10): 1-5.</p></li><li><p>王回甘. 校园失物招领系统 软件工程导论[N&#x2F;OL]. 博客园: <a href="https://www.cnblogs.com/WScoconut/p/16063983.html">https://www.cnblogs.com/WScoconut/p/16063983.html</a></p></li><li><p>asdJJkk. [内附完整源码和文档] 基于JAVA EE的失物招领系统[N&#x2F;OL]. 知乎: <a href="https://zhuanlan.zhihu.com/p/162905012">https://zhuanlan.zhihu.com/p/162905012</a>.</p></li><li><p>卓怡工作室. 【计算机毕业设计】147校园失物招领系统[N&#x2F;OL]. CSDN博客: <a href="https://blog.csdn.net/licongzhuo/article/details/130427212">https://blog.csdn.net/licongzhuo/article/details/130427212</a>.</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
      <category>UML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>UML</tag>
      
      <tag>校园失物招领系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AA</title>
    <link href="/2023/04/03/AA/"/>
    <url>/2023/04/03/AA/</url>
    
    <content type="html"><![CDATA[<h1 id="第1章-绪论"><a href="#第1章-绪论" class="headerlink" title="第1章 绪论"></a>第1章 绪论</h1><h2 id="1-1-引言"><a href="#1-1-引言" class="headerlink" title="1.1  引言"></a>1.1  引言</h2><p>随着经济快速发展，人民的精神生活日益丰富，对健康的意识也提高了，因此参加活动的意愿十分强烈。在此基础上，我们小组选择了拼团系统的制作和学习，借此锻炼我们的实际问题分析解决和团队协作能力。</p><h2 id="1-2-研究内容"><a href="#1-2-研究内容" class="headerlink" title="1.2  研究内容"></a>1.2  研究内容</h2><p>拼团–团队活动AA 制</p><h3 id="1-2-1-组团"><a href="#1-2-1-组团" class="headerlink" title="1.2.1 组团"></a>1.2.1 组团</h3><p>  （1）团长创建(组建) 团队并发布活动消息（时间、起点、主要内容等）；</p><p>（2）加入团员（团员申请参加活动）；</p><p>（3）（团长）确定团队成立，并通知参与人；</p><p>（4）确定团队活动的起始时间，交纳团费（可多次交纳）；</p><h3 id="1-2-2-团队活动"><a href="#1-2-2-团队活动" class="headerlink" title="1.2.2 团队活动"></a>1.2.2 团队活动</h3><p>（1）每次团队活动记录参加人员，活动费用参与人员均摊；</p><p>（2）活动过程中根据需要追加AA 费用，也支持某团员独立追加费用；</p><p>（3）活动结束，计算团队成员分推费用；</p><p>（4）支持输出帐单，并导出到EXCEL 表格中。</p><p>（5）活动结束，生成活动报告。</p><h3 id="1-2-3-开发工具"><a href="#1-2-3-开发工具" class="headerlink" title="1.2.3 开发工具"></a>1.2.3 开发工具</h3><p>（1）后端采用MVC设计模式，使用SpringBoot+MyBatis plus框架，数据库采用MySQL；</p><p>（2）前端采用Bootstrap，视图界面美观；</p><p>（3）使用Docker进行部署；</p><p>（4）系统运行以微服务的方式运行，微服务框架采用Spring Cloud     </p><p>（5）系统项目源码通过git进行管理；</p><h1 id="第2章-需求分析"><a href="#第2章-需求分析" class="headerlink" title="第2章 需求分析"></a>第2章 需求分析</h1><h2 id="2-1-业务流程分析"><a href="#2-1-业务流程分析" class="headerlink" title="2.1      业务流程分析"></a>2.1      业务流程分析</h2><h3 id="2-1-1-基于实验需求的业务分析"><a href="#2-1-1-基于实验需求的业务分析" class="headerlink" title="2.1.1  基于实验需求的业务分析"></a>2.1.1  基于实验需求的业务分析</h3><p>⑴ 组团</p><p>团长创建新团，编辑团队信息，需要一个创建活动页面，提供信息填写与提交。团员申请参加活动需要在首页活动列表增加一个参加活动按钮，触发后添加团员信息到参团记录表。</p><p>⑵ 团队活动</p><p>在导航栏加入参团记录，实现每次团队活动记录参加人员，在团长的管理活动页面添加活动起始按钮以及账单生成按钮，实现AA制。成员可以在管理活动页面（仅参加的活动）独立追加团费，追加费用计入总费用和AA计算，团长结束活动后，打印生成活动报告和账单明细。</p><h3 id="2-1-2-业务流程图及其说明"><a href="#2-1-2-业务流程图及其说明" class="headerlink" title="2.1.2  业务流程图及其说明"></a>2.1.2  业务流程图及其说明</h3><p><img src="/img/AA/clip_image002.png" alt="系统结构图"></p><p>流程说明：首先以游客身份进入系统，可预览团队信息，当用户登录（注册，登录）账户后，可进入拼团系统首页，普通团员有3种操作，分别是：①加入团队：可以看到已创建的团队活动，可以选择加入团队；②创建团队：自己成为团长，输入团队信息创建，获得管理活动权限；③管理团队：创建团队自动成为团长，管理团队只能管理自己创建的团队，获得修改、结束活动，打印活动报告和账单权限；④缴纳团费：可以为自己缴费也可以追加团费，缴费后可以通过AA制导出活动账单到Excel。</p><h2 id="2-2-系统用例分析"><a href="#2-2-系统用例分析" class="headerlink" title="2.2      系统用例分析"></a>2.2      系统用例分析</h2><p><img src="/img/AA/clip_image004.png" alt="系统用例图"></p><h1 id="第3章-概要设计"><a href="#第3章-概要设计" class="headerlink" title="第3章 概要设计"></a>第3章 概要设计</h1><h2 id="3-1-总体架构"><a href="#3-1-总体架构" class="headerlink" title="3.1    总体架构"></a>3.1    总体架构</h2><h3 id="3-1-1-总体架构图"><a href="#3-1-1-总体架构图" class="headerlink" title="3.1.1 总体架构图"></a>3.1.1 总体架构图</h3><p><img src="/img/AA/clip_image006.jpg" alt="系统总体架构图"></p><h2 id="3-2-项目结构"><a href="#3-2-项目结构" class="headerlink" title="3.2      项目结构"></a>3.2      项目结构</h2><h3 id="3-2-1-项目结构图"><a href="#3-2-1-项目结构图" class="headerlink" title="3.2.1    项目结构图"></a>3.2.1    项目结构图</h3><p><img src="/img/AA/clip_image008.png" alt="项目结构图"></p><p>src&#x2F;main&#x2F;java结构说明</p><p>common 存放公共的常量类，自定义异常</p><p>config 存放配置类，相当于xml配置文件</p><p>controller 存控制器，负责接收http请求，转发请求，封装业务数据</p><p>entity存实体类, 用lombok插件生成set get方法</p><p>mapper 数据接口访问层DAO文件</p><p>service 存业务接口service&#x2F;impl下存放实现类</p><p>utils存工具类</p><p>Application.java是系统的启动类</p><p>src&#x2F;main&#x2F;resources下存放配置文件其中</p><p>application.yml是主要配置文件</p><p>webapp&#x2F;page存放jsp页面</p><p>webapp&#x2F;static是存放js ,css ,图片等静态资源的</p><h3 id="3-2-2-项目实现功能"><a href="#3-2-2-项目实现功能" class="headerlink" title="3.2.2    项目实现功能"></a>3.2.2    项目实现功能</h3><p>用户注册登录：</p><p> login.jsp是登陆页面，用户输入用户名密码进行登录，没有账户的用户点击注册跳转到register.jsp，进行注册，注册成功会自动跳转到登录页面。</p><p>加入团队：</p><p> team&#x2F;list.jsp里布置了参加活动按钮，点击即可参与。</p><p>创建团队：</p><p> 选择导航栏的创建活动，输入相关信息提交即可创建。</p><p>管理活动：</p><p> manage.jsp页面提供修改活动、确定活动、结束活动、生成报告、帐单列表、追加费用按钮实现相应功能。</p><p>参团列表：</p><p> joinRecord&#x2F;list.jsp页面展示参团人员记录。</p><p>AA制团费：</p><p> bill.list页面展示账单明细并提供导出excel按钮。</p><p>账单导出excel：</p><p> BillController进行跳转实现本地下载。</p><h3 id="3-2-3-总体流程"><a href="#3-2-3-总体流程" class="headerlink" title="3.2.3 总体流程"></a>3.2.3 总体流程</h3><p> 新用户注册后进行登录，老用户输入用户名&#x2F;手机号进行登录，进入系统界面后可以选择团队加入，也可创建新的团队，成为新团的团长，拥有修改团队信息、生成活动报告、账单等权限，所有团员都可通过参团记录查看各人的拼团情况。活动刚成立处于新建状态，由团长决定活动开始时间和结束时间，活动结束后可生成活动账单，查看AA费用，团员进行缴纳，并支持团长和团员独立追加费用，活动结束后可退出系统。</p><h1 id="第4章-数据库设计"><a href="#第4章-数据库设计" class="headerlink" title="第4章 数据库设计"></a>第4章 数据库设计</h1><h2 id="4-1-数据库选型"><a href="#4-1-数据库选型" class="headerlink" title="4.1 　数据库选型"></a>4.1 　数据库选型</h2><h3 id="4-1-1-几种数据库比较"><a href="#4-1-1-几种数据库比较" class="headerlink" title="4.1.1 　几种数据库比较"></a>4.1.1 　几种数据库比较</h3><p>随着数据库管理系统技术的成熟，目前比较流行的数据库有MySQL、SQL Server、Oracle、Sybase等，而我们本次设计所使用的MySQL，它是最受欢迎的开源SQL数据库管理系统。MySQL是一个快速的、多线程、多用户和健壮的SQL数据库服务器。MySQL服务器支持关键人物、重负载生产系统的使用，也可以将它嵌入到一个大配置的软件中去。而与其他的数据库相比较，MySQL有如下的一些优点：</p><p>1）MySQL是一个关系数据库管理系统</p><p>2）MySQL是开源的</p><p>3）MySQL服务器是一个快速的、可靠的和易于使用的数据库服务器</p><p>4）MySQL服务器工作在客户&#x2F;服务器或嵌入系统中</p><p>5）有大量的MySQL软件可以使用</p><h3 id="4-1-2-MySQL数据库"><a href="#4-1-2-MySQL数据库" class="headerlink" title="4.1.2 　MySQL数据库"></a>4.1.2 　MySQL数据库</h3><p>  MySQL是一个完全免费的数据库系统，是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于Oracle公司。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p><h3 id="4-1-3-数据库安全"><a href="#4-1-3-数据库安全" class="headerlink" title="4.1.3 数据库安全"></a>4.1.3 数据库安全</h3><p> 我们采用MD5实现数据库用户表密码的单项加密，先将原来的数据变成一个16个字节的数组，然后将这个长度为16的字节数组用16进制表示，这个16进制的字符串就是加密最后的结果。</p><p><img src="/img/AA/clip_image010.png" alt="MD5加密"></p><h2 id="4-2-数据库设计"><a href="#4-2-数据库设计" class="headerlink" title="4.2    数据库设计"></a>4.2    数据库设计</h2><p><img src="/img/AA/clip_image012.jpg" alt="数据库ER图"></p><p>表4.1 用户表</p><table><thead><tr><th>表名</th><th>用户表 user</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>说明</td><td>记录用户的身份信息以及对系统的相关设置</td><td></td><td></td><td></td></tr><tr><td>字段名</td><td>数据类型</td><td>是否为空</td><td>是否为主键</td><td>说明</td></tr><tr><td>id</td><td>INTEGER</td><td>N</td><td>Y</td><td>用户唯一标志号</td></tr><tr><td>username</td><td>VARCHAR(50)</td><td>Y</td><td>N</td><td>用户昵称</td></tr><tr><td>password</td><td>VARCHAR(255)</td><td>Y</td><td>N</td><td>用户密码</td></tr><tr><td>real_name</td><td>VARCHAR(50)</td><td>Y</td><td>N</td><td>用户真实姓名</td></tr><tr><td>phone</td><td>VARCHAR(255)</td><td>Y</td><td>N</td><td>用户的电话号码</td></tr><tr><td>role</td><td>INTEGER</td><td>Y</td><td>N</td><td>用户是否为管理员</td></tr></tbody></table><p>表4.2 团队表</p><table><thead><tr><th>表名</th><th>团队表team</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>说明</td><td>所选团队信息</td><td></td><td></td><td></td></tr><tr><td>字段名</td><td>数据类型</td><td>是否为空</td><td>是否为主键</td><td>说明</td></tr><tr><td>id</td><td>INTEGER</td><td>N</td><td>Y</td><td>团队</td></tr><tr><td>team_name</td><td>VARCHAR(50)</td><td>Y</td><td>N</td><td>团队名称</td></tr><tr><td>team_leader</td><td>INTEGER</td><td>Y</td><td>N</td><td>团长的id</td></tr><tr><td>start_time</td><td>VARCHAR(50)</td><td>Y</td><td>N</td><td>开始时间</td></tr><tr><td>end_time</td><td>VARCHAR(50)</td><td>Y</td><td>N</td><td>结束时间</td></tr><tr><td>state</td><td>INTEGER</td><td>Y</td><td>N</td><td>团队建立状态</td></tr><tr><td>cost</td><td>DECIMAL（10，2）</td><td>Y</td><td>N</td><td>团队总消费</td></tr></tbody></table><p>表4.3 参团记录表</p><table><thead><tr><th>表名</th><th>用户表 join_record</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>说明</td><td>参团人员记录</td><td></td><td></td><td></td></tr><tr><td>字段名</td><td>数据类型</td><td>是否为空</td><td>是否为主键</td><td>说明</td></tr><tr><td>id</td><td>INTEGER</td><td>N</td><td>Y</td><td>用户唯一标志号</td></tr><tr><td>team_id</td><td>INTEGER</td><td>Y</td><td>N</td><td>团队序号</td></tr><tr><td>user_id</td><td>INTEGER</td><td>Y</td><td>N</td><td>用户序号</td></tr></tbody></table><p>表4.4 账单表</p><table><thead><tr><th>表名</th><th>bill</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>说明</td><td>账单</td><td></td><td></td><td></td></tr><tr><td>字段名</td><td>数据类型</td><td>是否为空</td><td>是否为主键</td><td>说明</td></tr><tr><td>id</td><td>INTEGER</td><td>N</td><td>Y</td><td>用户唯一标志号</td></tr><tr><td>user_id</td><td>INTEGER</td><td>Y</td><td>N</td><td>用户昵称</td></tr><tr><td>team_id</td><td>INTEGER</td><td>Y</td><td>N</td><td>团队名称</td></tr><tr><td>cost</td><td>DECIMAL(10,2)</td><td>Y</td><td>N</td><td>费用</td></tr><tr><td>remark</td><td>VARCHAR(255)</td><td>Y</td><td>N</td><td>备注</td></tr></tbody></table><h1 id="第5章-详细设计"><a href="#第5章-详细设计" class="headerlink" title="第5章 详细设计"></a>第5章 详细设计</h1><h2 id="5-1-数据访问层设计"><a href="#5-1-数据访问层设计" class="headerlink" title="5.1 数据访问层设计"></a>5.1 数据访问层设计</h2><p>表的操作（CURD）:</p><p>项目利用MybatisPlus简化开发，启动即会注入基本CURD，直接面向对象操作，MP内置通用mapper、通用service，每个service都继承IService，在IService里定义了各种方法，帮助我们用少量配置实现大部分CURD操作。</p><p>我们只需要创建TeamMapper、UserMapper等接口，并继承BaseMapper接口，不需要创建SQL映射文件。</p><h2 id="5-2-表示层设计"><a href="#5-2-表示层设计" class="headerlink" title="5.2 表示层设计"></a>5.2 表示层设计</h2><p>（1）登录注册页面设计</p><p>创建一个login的jsp页面，在里面添加一个form表单，在里面设计用户名、密码输入文本框，同时也可以采用手机号登录，以及登录跳转按钮，再添加一个注册用户信息的模态框。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin&lt;form style=&quot;</span><span class="hljs-attr">margin-top:</span> <span class="hljs-attr">-30px</span>;&quot;&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">center</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control uname&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;用户名&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>/&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control pword m-b&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>/&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;登录&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary btn-block&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;login()&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">input</span>&gt;</span><br>                   <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/signup&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top: -30px;&quot;</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">center</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;phone&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control uname&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;手机号&quot;</span> /&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;password2&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control pword m-b&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span> /&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;登录&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary btn-block&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;loginByPhone()&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">input</span>&gt;</span><br>                   <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/signup&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>（2）创建活动页面设计</p><p>在页面展示的中间有一个创建活动的按钮，点击则跳转到创建活动的信息输入页面，通过输入活动名称，费用，开始时间，结束时间，点击提交按钮则创建成功。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;input <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attribute">placeholder</span>=<span class="hljs-string">&quot;活动名称&quot;</span> <span class="hljs-attribute">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;teamName&quot;</span> <span class="hljs-attribute">id</span>=<span class="hljs-string">&quot;teamName&quot;</span> <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;data.teamName&#125;</span>&quot;</span>&gt;<br>&lt;input <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attribute">placeholder</span>=<span class="hljs-string">&quot;费用&quot;</span> <span class="hljs-attribute">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;cost&quot;</span> <span class="hljs-attribute">id</span>=<span class="hljs-string">&quot;cost&quot;</span> <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;data.cost&#125;</span>&quot;</span>&gt;<br>&lt;input <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attribute">placeholder</span>=<span class="hljs-string">&quot;开始时间&quot;</span> <span class="hljs-attribute">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;startTime&quot;</span> <span class="hljs-attribute">id</span>=<span class="hljs-string">&quot;startTime&quot;</span> <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;data.startTime&#125;</span>&quot;</span>&gt;<br>&lt;input <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attribute">placeholder</span>=<span class="hljs-string">&quot;结束时间&quot;</span> <span class="hljs-attribute">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;endTime&quot;</span> <span class="hljs-attribute">id</span>=<span class="hljs-string">&quot;endTime&quot;</span> <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;data.endTime&#125;</span>&quot;</span>&gt;<br>&lt;button <span class="hljs-attribute">class</span>=<span class="hljs-string">&quot;btn btn btn-sm btn-primary&quot;</span> <span class="hljs-attribute">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;提交&lt;/button&gt;<br></code></pre></td></tr></table></figure><p>（3）参团记录页面设计</p><p>   在页面展示的右边有一个参团记录的按钮，点击则跳转到参团记录页面，该页面可以看见活动ID，活动名称，以及团员姓名，同时表格的右上方也有刷新按钮，可以实时查看参团记录。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;table-responsive&quot;</span>&gt;<br>           &lt;table <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;table&quot;</span>&gt;<br>           &lt;/table&gt;<br>  &lt;/<span class="hljs-keyword">div</span>&gt;<br></code></pre></td></tr></table></figure><p>（4）活动列表页面设计</p><p>   在页面展示的左边有一个活动列表的按钮，点击则跳转到活动列表页面，该页面可以查看活动ID，活动名称，费用，开始时间，结束时间以及状态，同时也可以进行参加活动这一操作，表格的右上方也有着刷新按钮，确保活动的最新情况。</p><p>   同（3），自适应表格。</p><p>（5）管理活动页面设计</p><p>  该页面在活动列表的操作基础上新增了修改活动，确定成立，结束活动，生成报告，账单列表，追加费用等功能，同时也包含着刷新按钮，以此确保活动的最新情况。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">events: &#123;               // 注册按钮组事件<br>    <span class="hljs-string">&#x27;click #edit&#x27;</span>: <span class="hljs-keyword">function</span> (event, <span class="hljs-keyword">value</span>, <span class="hljs-keyword">row</span>, <span class="hljs-keyword">index</span>) &#123;<br>        edit(<span class="hljs-keyword">row</span>.id)<br>    &#125;,<br>    <span class="hljs-string">&#x27;click #setup&#x27;</span>: <span class="hljs-keyword">function</span> (event, <span class="hljs-keyword">value</span>, <span class="hljs-keyword">row</span>, <span class="hljs-keyword">index</span>) &#123;<br>        updateState(<span class="hljs-keyword">row</span>.id, <span class="hljs-number">2</span>)<br>    &#125;,<br>    <span class="hljs-string">&#x27;click #finish&#x27;</span>: <span class="hljs-keyword">function</span> (event, <span class="hljs-keyword">value</span>, <span class="hljs-keyword">row</span>, <span class="hljs-keyword">index</span>) &#123;<br>        updateState(<span class="hljs-keyword">row</span>.id, <span class="hljs-number">3</span>)<br>    &#125;,<br>    <span class="hljs-string">&#x27;click #appendCost&#x27;</span>: <span class="hljs-keyword">function</span> (event, <span class="hljs-keyword">value</span>, <span class="hljs-keyword">row</span>, <span class="hljs-keyword">index</span>) &#123;<br>        appendCost(<span class="hljs-keyword">row</span>.id)<br>    &#125;,<br>    <span class="hljs-string">&#x27;click #genReport&#x27;</span>: <span class="hljs-keyword">function</span> (event, <span class="hljs-keyword">value</span>, <span class="hljs-keyword">row</span>, <span class="hljs-keyword">index</span>) &#123;<br>        genReport(<span class="hljs-keyword">row</span>.id)<br>    &#125;,<br>    <span class="hljs-string">&#x27;click #billList&#x27;</span>: <span class="hljs-keyword">function</span> (event, <span class="hljs-keyword">value</span>, <span class="hljs-keyword">row</span>, <span class="hljs-keyword">index</span>) &#123;<br>        billList(<span class="hljs-keyword">row</span>.id)<br>    &#125;,<br>    <span class="hljs-string">&#x27;click #excel&#x27;</span>: <span class="hljs-keyword">function</span> (event, <span class="hljs-keyword">value</span>, <span class="hljs-keyword">row</span>, <span class="hljs-keyword">index</span>) &#123;<br>        excel(<span class="hljs-keyword">row</span>.id)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="5-3-业务逻辑层设计"><a href="#5-3-业务逻辑层设计" class="headerlink" title="5.3 业务逻辑层设计"></a>5.3 业务逻辑层设计</h2><p> （1）用户登录</p><p>login.jsp发送请求通过@PostMapping(“&#x2F;login”)找到CommonController的login方法，用mybatisplus提供的方法查询用户表，把查询结果放到httpSession里，方便页面使用。</p><p> （2）加入团队</p><p>  用户登陆进入系统后，点击“参加活动”按钮，该成员会自动加入到团队中，并将用户的信息保存到join_record表中,在JoinRecordController中添加注解，把用户提交的请求通过对url的匹配，分配给List，进行处理并返回结果。</p><p> （3）创建团队</p><p>  用户点击创建团队跳转到teamAdd.jsp，输入新团队相关信息进行创建。</p><p> （4）管理团队</p><p>  用户只可以对自己创建的团队进行信息修改和数据查看，TeamController中根据函数需要的url返回操作成功的消息或者无权操作的提示或者访问对应jsp文件。</p><p> （5）AA缴费</p><p>  请求通过 @PostMapping(“team&#x2F;updateState”)找到TeamController的updateState方法，业务是判断把团队状态修改为结束时，用总团费除以总人数，得到AA制每人的团费，存到账单表。</p><p> （6）账单导出</p><p>在进入帐单列表界面后，点击导出账单，在BillController中进行跳转，实现本地账单下载。请求通过@GetMapping(“&#x2F;bill&#x2F;exportExcel”)找到BillController的exportExcel方法，先查出该团队的账单list，然后设置keys(字段名数组)，columnNames(excel表头)，两者是一一对应的，然后循环账单list, 填充表格，然后调用ExcelUtil.downloadExcel方法导出excel，底层是通过调用apache的POI组件实现的。</p><h2 id="5-4团队合作设计过程实现（git进行下的版本管理）"><a href="#5-4团队合作设计过程实现（git进行下的版本管理）" class="headerlink" title="5.4团队合作设计过程实现（git进行下的版本管理）"></a>5.4团队合作设计过程实现（git进行下的版本管理）</h2><p>计划利用git进行项目的版本管理，专项负责人已掌握通过vscode进行git的分支管理技术，例如git branch xx(创建分支) , git checkout xx(切换分支), git mergexx(项目合并)等操作.因为部分组员在git官网下载的64位版本被系统识别不适用，且尝试与组长沟通解决未果，所以本团队共同商议决定统一将自己实现的部分上交组长，由组长试运行检验，接着通过腾讯会议将已完成部分交付组员并部署下一步各自任务，让团队可以通过共同讨论，参与，实现前后端的功能衔接，最终分别于7.4，7.7，7.9发布三个版本的项目（最终链接已附在目录下方）。为弥补本团队因特殊原因无法完美实现git版本管理功能的遗憾，本团队对此项目的开发进行了开发日志管理，下附开发日志。</p><p><img src="/img/AA/clip_image014.png" alt="日志"></p><h1 id="第六章-测试报告"><a href="#第六章-测试报告" class="headerlink" title="第六章 测试报告"></a>第六章 测试报告</h1><h2 id="6-1-功能检验"><a href="#6-1-功能检验" class="headerlink" title="6.1 功能检验"></a>6.1 功能检验</h2><p>(1)登录页面</p><p><img src="/img/AA/clip_image016.png" alt="登录页面"></p><p>⑵ 注册页面</p><p><img src="/img/AA/clip_image018.png" alt="注册页面"></p><p>(3)   系统首页</p><p><img src="/img/AA/clip_image020.png" alt="系统首页"></p><p>(4)   团长页面</p><p><img src="/img/AA/clip_image022.png" alt="团长页面"></p><p>(5)   团员页面</p><p><img src="/img/AA/clip_image024.png" alt="团员页面"></p><p>不是自己加入的团：</p><p><img src="/img/AA/clip_image026.png" alt="不是自己加入的团"></p><p>(6)   创建团队页面</p><p><img src="/img/AA/clip_image028.png" alt="创建团队页面"></p><p><img src="/img/AA/clip_image030.png" alt="创建团队页面"></p><p>(7)   开始&#x2F;结束活动页面</p><p><img src="/img/AA/clip_image032.png" alt="开始活动页面"></p><p><img src="/img/AA/clip_image034.png" alt="结束活动页面"></p><p>(8)   追加费用页面</p><p><img src="/img/AA/clip_image036.png" alt="追加费用页面"></p><p><img src="/img/AA/clip_image038.png" alt="追加费用页面"></p><p>(9)   缴费页面</p><p><img src="/img/AA/clip_image040.png" alt="缴费页面"></p><p>(10)   AA制账单页面</p><p><img src="/img/AA/clip_image042.png" alt="AA制账单页面"></p><p>(11)   数据库密码安全页面</p><p><img src="/img/AA/clip_image043.png" alt="数据库密码安全页面"></p><p>(12)   导出excel页面</p><p><img src="/img/AA/clip_image045.png" alt="导出excel页面"></p><h1 id="结-论"><a href="#结-论" class="headerlink" title="结 论"></a>结 论</h1><h2 id="1、任务完成情况"><a href="#1、任务完成情况" class="headerlink" title="1、任务完成情况"></a>1、任务完成情况</h2><p>（1）登陆注册功能都可以实现</p><p>（2）团长能够创建活动，但是没有实现通知团员功能</p><p>（3）团员可以申请加入活动</p><p>（4）缴纳团费，模拟缴费，AA制缴费均以实现</p><p>（5）用户可以参加多个活动，且每次团队活动记录参加人员</p><p>（6）成功实现将活动账单导入到Excel表格中</p><p>（7）活动结束后可以生成活动报告</p><p>（7）未能实现Docker部署和以微服务方式运行</p><h2 id="2、问题总结"><a href="#2、问题总结" class="headerlink" title="2、问题总结"></a>2、问题总结</h2><p>[CR]:</p><p>（1）需求分析环节未提前考虑到对团员隐私的保护，虽然考虑到了非拼团创建者无权改变团队活动的状态，但是对生成报告的功能未进行合理保护</p><p>（2）docker已实现将项目部署上传到我们租借的阿里云服务器，但是未能成功运行springboot项目，已尝试百度常用解决办法（关闭防火墙，重启docker，修改登录拦截器）最终依旧未能实现运行，采用本地localhost运行。</p><p><img src="/img/AA/clip_image047.png" alt="img"></p><p><img src="/img/AA/clip_image049.png" alt="img"></p><p>（3）考虑到指导老师于7号提出的建议，特决定对用户表的password实现保护，即采用md5技术实现对其单向加密。</p><p>（4）关于git的版本管理，我们进行了三次大更新，分别完善了其前端页面，AA机制等已上传到github</p><p>[XY]:</p><p>（1）对于MyBatis—Plus的熟悉程度不够，花费一些时间在狂神说上学习了MP后，了解了其中的一些基础。</p><p>（2）对MySQL的认知更深刻了，对其存储、索引、优化等方面都有了一定的掌握。</p><p>（3）经过这次实验，对于MyBatis—Plus的强大功能有了更深层次的认识，采用Maven插件快速生成了Mapper、Model、Service、Controller代码，使用起来相较MyBatis而言更加便捷。</p><p>[XH]:</p><p>(1)Springboot框架不够熟练，花费大量时间在熟悉框架上，致使项目开发匆忙；</p><p>(2) 使用Spring boot报错时，难以定位问题所在；</p><p>(3) 项目的数据传输较为复杂，我经常弄混或忘记； </p><p>(4) 新学习到了导出账单的功能实现；</p><p>(5) 协助编写前端也让我学到很多，例如thymeleaf,提高了页面、代码的复用性，以及对    jQuery的ajax方法的熟悉；</p><p>(6) 经过这次项目，对SpringBoot+MybatisPlus整合更加熟悉，配置文件的减少，让我体验到了效率的提高。</p><p>[XLJ]:</p><p>（1）jQuery的ajax方法不熟悉，所以花费了大量的时间进行准备，以此来完成本次实践项目的前端开发</p><p>（2）表格使用了bootstrapTable,也是通过网上资料的查阅与学习，一步步来进行前端的开发</p><p>（3）在配置弹窗时用到了layer.js方面的知识，通过自身的学习以及组员之间的相互讨论，最终完成了前端的开发。</p><p>  项目源码地址：<a href="https://github.com/ChengRui79/pintuanAA-version3.0.git">https://github.com/ChengRui79/pintuanAA-version3.0.git</a></p><p>  部署服务器url：<a href="http://47.110.34.43/">http://47.110.34.43/</a></p><h1 id="参-考-文-献"><a href="#参-考-文-献" class="headerlink" title="参 考 文 献"></a>参 考 文 献</h1><p>[1] 黑马程序员编著. Java EE企业级应用开发教程[M]. 人民邮电出版社 2017年</p><p>[2] 详细SpringBoot教程之入门[ED&#x2F;OL]：<a href="http://t.csdn.cn/aqMNh">http://t.csdn.cn/aqMNh</a></p><p>[3] Springboot,SSM及SSH的概念、优点、区别及缺点[ED&#x2F;OL]: <a href="http://t.csdn.cn/s4Vbw">http://t.csdn.cn/s4Vbw</a></p><p>[4] Springboot+Mybatis+EasyPOI 进行对MySQL数据库内表进行导入导出[ED&#x2F;OL]: <a href="http://t.csdn.cn/M0R2t">http://t.csdn.cn/M0R2t</a></p><p>[5] SpringBoot开发单体应用[ED&#x2F;OL]: <a href="http://t.csdn.cn/qVn4P">http://t.csdn.cn/qVn4P</a></p><p>[6] mybatis-plus超详细讲解[ED&#x2F;OL]: <a href="http://t.csdn.cn/We21U">http://t.csdn.cn/We21U</a></p><p>[7] MyBatisPlus最新完整教程通俗易懂:</p><p> <a href="https://www.bilibili.com/video/BV17E411N7KN?p=12&share_source=copy_web">https://www.bilibili.com/video/BV17E411N7KN?p=12&amp;share_source=copy_web</a></p><p>[8] 130SSM阶段实战-实战-登录-MD5加密1[ED&#x2F;OL]: <a href="http://www.bilibili.com/video/BV1Va411J7Qd?spm_id_form=333.880.my_history.page.click">http://www.bilibili.com/video/BV1Va411J7Qd?spm_id_form=333.880.my_history.page.click</a></p><p>[9] MD5[ED&#x2F;OL]: <a href="http://t.csdn.cn/pnpjt">http://t.csdn.cn/pnpjt</a></p><p>[10] docker常用命令大全[ED&#x2F;OL]: <a href="https://www.cnblogs.com/qq-965324258/articles/14911469.html">https://www.cnblogs.com/qq-965324258/articles/14911469.html</a></p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>springboot</tag>
      
      <tag>java</tag>
      
      <tag>AA拼团</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>the reaction to The Art of Software Testing</title>
    <link href="/2023/04/02/The%20Art%20of%20Software%20Testing/"/>
    <url>/2023/04/02/The%20Art%20of%20Software%20Testing/</url>
    
    <content type="html"><![CDATA[<p>本书我最喜欢的一句话：“测试是为发现错误而执行程序的过程”</p><span id="more"></span><p class="note note-primary">本书我最喜欢的一句话：“测试是为发现错误而执行程序的过程”<p><p>某种意义上来说，The Art of Software Testing也正是起源于这句话。</p><h2 id="软件测试的心理学与经济学"><a href="#软件测试的心理学与经济学" class="headerlink" title="软件测试的心理学与经济学"></a>软件测试的心理学与经济学</h2><h3 id="心理学：软件测试是什么？意义何在？"><a href="#心理学：软件测试是什么？意义何在？" class="headerlink" title="心理学：软件测试是什么？意义何在？"></a>心理学：软件测试是什么？意义何在？</h3><p>是什么：“测试是为发现错误而执行程序的过程”</p><p>意义：为软件&#x2F;程序增加价值、可靠性、质量</p><p>​人类行为总是具有高度目标性，确立一个目标有着重要的心理学影响。也就是说理想的状态是我们的初始目的被定为证明程序中存在的错误。从这一角度来看，它向我们暗示了测试往往是一个“施虐”的过程。</p><h3 id="经济学：企图发现程序中所存在的所有的错误的想法是不切实际的"><a href="#经济学：企图发现程序中所存在的所有的错误的想法是不切实际的" class="headerlink" title="经济学：企图发现程序中所存在的所有的错误的想法是不切实际的"></a>经济学：企图发现程序中所存在的所有的错误的想法是不切实际的</h3><p>​为了应对其经济学的挑战，测试之前应该建立某种策略。黑盒测试与白盒测试是两种最普遍的策略</p><h4 id="黑盒测试"><a href="#黑盒测试" class="headerlink" title="黑盒测试"></a>黑盒测试</h4><h4 id="白盒测试"><a href="#白盒测试" class="headerlink" title="白盒测试"></a>白盒测试</h4>]]></content>
    
    
    <categories>
      
      <category>reaction</category>
      
      <category>Software Testing</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Software Testing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android_project</title>
    <link href="/2023/04/02/Android-project/"/>
    <url>/2023/04/02/Android-project/</url>
    
    <content type="html"><![CDATA[<h1 id="移动互联网开发技术"><a href="#移动互联网开发技术" class="headerlink" title="移动互联网开发技术"></a>移动互联网开发技术</h1><h1 id="一、任务与要求"><a href="#一、任务与要求" class="headerlink" title="一、任务与要求"></a>一、任务与要求</h1><ol><li><p>任务描述：开发一个班费日常使用记录的APP，记账员记录班费的收支情况，每笔支出需要包含日期、金额、购买的实物照片、购物小票（如果有）、实物的验收人。班级成员可以查看和查询班费的开支情况，可以在1周内（讨论期）对当笔开支提出质疑，班委成员回复质疑，所有质疑和应答全员可见。班级成员半数以上确认且所有质疑经发起人确认可以close的记录，可以标记为已确认状态，之后任何人无权再修改。超过讨论期未close的质疑自动close。</p></li><li><p>鼓励扩展的功能：记录归档、多班级支持。</p></li><li><p>前后端分离，鼓励使用区块链、跨端开发、云平台等新技术。</p></li></ol><h1 id="二、评分和验收标准"><a href="#二、评分和验收标准" class="headerlink" title="二、评分和验收标准"></a>二、评分和验收标准</h1><p>1.评分标准</p><p><strong>课程考察环节、分值、评价细则与课程目标的对应关系</strong></p><table><thead><tr><th>考察环节</th><th>评价标准</th><th>权重分值&#x2F;100</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>优秀(90-100)</td><td>良好(80-89)</td><td>中等 (70-79)</td><td>及格 (60-69)</td><td>不及格 (&lt;60)</td><td></td><td></td></tr><tr><td>方案  架构</td><td>UI逻辑合理。  数据存储方案合理。  前端和后端的架构和逻辑合理。  后端有访问控制和角色控制和相关逻辑。</td><td>UI逻辑合理。  数据存储方案合理。  前端和后端的架构和逻辑合理。  后端缺少访问控制和角色划分。但业务逻辑或控制逻辑有明显不合理的地方。</td><td>UI逻辑合理。  数据存储方案合理。  后端提供了简单的访问接口，但缺少访问控制。</td><td>UI逻辑合理。  数据存储方案合理。  后端提供了部分访问接口。</td><td>UI逻辑一般。  数据没有远端控制。</td><td>20</td></tr><tr><td>使用工具</td><td>能够在实机和虚拟机上操作演示。  有版本控制。  使用开发工具和技术链配合较好。</td><td>仅能在虚拟机上演示。  有版本控制。  使用了集成开发工具，但各工具配合紧密度一般。</td><td>能在虚拟机上演示。  有版本控制。  使用了单一工具。</td><td>能在虚拟机上演示。  无版本控制。  使用了单一工具。</td><td>无法在虚拟机上演示。</td><td>20</td></tr><tr><td>方法创新</td><td>系统设计有独到见解或设计有较大创新，对课题有较深刻的分析和研究。</td><td>系统设计有所创新，对课题有较正确的分析和研究。</td><td>系统设计正确，论证严密，但见解不多。</td><td>系统设计基本正确，论证基本清楚，但缺乏见解。</td><td>系统设计不对，内容空泛，结构混乱。</td><td>20</td></tr><tr><td>文档质量</td><td>内容准确、完整，文字流畅，排版优美，设计方案内容详实充分。结合核心源代码说明方案的实现。</td><td>内容比较准确、完整，文字比较流畅，排版比较优美，设计方案内容准确。  有源代码说明但对核心代码的把握有偏差。</td><td>内容完整，无大的语法错误，有设计方案内容。  有源代码的copy但缺少说明。</td><td>内容残缺不全，但基本能看懂，有一定的设计方案内容。  源代码缺少说明。</td><td>逻辑混乱，无设计方案内容。  无法对代码给出说明。</td><td>20</td></tr><tr><td>软件质量</td><td>系统有一定的工作量，系统界面优美，软件功能完整，源程序代码规范、清晰、整洁，有较高的质量，无明显bug</td><td>系统界面友好，源程序代码规范，软件质量较好，bug较少</td><td>系统界面一般，源程序代码规范，软件质量一般,bug较多</td><td>系统界面一般，软件质量一般，bug较多，功能基本实现</td><td>软件设计能力差界面一般，软件质量较差，bug较多，功能没有实现</td><td>20</td></tr></tbody></table><h1 id="三、报告内容"><a href="#三、报告内容" class="headerlink" title="三、报告内容"></a>三、报告内容</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h2><h3 id="1-1任务分解"><a href="#1-1任务分解" class="headerlink" title="1.1任务分解"></a>1.1任务分解</h3><p>系统分为三个功能角色：记账员、班委成员、班级成员，其主要职能如下：</p><p>1.记账员主要对日常的开支进行记录</p><p>2.班委成员主要对班级成员提出的质疑进行回复说明</p><p>3.班级成员主要对记账员记录的开支进行质疑，以及对班委成员的回复进行通过</p><h3 id="1-2开发工具和工具的配合"><a href="#1-2开发工具和工具的配合" class="headerlink" title="1.2开发工具和工具的配合"></a>1.2开发工具和工具的配合</h3><p>  使用的主要开发工具有IntelliJ IDEA2021（后端spring boot项目开发），Android Studio（前端app开发），Mysql（数据库），Navicat for Mysql，夜神模拟器，华为nova7手机（真机安装运行），腾讯云轻量服务器（后端云部署）</p><h2 id="2-总体设计"><a href="#2-总体设计" class="headerlink" title="2 总体设计"></a>2 总体设计</h2><h3 id="2-1设计模式"><a href="#2-1设计模式" class="headerlink" title="2.1设计模式"></a>2.1设计模式</h3><p>​    后端spring boot项目采用MVC设计模式如下图：</p><p><img src="/img/Android-project/clip_image002.gif" alt="spring boot项目结构图"></p><h3 id="2-2Android核心组件"><a href="#2-2Android核心组件" class="headerlink" title="2.2Android核心组件"></a>2.2Android核心组件</h3><p>​    Recylerview、Glide（图片加载）、activity、fragment、Okthhp（实现客户端与服务器端通信）</p><h2 id="3-详细设计"><a href="#3-详细设计" class="headerlink" title="3 详细设计"></a>3 详细设计</h2><h3 id="3-1spring-boot属性配置"><a href="#3-1spring-boot属性配置" class="headerlink" title="3.1spring boot属性配置"></a>3.1spring boot属性配置</h3><p>配置应用端口88，配置腾讯云服务器远端数据库及其密码，以及图片上传云端位置</p><p><strong>server.port</strong>&#x3D;**88<br>** <strong>spring.thymeleaf.cache</strong>&#x3D;<strong>false<br> spring.datasource.name</strong>&#x3D;**spell-group-datasource<br>** <strong>spring.datasource.driverClassName</strong>&#x3D;**com.mysql.cj.jdbc.Driver<br>** <strong>spring.datasource.url</strong>&#x3D;**jdbc:mysql:&#x2F;&#x2F;49.233.46.138:3306&#x2F;jilu?useUnicode&#x3D;true&amp;serverTimezone&#x3D;Asia&#x2F;Shanghai&amp;characterEncoding&#x3D;utf8&amp;autoReconnect&#x3D;true&amp;useSSL&#x3D;false&amp;allowMultiQueries&#x3D;true<br>** <strong>spring.datasource.username</strong>&#x3D;**jilu<br>** <strong>spring.datasource.password</strong>&#x3D;<strong>12345678</strong></p><p>  <strong>file.upload.path</strong>&#x3D;<strong>&#x2F;home&#x2F;Android&#x2F;upload</strong></p><h3 id="3-2Android-Studio定义的部分API地址"><a href="#3-2Android-Studio定义的部分API地址" class="headerlink" title="3.2Android Studio定义的部分API地址"></a>3.2Android Studio定义的部分API地址</h3><p>  下列举了腾讯云服务器url，图片存储url，注册，登录，图片上传，班费列表等API地址</p><p>public static String <em>mainHost</em> &#x3D; “<a href="http://49.233.46.138:88/">http://49.233.46.138:88</a>“;<br> public static String <em>mainImgHost</em> &#x3D; “<a href="http://49.233.46.138:88/public/getImg?path=">http://49.233.46.138:88/public/getImg?path=</a>“;<br> &#x2F;&#x2F;注册<br> public static String <em>regiestUrl</em> &#x3D; “&#x2F;app&#x2F;comments&#x2F;registered”;<br> &#x2F;&#x2F;登录<br> public static String <em>loginUrl</em> &#x3D; “&#x2F;app&#x2F;comments&#x2F;login”;<br> &#x2F;&#x2F;图片上传<br> public static String <em>photoUploadUrl</em> &#x3D; “&#x2F;public&#x2F;photoUpload”;</p><p>&#x2F;&#x2F;班费列表</p><p>​    public static String listAllbanfeiInfoUrl &#x3D; “&#x2F;banfeiInfo&#x2F;list”;</p><h3 id="3-3云服务器配置"><a href="#3-3云服务器配置" class="headerlink" title="3.3云服务器配置"></a>3.3云服务器配置</h3><p>​    1.开放端口88</p><p><img src="/img/Android-project/clip_image004.gif" alt=" 端口开放"></p><p>  2.配置服务器相关（jdk,tomcat,数据库等相关环境安装）</p><p>  3.springboot打jar包上传并启动服务器端（有两种启动方式命令1. java -jar server.jar随终端启动2. nohup java -jar server.jar后台一直运行，为节约系统资源这里采用方式1）</p><p><img src="/img/Android-project/clip_image006.gif" alt="云服务器终端启动服务器端"></p><h3 id="3-4相关功能设计（部分）"><a href="#3-4相关功能设计（部分）" class="headerlink" title="3.4相关功能设计（部分）"></a>3.4相关功能设计（部分）</h3><p>  1.登录</p><p>  后端（controller层）</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs dart"> <span class="hljs-meta">@ApiOperation</span>(value = <span class="hljs-string">&quot;登录&quot;</span>, httpMethod = <span class="hljs-string">&quot;POST&quot;</span>, notes = <span class="hljs-string">&quot;加载数据&quot;</span>, response = ResponseData.<span class="hljs-keyword">class</span>)<br><span class="hljs-meta">@ApiImplicitParams</span>(&#123;<br>        <span class="hljs-meta">@ApiImplicitParam</span>(name = <span class="hljs-string">&quot;UserAccount&quot;</span>, value = <span class="hljs-string">&quot;账号&quot;</span>, <span class="hljs-keyword">required</span> = <span class="hljs-keyword">false</span>, paramType = <span class="hljs-string">&quot;query&quot;</span>, dataType = <span class="hljs-string">&quot;string&quot;</span>),<br>        <span class="hljs-meta">@ApiImplicitParam</span>(name = <span class="hljs-string">&quot;UserPwd&quot;</span>, value = <span class="hljs-string">&quot;密码&quot;</span>, <span class="hljs-keyword">required</span> = <span class="hljs-keyword">false</span>, paramType = <span class="hljs-string">&quot;query&quot;</span>, dataType = <span class="hljs-string">&quot;string&quot;</span>)<br>&#125;)<br><span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">&quot;login&quot;</span>)<br>public ResponseData listAll(<span class="hljs-meta">@ApiIgnore</span> <span class="hljs-built_in">String</span> demoUserAccount, <span class="hljs-meta">@ApiIgnore</span> <span class="hljs-built_in">String</span> demoUserPwd) &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        UserInfo user = userInfoMapper.getUserByAccount(demoUserAccount);<br>        <span class="hljs-keyword">if</span> (demoUserPwd.equals(user.getPassword())) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ResponseData().data(user).success();<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ResponseData().fail(<span class="hljs-number">10003</span>, <span class="hljs-string">&quot;用户名或密码错误&quot;</span>);<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>        e.printStackTrace();<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ResponseData().fail(<span class="hljs-number">10002</span>, <span class="hljs-string">&quot;用户不存在&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>​    前端</p><p>OkGo.<String><em>get</em>(Myapi.<em>mainHost</em>+Myapi.<em>loginUrl</em>)登录请求的接口</p><p>.params(<strong>“UserAccount”</strong>,uname)<br> .params(<strong>“UserPwd”</strong>,pwd)<br> 参数：账号和密码</p><p>ToastUtils.showToast(LoginActivity.this,”登陆成功!”);</p><p>Intent intent3 &#x3D; new Intent(LoginActivity.this,MainActivity.class);</p><p>startActivity(intent3)</p><p>当后端的@RequestParam中的值要和前端的params中的参数命名对应上，登录成功之后跳转到主页</p><p>2.注册</p><p>后端（controller层）</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs dart"> <span class="hljs-meta">@ApiOperation</span>(value = <span class="hljs-string">&quot;register&quot;</span>, httpMethod = <span class="hljs-string">&quot;POST&quot;</span>, notes = <span class="hljs-string">&quot;加载数据&quot;</span>, response = UserInfo.<span class="hljs-keyword">class</span>)<br><span class="hljs-meta">@ApiImplicitParams</span>(&#123;<br>        <span class="hljs-meta">@ApiImplicitParam</span>(name = <span class="hljs-string">&quot;userAccount&quot;</span>, value = <span class="hljs-string">&quot;手机号&quot;</span>, <span class="hljs-keyword">required</span> = <span class="hljs-keyword">false</span>, paramType = <span class="hljs-string">&quot;query&quot;</span>, dataType = <span class="hljs-string">&quot;string&quot;</span>),<br>        <span class="hljs-meta">@ApiImplicitParam</span>(name = <span class="hljs-string">&quot;userName&quot;</span>, value = <span class="hljs-string">&quot;姓名&quot;</span>, <span class="hljs-keyword">required</span> = <span class="hljs-keyword">false</span>, paramType = <span class="hljs-string">&quot;query&quot;</span>, dataType = <span class="hljs-string">&quot;string&quot;</span>),<br>        <span class="hljs-meta">@ApiImplicitParam</span>(name = <span class="hljs-string">&quot;userPwd&quot;</span>, value = <span class="hljs-string">&quot;密码&quot;</span>, <span class="hljs-keyword">required</span> = <span class="hljs-keyword">false</span>, paramType = <span class="hljs-string">&quot;query&quot;</span>, dataType = <span class="hljs-string">&quot;string&quot;</span>), <br>&#125;)<br><span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">&quot;registered&quot;</span>)<br>public ResponseData registered(<span class="hljs-built_in">String</span> userAccount, <span class="hljs-built_in">String</span> userPwd,<span class="hljs-built_in">String</span> logo,<span class="hljs-built_in">String</span> qianming,<span class="hljs-built_in">String</span> phone) &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        UserInfo user = userInfoMapper.getUserByAccount(userAccount);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">null</span> == user) &#123;<br>            UserInfo demoUser = <span class="hljs-keyword">new</span> UserInfo();<br>            demoUser.setName(userAccount);<br>            demoUser.setPassword(userPwd);<br>            demoUser.setPhone(phone);<br><br>            userInfoMapper.insertIgnoreNull(demoUser);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ResponseData().fail(<span class="hljs-number">10001</span>, <span class="hljs-string">&quot;账号已存在，请更换。&quot;</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>        e.printStackTrace();<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ResponseData().fail(<span class="hljs-number">500</span>, e.getMessage());<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ResponseData().success();<br>&#125;<br></code></pre></td></tr></table></figure><p>前端</p><p>OkGo.<String>post(Myapi.mainHost+Myapi.regiestUrl)表示：网络请求地址</p><p>.params(“userAccount”,name)</p><p>.params(“userPwd”,pwd)</p><p>参数：姓名，密码</p><p>public void onSuccess(Response<String> response) {</p><p>表示请求响应的结果</p><p>if(code &#x3D;&#x3D; 200){</p><p>​          ToastUtils.showToast(RegiestActivity.this,”注册成功!”);</p><p>​          finish();</p><p>​        }else {</p><p>​          ToastUtils.showToast(RegiestActivity.this,”注册失败!”);</p><p>​        }</p><p>这里判断响应的code值，如果是200提示注册成功，反之则提示注册失败</p><p>  注意这里的注册默认为班级成员注册，因为是班级内部记账app，所以记账员及班委成员role需要在数据库内自行设置。</p><p>​    </p><p>4.班费清单列表</p><p>后端（controller层）</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">@<span class="hljs-constructor">ApiOperation(<span class="hljs-params">value</span> = <span class="hljs-string">&quot;Read&quot;</span>, <span class="hljs-params">httpMethod</span> = <span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-params">notes</span> = <span class="hljs-string">&quot;加载数据&quot;</span>, <span class="hljs-params">response</span> = Result.<span class="hljs-params">class</span>)</span><br>@<span class="hljs-constructor">RequestMapping(<span class="hljs-string">&quot;list&quot;</span>)</span><br>public Result <span class="hljs-built_in">list</span><span class="hljs-constructor">All()</span> &#123;<br>   <span class="hljs-keyword">try</span> &#123;<br>      List&lt;BanfeiInfo&gt; <span class="hljs-built_in">list</span> = banfeiInfoMapper.<span class="hljs-built_in">list</span><span class="hljs-constructor">All()</span>;<br>        return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ResultGenerator</span>.</span></span>gen<span class="hljs-constructor">SuccessResult(<span class="hljs-params">list</span>)</span>;<br>    &#125; catch (Exception e) &#123;<br>        e.print<span class="hljs-constructor">StackTrace()</span>;<br>        return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ResultGenerator</span>.</span></span>gen<span class="hljs-constructor">ErrorResult(500,<span class="hljs-params">e</span>.<span class="hljs-params">getMessage</span>()</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>前端</p><p>private void getAllData() {<br>  OkGo.<String><em>post</em>(Myapi.<em>mainHost</em>+ Myapi.<em>listAllbanfeiInfoUrl</em>)<br>       .execute(new StringCallback() {<br>         @Override<br>         public void onSuccess(Response<String> response) {<br>           Log.<em>e</em>(“班费列表”,response.body());<br>           BanFeiBean banFeiBean &#x3D; JSONUtils.<em>parserObject</em>(response.body(),BanFeiBean.class);<br>           int code &#x3D; banFeiBean.getResultCode();</p><p>if(code &#x3D;&#x3D; 200){</p><p>List&lt;BanFeiBean.Data&gt; data &#x3D; banFeiBean.getData();<br> adapter &#x3D; new BanFeiAdapter(BanweiActivity.this,R.layout.<em>list_item_banfei</em>,data);<br> recyclerView.setAdapter(adapter);<br> …}}</p><p>OkGo.<String>post(Myapi.mainHost+ Myapi.listAllbanfeiInfoUrl)接口，无需传入参数，因为查询的是所有的班费列表通过Recyclerview控件展示列表</p><h3 id="3-5技术难点"><a href="#3-5技术难点" class="headerlink" title="3.5技术难点"></a>3.5技术难点</h3><p>通过下载安装包，真机运行班费记录app（脱离usb限制），通过通过签名jks的方式实现。</p><h2 id="4测试及出现过的问题及其解决方法"><a href="#4测试及出现过的问题及其解决方法" class="headerlink" title="4测试及出现过的问题及其解决方法"></a>4测试及出现过的问题及其解决方法</h2><h3 id="4-1测试界面"><a href="#4-1测试界面" class="headerlink" title="4.1测试界面"></a>4.1测试界面</h3><p>1.登录界面（三种身份选择）</p><p><img src="/img/Android-project/clip_image008.gif" alt="登录界面"></p><p>2.注册界面（仅可注册班级成员，记账员及班委为数据库设置）</p><p><img src="/img/Android-project/clip_image010.gif" alt="注册界面"></p><p>4.主页（记账员身份进入）</p><p><img src="/img/Android-project/clip_image012.gif" alt="主页"></p><p>5.记账员发布账单</p><p><img src="/img/Android-project/clip_image014.gif" alt="记账"></p><p><img src="/img/Android-project/clip_image016.gif" alt="账单已更新"></p><p>6.提出质疑</p><p><img src="/img/Android-project/clip_image018.gif" alt=" 班级成员发布质疑"></p><p><img src="/img/Android-project/clip_image020.gif" alt="质疑已公布"></p><p>6.班委回复质疑</p><p><img src="/img/Android-project/clip_image022.gif" alt="班委回复质疑"></p><p><img src="/img/Android-project/clip_image024.gif" alt="质疑已回复"></p><p>8.班级成员通过质疑</p><p><img src="/img/Android-project/clip_image026.gif" alt="班级半数以上确认"></p><p>9.质疑人close质疑（未超过半数班级成员确认关闭无效）</p><p><img src="/img/Android-project/clip_image028.gif" alt="质疑人close质疑"></p><p>10.质疑已close</p><p><img src="/img/Android-project/clip_image030.gif" alt="质疑已关闭"></p><p>  11.真机安装包下载及运行</p><p><img src="/img/Android-project/clip_image031.gif" alt="真机安装包下载及运行 "><img src="/img/Android-project/clip_image033.gif" alt="img"></p><h3 id="4-2出现的问题及解决方案"><a href="#4-2出现的问题及解决方案" class="headerlink" title="4.2出现的问题及解决方案"></a>4.2出现的问题及解决方案</h3><p>​    1.Android Studio开发的客户端打Debug包手机无法安装</p><p><img src="/img/Android-project/clip_image035.gif" alt=" 安装失败"></p><p>​    解决方案：通过签名jks生成release包，最终实现apk打包安装</p><p><img src="/img/Android-project/clip_image037.gif" alt="生成jks文件"></p><p>​    2.云服务器88端口无法访问（端口已开放）</p><p>​    解决方案：查阅资料意识到可能是服务器内的系统放火墙未放通导致，使用systemctl stop firewalld 命令来进行关闭，最终解决问题。</p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5 总结"></a>5 总结</h2><h3 id="5-1全面总结"><a href="#5-1全面总结" class="headerlink" title="5.1全面总结"></a>5.1全面总结</h3><p>​    本实践采用前后端分离模式开发，基于spring boot的服务器端，Android Studio的客户端实现项目功能。大体实现如下功能：</p><p>记账员：记录班费记录及验收人</p><p>班委：对班级成员的质疑进行回复</p><p>班级成员：对班费账单进行质疑（半数以上班级成员通过才能由质疑人close，或者超过讨论期未close的质疑自动close），通过班委的回复</p><p>在此基础上进行了云部署，成功将服务器端部署到腾讯云服务器上运行，此外客户端通过jks签名打release包安装到了真机运行。</p><p>本项目采用git进行版本控制，仓库地址如下:</p><p><a href="https://github.com/ChengRui79/Android-charge-account.git">https://github.com/ChengRui79/Android-charge-account.git</a></p><p><img src="/img/Android-project/clip_image039.gif" alt="github仓库"></p><h3 id="5-2未完成的部分"><a href="#5-2未完成的部分" class="headerlink" title="5.2未完成的部分"></a>5.2未完成的部分</h3><p>​    未完成的部分有：个人中心（对个人的注册信息及质疑，通过记录进行展示）；多班级支持（可实现多个班级共同使用，即分班级对进行班费使用进行记录）；记录归档功能</p><h3 id="5-3收获"><a href="#5-3收获" class="headerlink" title="5.3收获"></a>5.3收获</h3><p>​    对spring boot的mvc模式开发有了更熟练的掌握，通过前后端分离的采用，使我初步接触了Android客户端与IntelliJ IDEA服务器端基于Okthhp通信的主流网络通信框架。同时也在云平台技术的使用上更加深入（这是我在腾讯云上部署的第二个项目，第一个项目是一个java web项目）相对来说在本次部署难度大了很多，但同时也觉得收获颇丰。当然在前端设计上考虑略有不足，例如在用户注册页面，role显然不适合选择，由于前期分析不足，未考虑权限的特殊性，导致注册页面设计不合理，后删去role选择功能，默认班级成员。希望在以后的学习过程中多多接触新技术，不断提升能力。</p><h2 id="6参考文献"><a href="#6参考文献" class="headerlink" title="6参考文献"></a>6参考文献</h2><p>[1] Android客户端连接服务器- OKHttp的简单实用方法[ED&#x2F;OL]：<a href="https://blog.csdn.net/m0_47761892/article/details/107630036">https://blog.csdn.net/m0_47761892/article/details/107630036</a> </p><p>[2] 如何把android studio中的项目发布到手机上（超详细版）[ED&#x2F;OL]：<a href="https://blog.csdn.net/mlyhzt/article/details/126590913">https://blog.csdn.net/mlyhzt/article/details/126590913</a></p><p>[3] 详细SpringBoot教程之入门[ED&#x2F;OL]：<a href="https://blog.csdn.net/DBC_121/article/details/104383089">https://blog.csdn.net/DBC_121/article/details/104383089</a></p><p>[4] SpringBoot项目打包成jar包部署到宝塔面板(详细) [ED&#x2F;OL]：<a href="https://blog.csdn.net/weixin_47390965/article/details/124666474">https://blog.csdn.net/weixin_47390965/article/details/124666474</a></p><p>[5] 阿里云服务器配置及把java项目部署到服务器[ED&#x2F;OL]：<a href="https://blog.csdn.net/weixin_45831807/article/details/121213809">https://blog.csdn.net/weixin_45831807/article/details/121213809</a></p><p>[6] Spring Boot 接入[ED&#x2F;OL]：<a href="https://cloud.tencent.com/document/product/1416/56031">https://cloud.tencent.com/document/product/1416/56031</a></p><p>[7] Android中Glide的使用[ED&#x2F;OL]：<a href="https://blog.csdn.net/weixin_57542177/article/details/124074397?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167204971716782429745671%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=167204971716782429745671&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-124074397-null-null.142">https://blog.csdn.net/weixin_57542177/article/details/124074397?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167204971716782429745671%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167204971716782429745671&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-124074397-null-null.142</a></p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
      <category>Android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android</tag>
      
      <tag>springboot</tag>
      
      <tag>前后端分离</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/28/hello-world/"/>
    <url>/2023/03/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>others</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/01/22/%E4%B8%B2%E5%92%8C%E6%95%B0%E7%BB%84/"/>
    <url>/2023/01/22/%E4%B8%B2%E5%92%8C%E6%95%B0%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<div>  <iframe src="/pdfjs/web/viewer.html?file=/pdf/串和数组.pdf" width="100%" height="900px" frameborder="0"></iframe></div> ]]></content>
    
    
    <categories>
      
      <category>study</category>
      
      <category>数据结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
      <tag>串和数组</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/01/22/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%92%8C%E6%A0%91/"/>
    <url>/2023/01/22/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%92%8C%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<div>  <iframe src="/pdfjs/web/viewer.html?file=/pdf/二叉树和树.pdf" width="100%" height="900px" frameborder="0"></iframe></div> ]]></content>
    
    
    <categories>
      
      <category>study</category>
      
      <category>数据结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
      <tag>二叉树和树</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/01/22/%E5%9B%BE/"/>
    <url>/2023/01/22/%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<div>  <iframe src="/pdfjs/web/viewer.html?file=/pdf/图.pdf" width="100%" height="900px" frameborder="0"></iframe></div> ]]></content>
    
    
    <categories>
      
      <category>study</category>
      
      <category>数据结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
      <tag>图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/01/22/%E6%9F%A5%E6%89%BE%E5%8F%8A%E5%BA%94%E7%94%A8/"/>
    <url>/2023/01/22/%E6%9F%A5%E6%89%BE%E5%8F%8A%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<div>  <iframe src="/pdfjs/web/viewer.html?file=/pdf/查找及应用.pdf" width="100%" height="900px" frameborder="0"></iframe></div> ]]></content>
    
    
    <categories>
      
      <category>study</category>
      
      <category>数据结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
      <tag>查找及应用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/01/22/%E6%8E%92%E5%BA%8F%E5%8F%8A%E5%BA%94%E7%94%A8/"/>
    <url>/2023/01/22/%E6%8E%92%E5%BA%8F%E5%8F%8A%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<div>  <iframe src="/pdfjs/web/viewer.html?file=/pdf/排序及应用.pdf" width="100%" height="900px" frameborder="0"></iframe></div> ]]></content>
    
    
    <categories>
      
      <category>study</category>
      
      <category>数据结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
      <tag>排序及应用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/01/22/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/"/>
    <url>/2023/01/22/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</url>
    
    <content type="html"><![CDATA[<div>  <iframe src="/pdfjs/web/viewer.html?file=/pdf/栈和队列.pdf" width="100%" height="900px" frameborder="0"></iframe></div> ]]></content>
    
    
    <categories>
      
      <category>study</category>
      
      <category>数据结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
      <tag>栈和队列</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
